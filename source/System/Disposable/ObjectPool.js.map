{"version":3,"sources":["System/Disposable/ObjectPool.ts"],"names":[],"mappings":"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","file":"System/Disposable/ObjectPool.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon ObjectPool from Parallel Extension Extras and other ObjectPool implementations.\r\n * Uses .add(T) and .take():T\r\n */\r\n\r\nimport {dispose} from \"./dispose\";\r\nimport {DisposableBase} from \"./DisposableBase\";\r\nimport {TaskHandler} from \"../Threading/Tasks/TaskHandler\";\r\nimport {ArgumentOutOfRangeException} from \"../Exceptions/ArgumentOutOfRangeException\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nconst\r\n\tOBJECT_POOL       = \"ObjectPool\",\r\n\t_MAX_SIZE         = \"_maxSize\",\r\n\tABSOLUTE_MAX_SIZE = 65536,\r\n\tMUST_BE_GT1       = \"Must be at valid number least 1.\",\r\n\tMUST_BE_LTM       = `Must be less than or equal to ${ABSOLUTE_MAX_SIZE}.`;\r\n\r\nexport class ObjectPool<T> extends DisposableBase\r\n{\r\n\r\n\tprivate _pool:T[];\r\n\tprivate _trimmer:TaskHandler;\r\n\tprivate _flusher:TaskHandler;\r\n\tprivate _autoFlusher:TaskHandler;\r\n\r\n\t/**\r\n\t * A transient amount of object to exist over _maxSize until trim() is called.\r\n\t * But any added objects over _localAbsMaxSize will be disposed immediately.\r\n\t */\r\n\tprivate _localAbsMaxSize:number;\r\n\r\n\t/**\r\n\t * By default will clear after 5 seconds of non-use.\r\n\t */\r\n\tautoClearTimeout:number = 5000;\r\n\r\n\tconstructor(\r\n\t\tprivate _maxSize:number,\r\n\t\tprivate _generator:(...args:any[])=>T,\r\n\t\tprivate _recycler?:(o:T)=>void)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(isNaN(_maxSize) || _maxSize<1)\r\n\t\t\tthrow new ArgumentOutOfRangeException(_MAX_SIZE, _maxSize, MUST_BE_GT1);\r\n\t\tif(_maxSize>ABSOLUTE_MAX_SIZE)\r\n\t\t\tthrow new ArgumentOutOfRangeException(_MAX_SIZE, _maxSize, MUST_BE_LTM);\r\n\r\n\t\tthis._localAbsMaxSize = Math.min(_maxSize*2, ABSOLUTE_MAX_SIZE);\r\n\r\n\t\tvar _ = this;\r\n\t\t_._disposableObjectName = OBJECT_POOL;\r\n\t\t_._pool = [];\r\n\t\t_._trimmer = new TaskHandler(()=>_._trim());\r\n\t\tvar clear = ()=>_._clear();\r\n\t\t_._flusher = new TaskHandler(clear);\r\n\t\t_._autoFlusher = new TaskHandler(clear);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the maximum at which trimming should allow.\r\n\t * @returns {number}\r\n\t */\r\n\tget maxSize():number\r\n\t{\r\n\t\treturn this._maxSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Current number of objects in pool.\r\n\t * @returns {number}\r\n\t */\r\n\tget count():number\r\n\t{\r\n\t\tvar p = this._pool;\r\n\t\treturn p ? p.length : 0;\r\n\t}\r\n\r\n\tprotected _trim():void\r\n\t{\r\n\t\tvar pool = this._pool;\r\n\t\twhile(pool.length>this._maxSize)\r\n\t\t{\r\n\t\t\tdispose.withoutException(<any>pool.pop());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Will trim ensure the pool is less than the maxSize.\r\n\t * @param defer A delay before trimming.  Will be overridden by later calls.\r\n\t */\r\n\ttrim(defer?:number):void\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\tthis._trimmer.start(defer);\r\n\t}\r\n\r\n\tprotected _clear():void\r\n\t{\r\n\t\tvar _ = this, p = _._pool;\r\n\t\t_._trimmer.cancel();\r\n\t\t_._flusher.cancel();\r\n\t\t_._autoFlusher.cancel();\r\n\t\tdispose.these(<any>p, true);\r\n\t\tp.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Will clear out the pool.\r\n\t * Cancels any scheduled trims when executed.\r\n\t * @param defer A delay before clearing.  Will be overridden by later calls.\r\n\t */\r\n\tclear(defer?:number):void\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\tthis._flusher.start(defer);\r\n\t}\r\n\r\n\ttoArrayAndClear():T[]\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\t_._trimmer.cancel();\r\n\t\t_._flusher.cancel();\r\n\t\tvar p = _._pool;\r\n\t\t_._pool = [];\r\n\t\treturn p;\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for toArrayAndClear();\r\n\t */\r\n\tdump():T[]\r\n\t{\r\n\t\treturn this.toArrayAndClear();\r\n\t}\r\n\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tvar _ = this;\r\n\t\t_._generator = null;\r\n\t\t_._recycler = null;\r\n\t\tdispose(\r\n\t\t\t_._trimmer,\r\n\t\t\t_._flusher,\r\n\t\t\t_._autoFlusher\r\n\t\t);\r\n\t\t_._trimmer = null;\r\n\t\t_._flusher = null;\r\n\t\t_._autoFlusher = null;\r\n\r\n\t\t_._pool.length = 0;\r\n\t\t_._pool = null;\r\n\t}\r\n\r\n\textendAutoClear():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tvar t = _.autoClearTimeout;\r\n\t\tif(isFinite(t) && !_._autoFlusher.isScheduled)\r\n\t\t\t_._autoFlusher.start(t);\r\n\t}\r\n\r\n\tadd(o:T):void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tif(_._pool.length>=_._localAbsMaxSize)\r\n\t\t{\r\n\t\t\t// Getting too big, dispose immediately...\r\n\t\t\tdispose(<any>o);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(_._recycler) _._recycler(o);\r\n\t\t\t_._pool.push(o);\r\n\t\t\tvar m = _._maxSize;\r\n\t\t\tif(m<ABSOLUTE_MAX_SIZE && _._pool.length>m)\r\n\t\t\t\t_._trimmer.start(500);\r\n\t\t}\r\n\t\t_.extendAutoClear();\r\n\r\n\t}\r\n\r\n\ttake():T\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tvar e   = _._pool.pop() || _._generator(),\r\n\t\t    len = _._pool.length;\r\n\r\n\t\tif(_._pool.length<=_._maxSize)\r\n\t\t\t_._trimmer.cancel();\r\n\t\tif(len)\r\n\t\t\t_.extendAutoClear();\r\n\r\n\t\treturn e;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default ObjectPool;\r\n"]}