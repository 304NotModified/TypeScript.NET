{"version":3,"sources":["System/Collections/Enumeration/EmptyEnumerator.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;;;;IAIH,+BAA6B,kBAAkB,CAAC,CAAA;IAChD,0BAAwB,iBAAiB,CAAC,CAAA;IAE1C,IAAM,KAAK,GAAO,KAAK,CAAC,CAAC;IAQZ,uBAAe,GAAoB,MAAM,CAAC,MAAM,CAAC;QAC7D,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,qBAAS,CAAC,KAAK;QACzB,SAAS,EAAE,qBAAS,CAAC,KAAK;QAC1B,IAAI,EAAE,+BAAc,CAAC,OAAO;QAC5B,QAAQ,EAAE,+BAAc,CAAC,OAAO;QAChC,KAAK,EAAE,qBAAS,CAAC,KAAK;QACtB,OAAO,EAAE,qBAAS,CAAC,KAAK;QACxB,SAAS,EAAE,KAAK;KAChB,CAAC,CAAC;IACH;sBAAe,uBAAe,CAAC","file":"System/Collections/Enumeration/EmptyEnumerator.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport {Functions} from \"../../Functions\";\r\n\r\nconst VOID0:any = void 0;\r\n\r\n\r\n/**\r\n * A simplified stripped down enumerable that is always complete and has no results.\r\n * Frozen and exported as 'empty' to allow for reuse.\r\n */\r\n\r\nexport const EmptyEnumerator:IEnumerator<any> = Object.freeze({\r\n\tcurrent: VOID0,\r\n\tmoveNext: Functions.False,\r\n\tnextValue: Functions.Blank,\r\n\tnext: IteratorResult.GetDone,\r\n\t\"return\": IteratorResult.GetDone,\r\n\treset: Functions.Blank,\r\n\tdispose: Functions.Blank,\r\n\tisEndless: false\r\n});\r\nexport default EmptyEnumerator;"]}