{"version":3,"sources":["System/Collections/Enumeration/Enumerator.ts"],"names":[],"mappings":"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","file":"System/Collections/Enumeration/Enumerator.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {using} from \"../../Disposable/dispose\";\r\nimport {Type} from \"../../Types\";\r\nimport {ArrayEnumerator} from \"./ArrayEnumerator\";\r\nimport {IndexEnumerator} from \"./IndexEnumerator\";\r\nimport {UnsupportedEnumerableException} from \"./UnsupportedEnumerableException\";\r\nimport {Selector} from \"../../FunctionTypes\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IEnumerable} from \"./IEnumerable\";\r\nimport {IEnumerableOrArray} from \"../IEnumerableOrArray\";\r\nimport {InfiniteValueFactory, InfiniteEnumerator} from \"./InfiniteEnumerator\";\r\nimport {EmptyEnumerator as Empty} from \"./EmptyEnumerator\";\r\nimport {IIterator, IIteratorResult} from \"./IIterator\";\r\nimport {IteratorEnumerator} from \"./IteratorEnumerator\";\r\n\r\nconst\r\n\tVOID0:any                 = void(0),\r\n\tSTRING_EMPTY:string       = \"\",\r\n\tENDLESS_EXCEPTION_MESSAGE =\r\n\t\t'Cannot call forEach on an endless enumerable. ' +\r\n\t\t'Would result in an infinite loop that could hang the current process.';\r\n\r\nexport function throwIfEndless(isEndless:boolean):void\r\n{\r\n\tif(isEndless) throw new UnsupportedEnumerableException(ENDLESS_EXCEPTION_MESSAGE);\r\n}\r\n\r\nfunction initArrayFrom(\r\n\tsource:IEnumerableOrArray<any>|IEnumerator<any>,\r\n\tmax:number = Infinity):any[]\r\n{\r\n\tif(Array.isArray(source) || Type.isString(source))\r\n\t{\r\n\t\tvar len = Math.min(source.length, max);\r\n\t\tif(isFinite(len))\r\n\t\t{\r\n\t\t\tif(len>65535) return new Array(len);\r\n\t\t\tvar result:any[] = [];\r\n\t\t\tresult.length = len;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\treturn [];\r\n}\r\n\r\n\r\n// Could be array, or IEnumerable...\r\nexport function from<T>(source:IEnumerableOrArray<T>|InfiniteValueFactory<T>|IIterator<T>):IEnumerator<T>\r\n{\r\n\t// To simplify and prevent null reference exceptions:\r\n\tif(!source)\r\n\t\treturn Empty;\r\n\r\n\tif(Array.isArray(source))\r\n\t\treturn new ArrayEnumerator<T>(<T[]>source);\r\n\r\n\tif(Type.isArrayLike<T>(source))\r\n\t{\r\n\t\treturn new IndexEnumerator<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: source,\r\n\t\t\t\t\tlength: source.length,\r\n\t\t\t\t\tpointer: 0,\r\n\t\t\t\t\tstep: 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif(!Type.isPrimitive(source))\r\n\t{\r\n\t\tif(isEnumerable<T>(source))\r\n\t\t\treturn source.getEnumerator();\r\n\r\n\t\tif(Type.isFunction(source))\r\n\t\t\treturn new InfiniteEnumerator(source);\r\n\r\n\t\tif(isIterator(source))\r\n\t\t\treturn new IteratorEnumerator(source);\r\n\r\n\t}\r\n\r\n\tthrow new UnsupportedEnumerableException();\r\n}\r\n\r\nexport function isEnumerable<T>(instance:any):instance is IEnumerable<T>\r\n{\r\n\treturn Type.hasMemberOfType<IEnumerable<T>>(instance, \"getEnumerator\", Type.FUNCTION);\r\n}\r\n\r\nexport function isEnumerableOrArrayLike<T>(instance:any):instance is IEnumerableOrArray<T>\r\n{\r\n\treturn Type.isArrayLike(instance) || isEnumerable(instance);\r\n}\r\n\r\nexport function isEnumerator<T>(instance:any):instance is IEnumerator<T>\r\n{\r\n\treturn Type.hasMemberOfType<IEnumerator<T>>(instance, \"moveNext\", Type.FUNCTION);\r\n}\r\n\r\nexport function isIterator<T>(instance:any):instance is IIterator<T>\r\n{\r\n\treturn Type.hasMemberOfType<IIterator<T>>(instance, \"next\", Type.FUNCTION);\r\n}\r\n\r\n/**\r\n * Flexible method for iterating any enumerable, enumerable, array, or array-like object.\r\n * @param e The enumeration to loop on.\r\n * @param action The action to take on each.\r\n * @param max Stops after max is reached.  Allows for forEach to be called on infinite enumerations.\r\n * @returns the total times iterated.  If the enumerable is unrecognized then -1.\r\n */\r\nexport function forEach<T>(\r\n\te:IEnumerableOrArray<T>|IEnumerator<T>|IIterator<T>,\r\n\taction:(element:T, index?:number) => any,\r\n\tmax:number = Infinity):number\r\n{\r\n\tif(<any>e===STRING_EMPTY) return 0;\r\n\r\n\tif(e && max>0)\r\n\t{\r\n\t\tif(Type.isArrayLike<T>(e))\r\n\t\t{\r\n\t\t\t// Assume e.length is constant or at least doesn't deviate to infinite or NaN.\r\n\t\t\tthrowIfEndless(!isFinite(max) && !isFinite(e.length));\r\n\t\t\tlet i = 0;\r\n\t\t\tfor(; i<Math.min(e.length, max); i++)\r\n\t\t\t{\r\n\t\t\t\tif(action(e[i], i)===false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\r\n\t\tif(isEnumerator<T>(e))\r\n\t\t{\r\n\t\t\tthrowIfEndless(!isFinite(max) && e.isEndless);\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\t// Return value of action can be anything, but if it is (===) false then the forEach will discontinue.\r\n\t\t\twhile(max>i && e.moveNext())\r\n\t\t\t{\r\n\t\t\t\tif(action(e.current, i++)===false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\tif(isEnumerable<T>(e))\r\n\t\t{\r\n\t\t\tthrowIfEndless(!isFinite(max) && e.isEndless);\r\n\r\n\t\t\t// For enumerators that aren't EnumerableBase, ensure dispose is called.\r\n\t\t\treturn using(\r\n\t\t\t\t(<IEnumerable<T>>e).getEnumerator(),\r\n\t\t\t\tf=>forEach(f, action, max)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif(isIterator<T>(e)) {\r\n\t\t\t// For our purpose iterators are endless and a max must be specified before iterating.\r\n\t\t\tthrowIfEndless(!isFinite(max));\r\n\r\n\t\t\tlet i = 0, r:IIteratorResult<T>;\r\n\t\t\t// Return value of action can be anything, but if it is (===) false then the forEach will discontinue.\r\n\t\t\twhile(max>i && !(r = e.next()).done)\r\n\t\t\t{\r\n\t\t\t\tif(action(r.value, i++)===false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1;\r\n\r\n}\r\n\r\n/**\r\n * Converts any enumerable to an array.\r\n * @param source\r\n * @param max Stops after max is reached.  Allows for forEach to be called on infinite enumerations.\r\n * @returns {any}\r\n */\r\nexport function toArray<T>(\r\n\tsource:IEnumerableOrArray<T>|IEnumerator<T>,\r\n\tmax:number = Infinity):T[]\r\n{\r\n\tif(<any>source===STRING_EMPTY) return [];\r\n\r\n\tif(!isFinite(max) && Array.isArray(source))\r\n\t\treturn source.slice();\r\n\r\n\tvar result:T[] = initArrayFrom(source, max);\r\n\tif(-1===forEach(source, (e, i) => { result[i] = e; }, max))\r\n\t\tthrow new UnsupportedEnumerableException();\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Converts any enumerable to an array of selected values.\r\n * @param source\r\n * @param selector\r\n * @param max Stops after max is reached.  Allows for forEach to be called on infinite enumerations.\r\n * @returns {TResult[]}\r\n */\r\nexport function map<T,TResult>(\r\n\tsource:IEnumerableOrArray<T>|IEnumerator<T>,\r\n\tselector:Selector<T,TResult>,\r\n\tmax:number = Infinity):TResult[]\r\n{\r\n\tif(<any>source===STRING_EMPTY) return [];\r\n\r\n\tif(!isFinite(max) && Array.isArray(source))\r\n\t\treturn source.map(selector);\r\n\r\n\tvar result:TResult[] = initArrayFrom(source, max);\r\n\tif(-1===forEach(source, (e, i) => { result[i] = selector(e); }, max))\r\n\t\tthrow new UnsupportedEnumerableException();\r\n\r\n\treturn result;\r\n}"]}