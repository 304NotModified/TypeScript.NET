{"version":3,"sources":["System/Collections/Enumeration/IteratorResult.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;;;;IAIH,IAAM,KAAK,GAAO,KAAI,CAAC,CAAC,CAAC,CAAC;IAE1B;QAEC,wBACQ,KAAO,EACP,KAAa,EACb,IAAoB;YAA3B,oBAA2B,GAA3B,YAA2B;YAFpB,UAAK,GAAL,KAAK,CAAE;YACP,UAAK,GAAL,KAAK,CAAQ;YACb,SAAI,GAAJ,IAAI,CAAgB;YAE3B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;QACF,qBAAC;IAAD,CATA,AASC,IAAA;IATY,sBAAc,iBAS1B,CAAA;IAED,IAAc,cAAc,CAG3B;IAHD,WAAc,cAAc,EAAC,CAAC;QAChB,mBAAI,GAAuB,IAAI,cAAc,CAAM,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACpF,iBAAwB,KAAU,IAAwB,MAAM,CAAC,mBAAI,CAAC,CAAC,CAAC;QAAxD,sBAAO,UAAiD,CAAA;IACzE,CAAC,EAHa,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAG3B;IAED,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAE9B;sBAAe,cAAc,CAAC","file":"System/Collections/Enumeration/IteratorResult.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {IIteratorResult} from \"./IIterator\";\r\n\r\nconst VOID0:any = void(0);\r\n\r\nexport class IteratorResult<T> implements IIteratorResult<T>\r\n{\r\n\tconstructor(\r\n\t\tpublic value:T,\r\n\t\tpublic index?:number,\r\n\t\tpublic done:boolean = false)\r\n\t{\r\n\t\tObject.freeze(this);\r\n\t}\r\n}\r\n\r\nexport module IteratorResult {\r\n\texport const Done:IteratorResult<any> = new IteratorResult<any>(VOID0, VOID0, true);\r\n\texport function GetDone(value?:any):IteratorResult<any> { return Done; }\r\n}\r\n\r\nObject.freeze(IteratorResult);\r\n\r\nexport default IteratorResult;"]}