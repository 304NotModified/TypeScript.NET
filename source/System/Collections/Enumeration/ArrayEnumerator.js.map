{"version":3,"sources":["System/Collections/Enumeration/ArrayEnumerator.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;;;;IAGH,gCAA8B,mBAAmB,CAAC,CAAA;IAClD,sBAAmB,aAAa,CAAC,CAAA;IAEjC,wBAA4B,kBAAkB,CAAC,CAAA;IAC/C,IAAM,SAAS,GAAG,iBAAe,CAAC;IAElC;QAAwC,mCAAkB;QAIzD,yBAAY,cAAkB,EAAE,KAAgB,EAAE,IAAe;YAAjC,qBAAgB,GAAhB,SAAgB;YAAE,oBAAe,GAAf,QAAe;YAEhE,kBACC;gBAEC,IAAI,KAAK,GAAG,YAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,cAAc,EAAE,GAAG,cAAc,CAAC;gBAChF,MAAM,CAAC;oBACN,MAAM,EAAE,KAAK;oBACb,OAAO,EAAE,KAAK;oBACd,MAAM,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;oBAChC,IAAI,EAAE,IAAI;iBACV,CAAC;YACH,CAAC,CACD,CAAC;QACH,CAAC;QACF,sBAAC;IAAD,CAnBA,AAmBC,CAnBuC,iCAAe,GAmBtD;IAnBY,uBAAe,kBAmB3B,CAAA;IAED;sBAAe,eAAe,CAAC","file":"System/Collections/Enumeration/ArrayEnumerator.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IndexEnumerator} from \"./IndexEnumerator\";\r\nimport {Type} from \"../../Types\";\r\nimport {IArray} from \"../Array/IArray\";\r\nimport __extendsImport from \"../../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nexport class ArrayEnumerator<T> extends IndexEnumerator<T>\r\n{\r\n\tconstructor(arrayFactory:() => IArray<T>, start?:number, step?:number);\r\n\tconstructor(array:IArray<T>, start?:number, step?:number);\r\n\tconstructor(arrayOrFactory:any, start:number = 0, step:number = 1)\r\n\t{\r\n\t\tsuper(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvar array = Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: array,\r\n\t\t\t\t\tpointer: start,\r\n\t\t\t\t\tlength: array ? array.length : 0,\r\n\t\t\t\t\tstep: step\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ArrayEnumerator;"]}