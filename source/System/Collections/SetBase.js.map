{"version":3,"sources":["System/Collections/SetBase.ts"],"names":[],"mappings":"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","file":"System/Collections/SetBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {LinkedNodeList} from \"./LinkedNodeList\";\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {forEach} from \"./Enumeration/Enumerator\";\r\nimport {EmptyEnumerator} from \"./Enumeration/EmptyEnumerator\";\r\nimport {using} from \"../Disposable/dispose\";\r\nimport {areEqual} from \"../Compare\";\r\nimport {CollectionBase} from \"./CollectionBase\";\r\nimport {IDisposable} from \"../Disposable/IDisposable\";\r\nimport {ILinkedNodeWithValue} from \"./ILinkedListNode\";\r\nimport {Predicate, Action} from \"../FunctionTypes\";\r\nimport {IMap} from \"./Dictionaries/IDictionary\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport {IEnumerableOrArray} from \"./IEnumerableOrArray\";\r\nimport {ISet} from \"./ISet\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nconst OTHER = 'other';\r\n\r\nexport abstract class SetBase<T>\r\nextends CollectionBase<T> implements ISet<T>, IDisposable\r\n{\r\n\r\n\tconstructor(source?:IEnumerableOrArray<T>)\r\n\t{\r\n\t\tsuper(null, areEqual);\r\n\t\tthis._importEntries(source);\r\n\t}\r\n\r\n\tprotected abstract newUsing(source?:IEnumerableOrArray<T>):SetBase<T>;\r\n\r\n\tprotected _set:LinkedNodeList<ILinkedNodeWithValue<T>>;\r\n\r\n\tprotected _getSet():LinkedNodeList<ILinkedNodeWithValue<T>>\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\tif(!s) this._set = s = new LinkedNodeList<ILinkedNodeWithValue<T>>();\r\n\t\treturn s;\r\n\t}\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._set ? this._set.unsafeCount : 0;\r\n\t}\r\n\r\n\texceptWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tforEach(other, v=>\r\n\t\t{\r\n\t\t\tif(_._removeInternal(v))\r\n\t\t\t\t_._incrementModified();\r\n\t\t});\r\n\r\n\t\t_._signalModification();\r\n\t}\r\n\r\n\tintersectWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar _ = this;\r\n\t\tif(other instanceof SetBase)\r\n\t\t{\r\n\t\t\tlet s = _._set;\r\n\t\t\tif(s) s.forEach(n=>\r\n\t\t\t{\r\n\t\t\t\tif(!other.contains(n.value) && _._removeInternal(n.value))\r\n\t\t\t\t\t_._incrementModified();\r\n\t\t\t});\r\n\r\n\t\t\t_._signalModification();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tusing(_.newUsing(other), o=>_.intersectWith(o));\r\n\t\t}\r\n\t}\r\n\r\n\tisProperSubsetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\treturn other instanceof SetBase\r\n\t\t\t? other.isProperSupersetOf(this)\r\n\t\t\t: using(this.newUsing(other), o=> o.isProperSupersetOf(this));\r\n\t}\r\n\r\n\tisProperSupersetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar result = true, count:number;\r\n\t\tif(other instanceof SetBase)\r\n\t\t{\r\n\t\t\tresult = this.isSupersetOf(other);\r\n\t\t\tcount = other.getCount();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tcount = using(this.newUsing(), o=>\r\n\t\t\t{\r\n\t\t\t\tforEach(other, v=>\r\n\t\t\t\t{\r\n\t\t\t\t\to.add(v); // We have to add to another set in order to filter out duplicates.\r\n\t\t\t\t\t// contains == false will cause this to exit.\r\n\t\t\t\t\treturn result = this.contains(v);\r\n\t\t\t\t});\r\n\t\t\t\treturn o.getCount();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result && this.getCount()>count;\r\n\t}\r\n\r\n\tisSubsetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\treturn other instanceof SetBase\r\n\t\t\t? other.isSupersetOf(this)\r\n\t\t\t: using(this.newUsing(other), o=> o.isSupersetOf(this));\r\n\t}\r\n\r\n\tisSupersetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar result = true;\r\n\t\tforEach(other, v=>\r\n\t\t{\r\n\t\t\treturn result = this.contains(v);\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\toverlaps(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar result = false;\r\n\t\tforEach(other, v => !(result = this.contains(v)));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tsetEquals(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\treturn this.getCount()==(\r\n\t\t\t\tother instanceof SetBase\r\n\t\t\t\t\t? other.getCount()\r\n\t\t\t\t\t: using(this.newUsing(other), o=> o.getCount()))\r\n\t\t\t&& this.isSubsetOf(other);\r\n\t}\r\n\r\n\tsymmetricExceptWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar _ = this;\r\n\t\tif(other instanceof SetBase)\r\n\t\t{\r\n\t\t\tforEach(other, v=>\r\n\t\t\t{\r\n\t\t\t\tif(_.contains(v))\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_._removeInternal(v))\r\n\t\t\t\t\t\t_._incrementModified();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_._addInternal(v))\r\n\t\t\t\t\t\t_._incrementModified();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t_._signalModification();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tusing(this.newUsing(other), o=>_.symmetricExceptWith(o));\r\n\t\t}\r\n\t}\r\n\r\n\tunionWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tthis.importEntries(other);\r\n\t}\r\n\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn s ? s.clear() : 0;\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._set = null;\r\n\t}\r\n\r\n\tprotected abstract _getNode(item:T):ILinkedNodeWithValue<T>;\r\n\r\n\tcontains(item:T):boolean\r\n\t{\r\n\t\treturn !(!this.getCount() || !this._getNode(item));\r\n\t}\r\n\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn s && this.getCount()\r\n\t\t\t? LinkedNodeList.valueEnumeratorFrom<T>(s)\r\n\t\t\t: EmptyEnumerator;\r\n\t}\r\n\r\n\tforEach(\r\n\t\taction:Predicate<T> | Action<T>,\r\n\t\tuseCopy:boolean = false):number\r\n\t{\r\n\t\treturn useCopy\r\n\t\t\t? super.forEach(action, useCopy)\r\n\t\t\t: this._set.forEach((node, i)=>action(node.value, i));\r\n\t}\r\n\r\n\tprotected _removeNode(node:ILinkedNodeWithValue<T>):boolean\r\n\t{\r\n\t\tif(!node) return false;\r\n\t\treturn this.remove(node.value)!=0;\r\n\t}\r\n\r\n\tremoveFirst():boolean\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn this._removeNode(s && s.first);\r\n\t}\r\n\r\n\tremoveLast():boolean\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn this._removeNode(s && s.last);\r\n\t}\r\n\r\n\r\n}\r\n\r\nfunction wipe(map:IMap<any>, depth:number = 1):void\r\n{\r\n\tif(map && depth)\r\n\t{\r\n\t\tfor(var key of Object.keys(map))\r\n\t\t{\r\n\t\t\tvar v = map[key];\r\n\t\t\tdelete map[key];\r\n\t\t\twipe(v, depth - 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default SetBase;"]}