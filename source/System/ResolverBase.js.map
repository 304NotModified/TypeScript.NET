{"version":3,"sources":["System/ResolverBase.ts"],"names":[],"mappings":"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","file":"System/ResolverBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {DisposableBase} from \"./Disposable/DisposableBase\";\r\nimport {Func} from \"./FunctionTypes\";\r\nimport {ArgumentNullException} from \"./Exceptions/ArgumentNullException\";\r\nimport __extendsImport from \"../extends\";\r\nconst __extends = __extendsImport;\r\n\r\n/**\r\n * The ResolverBase class handles resolving a factory method and detects recursion.\r\n * Since JS does not have a synchronization mechanism (lock or otherwise)\r\n * we have to prevent getValue from double triggering the value factory (optimistic concurrency)\r\n * or returning return a value that is intermediate between resolving and resolved.\r\n */\r\nexport abstract class ResolverBase<T> extends DisposableBase\r\n{\r\n\r\n\tprotected _isValueCreated:boolean;\r\n\tprotected _value:T;\r\n\r\n\tconstructor(\r\n\t\tprotected _valueFactory:Func<T>,\r\n\t\tprivate _trapExceptions:boolean,\r\n\t\tprivate _allowReset?:boolean)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(!_valueFactory) throw new ArgumentNullException(\"valueFactory\");\r\n\t\tthis._isValueCreated = false;\r\n\t}\r\n\r\n\tprotected _error:any;\r\n\r\n\tprotected getError():any\r\n\t{\r\n\t\treturn this._error;\r\n\t}\r\n\r\n\tget error():any\r\n\t{\r\n\t\treturn this.getError();\r\n\t}\r\n\r\n\tgetValue():T\r\n\t{\r\n\r\n\t\tvar _ = this;\r\n\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(_._isValueCreated===null)\r\n\t\t\tthrow new Error(\"Recursion detected.\");\r\n\r\n\t\tif(!_._isValueCreated && _._valueFactory)\r\n\t\t{\r\n\t\t\t_._isValueCreated = null; // Mark this as 'resolving'.\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tlet c:Func<T>;\r\n\t\t\t\tif(!_._isValueCreated && (c = _._valueFactory))\r\n\t\t\t\t{\r\n\t\t\t\t\t_._isValueCreated = null; // Mark this as 'resolving'.\r\n\t\t\t\t\tif(!this._allowReset) this._valueFactory = null;\r\n\t\t\t\t\tvar v = c();\r\n\t\t\t\t\t_._value = v;\r\n\t\t\t\t\t_._error = void 0;\r\n\t\t\t\t\treturn v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\t_._error = ex;\r\n\t\t\t\tif(!_._trapExceptions) throw ex;\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\t_._isValueCreated = true;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\treturn _._value;\r\n\r\n\t}\r\n\r\n\tget canReset():boolean\r\n\t{\r\n\t\treturn this._allowReset && !!this._valueFactory;\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tthis._valueFactory = null;\r\n\t\tthis._value = null;\r\n\t\tthis._isValueCreated = null;\r\n\t}\r\n\r\n\ttryReset():boolean\r\n\t{\r\n\t\tvar _ = this;\r\n\r\n\t\tif(!_._valueFactory)\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t{\r\n\t\t\t_._isValueCreated = false;\r\n\t\t\t_._value = null;\r\n\t\t\t_._error = void 0;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default ResolverBase;"]}