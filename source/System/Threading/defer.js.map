{"version":3,"sources":["System/Threading/defer.ts"],"names":[],"mappings":"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","file":"System/Threading/defer.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {ICancellable} from \"./ICancellable\";\r\nimport {Closure, Func} from \"../FunctionTypes\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nabstract class DeferBase implements ICancellable\r\n{\r\n\t// It may be a Timer in node, should not be restricted to number.\r\n\tprotected _id:any;\r\n\r\n\tabstract cancel():boolean;\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.cancel();\r\n\t}\r\n}\r\n\r\nclass Defer extends DeferBase\r\n{\r\n\r\n\r\n\tconstructor(task:Function, delay?:number, payload?:any)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(!(delay>0)) delay = 0; // covers undefined and null.\r\n\t\tthis._id = setTimeout(Defer.handler, delay, task, this, payload);\r\n\t}\r\n\r\n\tcancel():boolean\r\n\t{\r\n\t\tvar id = this._id;\r\n\t\tif(id)\r\n\t\t{\r\n\t\t\tclearTimeout(id);\r\n\t\t\tthis._id = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Use a static function here to avoid recreating a new function every time.\r\n\tprivate static handler(task:Function, d:Defer, payload?:any):void\r\n\t{\r\n\t\td.cancel();\r\n\t\ttask(payload);\r\n\t}\r\n\r\n}\r\n\r\nclass DeferInterval extends DeferBase\r\n{\r\n\r\n\r\n\tconstructor(\r\n\t\ttask:Function,\r\n\t\tinterval:number,\r\n\t\tprivate _remaining:number = Infinity)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(interval===null || interval=== void(0))\r\n\t\t\tthrow \"'interval' must be a valid number.\";\r\n\t\tif(interval<0)\r\n\t\t\tthrow \"'interval' cannot be negative.\";\r\n\r\n\t\tthis._id = setInterval(DeferInterval.handler, interval, task, this);\r\n\t}\r\n\r\n\tcancel():boolean\r\n\t{\r\n\t\tvar id = this._id;\r\n\t\tif(id)\r\n\t\t{\r\n\t\t\tclearInterval(id);\r\n\t\t\tthis._id = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static handler(task:Function, d:DeferInterval):void\r\n\t{\r\n\t\tif(!(--d._remaining)) d.cancel();\r\n\t\ttask();\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport function defer(\r\n\ttask:Closure,\r\n\tdelay?:number):ICancellable;\r\n\r\nexport function defer<T>(\r\n\ttask:Func<T>,\r\n\tdelay?:number,\r\n\tpayload?:T):ICancellable\r\n\r\nexport function defer<T>(\r\n\ttask:Function,\r\n\tdelay?:number,\r\n\tpayload?:any):ICancellable\r\n{\r\n\treturn new Defer(task, delay, payload);\r\n}\r\n\r\nexport function interval(\r\n\ttask:Function,\r\n\tinterval:number,\r\n\tcount:number = Infinity):ICancellable\r\n{\r\n\treturn new DeferInterval(task, interval, count);\r\n}\r\n\r\nexport default defer;"]}