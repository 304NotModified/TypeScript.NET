{"version":3,"sources":["System/Diagnostics/Stopwatch.ts"],"names":[],"mappings":"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","file":"System/Diagnostics/Stopwatch.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {TimeSpan} from \"../Time/TimeSpan\";\r\nimport {ITimer} from \"../Timers/ITimer\";\r\n\r\nfunction getTimestampMilliseconds():number\r\n{\r\n\treturn (new Date()).getTime();\r\n}\r\n\r\nexport default\r\nclass Stopwatch implements ITimer\r\n{\r\n\r\n\tstatic getTimestampMilliseconds():number\r\n\t{\r\n\t\treturn getTimestampMilliseconds();\r\n\t}\r\n\r\n\tprivate _elapsed:number;\r\n\tprivate _startTimeStamp:number;\r\n\r\n\tprivate _isRunning:boolean;\r\n\tget isRunning():boolean\r\n\t{\r\n\t\treturn this._isRunning;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tstatic startNew():Stopwatch\r\n\t{\r\n\t\tvar s = new Stopwatch();\r\n\t\ts.start();\r\n\t\treturn s;\r\n\t}\r\n\r\n\tstatic measure(closure:()=>void):TimeSpan\r\n\t{\r\n\t\tvar start = getTimestampMilliseconds();\r\n\t\tclosure();\r\n\t\treturn new TimeSpan(getTimestampMilliseconds() - start);\r\n\t}\r\n\r\n\tstart():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(!_._isRunning)\r\n\t\t{\r\n\t\t\t_._startTimeStamp = getTimestampMilliseconds();\r\n\t\t\t_._isRunning = true;\r\n\t\t}\r\n\t}\r\n\r\n\tstop():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(_._isRunning)\r\n\t\t{\r\n\t\t\t_._elapsed += _.currentLapMilliseconds;\r\n\t\t\t_._isRunning = false;\r\n\t\t}\r\n\t}\r\n\r\n\treset():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_._elapsed = 0;\r\n\t\t_._isRunning = false;\r\n\t\t_._startTimeStamp = NaN;\r\n\t}\r\n\r\n\t// Effectively calls a stop start and continues timing...\r\n\t// Can also be called to effectively start a lap before calling it again to get the elapsed lap time.\r\n\tlap():TimeSpan\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(_._isRunning)\r\n\t\t{\r\n\t\t\tvar t = getTimestampMilliseconds();\r\n\t\t\tvar s = _._startTimeStamp;\r\n\t\t\tvar e = t - s;\r\n\t\t\t_._startTimeStamp = t;\r\n\t\t\t_._elapsed += e;\r\n\t\t\treturn new TimeSpan(e);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn TimeSpan.zero;\r\n\t}\r\n\r\n\tget currentLapMilliseconds():number\r\n\t{\r\n\t\treturn this._isRunning\r\n\t\t\t? (getTimestampMilliseconds() - this._startTimeStamp)\r\n\t\t\t: 0;\r\n\t}\r\n\r\n\tget currentLap():TimeSpan\r\n\t{\r\n\t\treturn this._isRunning\r\n\t\t\t? new TimeSpan(this.currentLapMilliseconds)\r\n\t\t\t: TimeSpan.zero;\r\n\t}\r\n\r\n\tget elapsedMilliseconds():number\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tvar timeElapsed = _._elapsed;\r\n\r\n\t\tif(_._isRunning)\r\n\t\t\ttimeElapsed += _.currentLapMilliseconds;\r\n\r\n\t\treturn timeElapsed;\r\n\t}\r\n\r\n\tget elapsed():TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(this.elapsedMilliseconds);\r\n\t}\r\n\r\n}\r\n"]}