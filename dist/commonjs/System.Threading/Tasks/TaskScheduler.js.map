{"version":3,"sources":["System.Threading/Tasks/TaskScheduler.ts"],"names":["TaskScheduler","TaskScheduler.constructor","TaskScheduler._getScheduledTasks","TaskScheduler._ensureWorkerReady","TaskScheduler.queueTask","TaskScheduler._tryDequeue","TaskScheduler._tryExecuteTask","TaskScheduler.tryExecuteTaskInline","TaskScheduler.id","TaskScheduler.maximumConcurrencyLevel","TaskScheduler.fromCurrentSynchronizationContext","TaskScheduler.current","TaskScheduler.defaultInstance"],"mappings":"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","file":"System.Threading/Tasks/TaskScheduler.js","sourcesContent":["\r\n\r\n///<reference path=\"../../System/Collections/Array/IArray\"/>\r\n///<reference path=\"ITaskScheduler.d.ts\"/>\r\nimport Task from './Task';\r\nimport Queue from '../../System/Collections/Queue';\r\n\r\nvar _lastId:number = 0 | 0;\r\nvar _defaultScheduler:TaskScheduler;\r\nvar _currentScheduler:ITaskScheduler;\r\n\r\nconst MAX_INT32_SIGNED = 2147483647 | 0;\r\n\r\n\r\nexport default class TaskScheduler implements ITaskScheduler\r\n{\r\n\tconstructor(private _maximumConcurrencyLevel:number = MAX_INT32_SIGNED)\r\n\t{\r\n\t\tthis._id = ++_lastId;\r\n\t\tthis._queue = new Queue<ITask<any>>();\r\n\t}\r\n\r\n\tstatic get current():ITaskScheduler\r\n\t{\r\n\t\treturn _currentScheduler || TaskScheduler.defaultInstance;\r\n\t}\r\n\r\n\tstatic get defaultInstance():ITaskScheduler\r\n\t{\r\n\t\tif(!_defaultScheduler) _defaultScheduler = new TaskScheduler();\r\n\t\treturn _defaultScheduler;\r\n\t}\r\n\r\n\tstatic fromCurrentSynchronizationContext():ITaskScheduler\r\n\t{\r\n\t\treturn null;// placeholder.\r\n\t}\r\n\r\n\r\n\tprivate _id:number;\r\n\tget id():number // int\r\n\t{\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget maximumConcurrencyLevel():number //int\r\n\t{\r\n\t\treturn this._maximumConcurrencyLevel;\r\n\t}\r\n\r\n\tprivate _queue:Queue<ITask<any>>;\r\n\t_getScheduledTasks():IArray<ITask<any>>\r\n\t{\r\n\t\treturn this._queue.toArray();\r\n\t}\r\n\r\n\tprivate _workerId:number;\r\n\r\n\tprivate _ensureWorkerReady():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(!_._workerId)\r\n\t\t{\r\n\t\t\t_._workerId = setTimeout(() =>\r\n\t\t\t{\r\n\t\t\t\t_._workerId = 0;\r\n\t\t\t\t//noinspection JSUnusedAssignment\r\n\t\t\t\t_currentScheduler = this;\r\n\t\t\t\twhile(_._queue.count)\r\n\t\t\t\t{\r\n\t\t\t\t\t_._tryExecuteTask(_._queue.dequeue());\r\n\t\t\t\t}\r\n\t\t\t\t_currentScheduler = null;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tqueueTask<T>(task:ITask<T>):void\r\n\t{\r\n\t\tif(!task)\r\n\t\t\tthrow new Error(\"ArgumentNullException\");\r\n\t\tthis._queue.enqueue(task);\r\n\t\tthis._ensureWorkerReady();\r\n\t}\r\n\r\n\t// Internal\r\n\t_tryDequeue<T>(task:ITask<T>):boolean\r\n\t{\r\n\t\treturn this._queue.remove(task)!==0;\r\n\t}\r\n\r\n\t// Internal\r\n\t_tryExecuteTask<T>(task:ITask<T>):boolean\r\n\t{\r\n\t\tif((<any>task)['_executingTaskScheduler']!=this)\r\n\t\t\tthrow new Error(\"Executed Task on wrong TaskScheduler.\");\r\n\r\n\t\treturn (<any>task)['_executeEntry'](true);\r\n\t}\r\n\r\n\r\n\t// Internal\r\n\ttryExecuteTaskInline<T>(task:ITask<T>, taskWasPreviouslyQueued:boolean):boolean\r\n\t{\r\n\t\tif(taskWasPreviouslyQueued && !this._tryDequeue(task))\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._tryExecuteTask(task);\r\n\t}\r\n\r\n\r\n}\r\n"]}