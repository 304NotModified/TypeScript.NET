{"version":3,"sources":["System/Events/EventSimple.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAIH,wBAA4B,eAAe,CAAC,CAAA;AAE5C,IAAM,SAAS,GAAG,iBAAe,CAAC;AAMlC;IAAA;QAES,eAAU,GAAO,EAAE,CAAC;IAuC7B,CAAC;IArCA,yBAAG,GAAH,UAAI,QAAU;QAEb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,4BAAM,GAAN,UAAO,QAAU;QAEhB,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9C,EAAE,CAAA,CAAC,KAAK,GAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR;QAAS,gBAAe;aAAf,WAAe,CAAf,sBAAe,CAAf,IAAe;YAAf,+BAAe;;QAEvB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAChC,GAAG,CAAA,CAAU,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,CAAC;YAAnB,IAAI,CAAC,kBAAA;YAER,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACf;IACF,CAAC;IAED,yCAAmB,GAAnB;QAEC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAChC,MAAM,CAAC;YAEN,GAAG,CAAA,CAAU,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,CAAC;gBAAnB,IAAI,CAAC,kBAAA;gBAER,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAClB;QACF,CAAC,CAAC;IACH,CAAC;IAED,6BAAO,GAAP;QAEC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5B,CAAC;IACF,kBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCD;6BAyCC,CAAA","file":"EventSimple.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Based on Netjs mscorlib.ts\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IDisposable} from \"../Disposable/IDisposable\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n/**\r\n * A simple event dispatcher provided as an alternative to built-in event.\r\n * If just dispatching a payload to a uniform set of functions, it may be better to just use the utilities in System/Collections/Array/Dispatch.\r\n */\r\nexport default class EventSimple<T extends Function> implements IDisposable\r\n{\r\n\tprivate _listeners:T[] = [];\r\n\r\n\tadd(listener:T):void\r\n\t{\r\n\t\tthis._listeners.push(listener);\r\n\t}\r\n\r\n\tremove(listener:T):void\r\n\t{\r\n\t\tvar index = this._listeners.indexOf(listener);\r\n\t\tif(index<0) return;\r\n\t\tthis._listeners.splice(index, 1);\r\n\t}\r\n\r\n\tdispatch(...params:any[]):void\r\n\t{\r\n\t\tvar listeners = this._listeners;\r\n\t\tfor(var f of listeners)\r\n\t\t{\r\n\t\t\tf.call(params);\r\n\t\t}\r\n\t}\r\n\r\n\ttoMulticastFunction():Function\r\n\t{\r\n\t\tvar listeners = this._listeners;\r\n\t\treturn function()\r\n\t\t{\r\n\t\t\tfor(var f of listeners)\r\n\t\t\t{\r\n\t\t\t\tf.call(arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis._listeners.length = 0;\r\n\t}\r\n}"]}