{"version":3,"sources":["System/Disposable/ObjectDisposedException.ts"],"names":["ObjectDisposedException","ObjectDisposedException.constructor","ObjectDisposedException.getName","ObjectDisposedException.toString","ObjectDisposedException.throwIfDisposed"],"mappings":";;;;;;;;;;;;;;;;;;;;;mDAQsC,yCAAyC;;;;AAG/E,IAAM,IAAI,GAAU,yBAAyB,CAAC;;IAE9C,uBAAA;cAAA,uBAAA;;AAQCA,aARD,uBAAA,CASEA,UAAiBA,EAEcA;YAD/BA,OAAOA,yDAAUA,IAAIA;YACrBA,cAAcA,yDAAaA,IAAIA;;8BAXjC,uBAAA;;AAaEC,mCAbF,uBAAA,6CAaQA,OAAOA,EAAEA,cAAcA,EAAEA,UAACA,CAACA,EAAAA;AAChCA,aAACA,CAACA,UAAUA,GAAGA,UAAUA,CAACA;SAC1BA,EAAEA;KACHA;;iBAhBF,uBAAA;;eAmBkBD,mBAAAA;AAEhBE,mBAAOA,IAAIA,CAACA;SACZA;;;eAEOF,oBAAAA;AAEPG,gBAAIA,CAACA,GAAGA,IAAIA;gBAAEA,KAAKA,GAAGA,CAACA,CAACA,UAAUA,CAACA;AACnCA,iBAAKA,GAAGA,KAAKA,GAAIA,GAAGA,GAAGA,KAAKA,GAAGA,IAAIA,GAAIA,EAAEA,CAACA;AAE1CA,mBAAOA,GAAGA,GAAGA,CAACA,CAACA,IAAIA,GAAGA,IAAIA,GAAGA,KAAKA,GAAGA,CAACA,CAACA,OAAOA,GAAGA,GAAGA,CAACA;SACrDA;;;eAEqBH,yBACrBA,UAA2BA,EAC3BA,UAAkBA,EAClBA,OAAeA,EAAAA;AAEfI,gBAAGA,UAAUA,CAACA,WAAWA,EACxBA,MAAMA,IAAIA,uBAAuBA,CAACA,UAAUA,EAAEA,OAAOA,CAACA,CAACA;SACxDA;;;WAvCF,uBAAA;;;qBAAA,uBAAA","file":"System/Disposable/ObjectDisposedException.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n///<reference path=\"IDisposableAware.d.ts\"/>\r\nimport Exception from '../Exception';\r\nimport InvalidOperationException from '../Exceptions/InvalidOperationException';\r\n\r\n\r\nconst NAME:string = 'ObjectDisposedException';\r\n\r\nexport default\r\nclass ObjectDisposedException\r\nextends InvalidOperationException\r\n{\r\n\r\n\tobjectName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tobjectName:string,\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(message, innerException, (_)=>{\r\n\t\t\t_.objectName = objectName;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tvar _ = this, oName = _.objectName;\r\n\t\toName = oName ? ('{' + oName + '} ') : '';\r\n\r\n\t\treturn '[' + _.name + ': ' + oName + _.message + ']';\r\n\t}\r\n\r\n\tstatic throwIfDisposed(\r\n\t\tdisposable:IDisposableAware,\r\n\t\tobjectName?:string,\r\n\t\tmessage?:string):void\r\n\t{\r\n\t\tif(disposable.wasDisposed)\r\n\t\t\tthrow new ObjectDisposedException(objectName, message);\r\n\t}\r\n\r\n}\r\n"]}