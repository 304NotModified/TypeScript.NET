{"version":3,"sources":["System/Exception.ts"],"names":["Exception","Exception.constructor","Exception.getName","Exception.toString","Exception.dispose"],"mappings":";;;;;;;;;;;;;;;;;AAUA,IAAM,IAAI,GAAU,WAAW,CAAC;;IAKhC,SAAA;AAeCA,aAfD,SAAA,CAgBSA,OAAOA,EACdA,cAAcA,EACdA,aAA6BA,EAAAA;YAFtBA,OAAOA,gBAAPA,OAAOA,GAAUA,IAAIA;YAC5BA,cAAcA,gBAAdA,cAAcA,GAASA,IAAIA;;8BAjB7B,SAAA;;AAgBSC,YAAAA,CAAAA,OAAOA,GAAPA,OAAOA,CAAcA;AAI5BA,YAAIA,CAACA,GAAGA,IAAIA,CAACA;AACbA,SAACA,CAACA,IAAIA,GAAGA,CAACA,CAACA,OAAOA,EAAEA,CAACA;AACrBA,SAACA,CAACA,IAAIA,GAAGA,EAAEA,CAACA;AACZA,YAAGA,cAAcA,EAChBA,CAACA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,GAAGA,cAAcA,CAACA;AAO3CA,YAAGA,aAAaA,EAAEA,aAAaA,CAACA,CAACA,CAACA,CAACA;AACnCA,cAAMA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;KACjBA;;iBAjCF,SAAA;;eA2CkBD,mBAAAA;AACfE,mBAAOA,IAAIA,CAACA;SAAEA;;;eAKRF,oBAAAA;AAEPG,gBAAIA,CAACA,GAAGA,IAAIA;gBAAEA,CAACA,GAAGA,CAACA,CAACA,OAAOA,CAACA;AAC5BA,aAACA,GAAGA,CAACA,GAAIA,IAAIA,GAAGA,CAACA,GAAIA,EAAEA,CAACA;AAExBA,mBAAOA,GAAGA,GAACA,CAACA,CAACA,IAAIA,GAAEA,CAACA,GAAEA,GAAGA,CAACA;SAC1BA;;;eAKMH,mBAAAA;AAENI,gBAAIA,IAAIA,GAAGA,IAAIA,CAACA,IAAIA,CAACA;AACrBA,iBAAIA,IAAIA,CAACA,IAAIA,IAAIA;AAChBA,oBAAGA,IAAIA,CAACA,cAAcA,CAACA,CAACA,CAACA,EACxBA,OAAOA,IAAIA,CAACA,CAACA,CAACA,CAACA;aAAAA;SACjBA;;;WAlEF,SAAA;;;qBAAA,SAAA","file":"System/Exception.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n///<reference path=\"Collections/Dictionaries/IDictionary.d.ts\"/>\r\n///<reference path=\"Disposable/IDisposable.d.ts\"/>\r\n\r\n\r\nconst NAME:string = 'Exception';\r\n\r\n/**\r\n * Represents errors that occur during application execution.\r\n */\r\nexport default\r\nclass Exception implements Error, IDisposable\r\n{\r\n\t/**\r\n\t * A string representation of the error type.\r\n\t * The default is 'Error'.\r\n\t */\r\n\tname:string;\r\n\r\n\t/**\r\n\t * Initializes a new instance of the Exception class with a specified error message and optionally a reference to the inner exception that is the cause of this exception.\r\n\t * @param message\r\n\t * @param innerException\r\n\t * @param beforeSealing This delegate is used to allow actions to occur just before this constructor finishes.  Since some compilers do not allow the use of 'this' before super.\r\n\t */\r\n\tconstructor(\r\n\t\tpublic message:string = null,\r\n\t\tinnerException:Error = null,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.name = _.getName();\r\n\t\t_.data = {};\r\n\t\tif(innerException)\r\n\t\t\t_.data['innerException'] = innerException;\r\n\r\n\t\t/* Originally intended to use 'get' accessors for properties,\r\n\t\t * But debuggers don't display these readily yet.\r\n\t\t * Object.freeze has to be used carefully, but will prevent overriding values.\r\n\t\t */\r\n\r\n\t\tif(beforeSealing) beforeSealing(_);\r\n\t\tObject.freeze(_);\r\n\t}\r\n\r\n\r\n\r\n\tdata:IMap<any>;\r\n\r\n\t/**\r\n\t * A string representation of the error type.\r\n\t * The default is 'Error'.\r\n\t */\r\n\tprotected getName():string\r\n\t{ return NAME; }\r\n\r\n\t/**\r\n\t * The string representation of the Exception instance.\r\n\t */\r\n\ttoString():string\r\n\t{\r\n\t\tvar _ = this, m = _.message;\r\n\t\tm = m ? (': ' + m) : '';\r\n\r\n\t\treturn '['+_.name+ m +']';\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the data object.\r\n\t */\r\n\tdispose():void\r\n\t{\r\n\t\tvar data = this.data;\r\n\t\tfor(let k in data)\r\n\t\t\tif(data.hasOwnProperty(k))\r\n\t\t\t\tdelete data[k];\r\n\t}\r\n}\r\n"]}