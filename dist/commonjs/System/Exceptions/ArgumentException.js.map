{"version":3,"sources":["System/Exceptions/ArgumentException.ts"],"names":["ArgumentException","ArgumentException.constructor","ArgumentException.getName","ArgumentException.toString"],"mappings":";;;;;;;;;;;;;;;;;;;;;gCAQ4B,mBAAmB;;;;2BAC5B,iBAAiB;;AAGpC,IAAM,IAAI,GAAU,mBAAmB,CAAC;;IAExC,iBAAA;cAAA,iBAAA;;AAOCA,aAPD,iBAAA,CAQEA,SAAgBA,EAChBA,OAAOA,EACPA,cAAcA,EACdA,aAA6BA,EAAAA;YAF7BA,OAAOA,gBAAPA,OAAOA,GAAUA,IAAIA;YACrBA,cAAcA,gBAAdA,cAAcA,GAASA,IAAIA;;8BAV7B,iBAAA;;AAaEC,YAAIA,EAAEA,GAAGA,SAASA,GAAIA,GAAGA,GAAGA,SAASA,GAAGA,IAAIA,GAAIA,EAAEA,CAACA;AAEnDA,mCAfF,iBAAA,6CAeQA,uBAAKA,EAAEA,GAAGA,OAAOA,CAACA,EAAEA,cAAcA,EAAEA,UAACA,CAACA,EAAAA;AAC3CA,aAACA,CAACA,SAASA,GAAGA,SAASA,CAACA;AACxBA,gBAAGA,aAAaA,EAAEA,aAAaA,CAACA,CAACA,CAACA,CAACA;SACnCA,EAAEA;KACHA;;iBAnBF,iBAAA;;eAsBkBD,mBAAAA;AAEhBE,mBAAOA,IAAIA,CAACA;SACZA;;;eAEOF,oBAAAA;AAEPG,gBAAIA,CAACA,GAAGA,IAAIA,CAACA;AACbA,mBAAOA,GAAGA,GAAGA,CAACA,CAACA,IAAIA,GAAGA,IAAIA,GAAGA,CAACA,CAACA,OAAOA,GAAGA,GAAGA,CAACA;SAC7CA;;;WA/BF,iBAAA;;;qBAAA,iBAAA","file":"System/Exceptions/ArgumentException.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport Type from '../Types';\r\nimport Exception from '../Exception';\r\nimport SystemException from './SystemException';\r\nimport {trim} from '../Text/Utility';\r\n\r\n\r\nconst NAME:string = 'ArgumentException';\r\n\r\nexport default\r\nclass ArgumentException extends SystemException\r\n{\r\n\r\n\tparamName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Error = null,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tvar pn = paramName ? ('{' + paramName + '} ') : '';\r\n\r\n\t\tsuper(trim(pn + message), innerException, (_)=>{\r\n\t\t\t_.paramName = paramName;\r\n\t\t\tif(beforeSealing) beforeSealing(_);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tvar _ = this;\r\n\t\treturn '[' + _.name + ': ' + _.message + ']';\r\n\t}\r\n\r\n}\r\n"]}