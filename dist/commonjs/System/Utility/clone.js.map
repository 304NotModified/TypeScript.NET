{"version":3,"sources":["System/Utility/clone.ts"],"names":[],"mappings":";AAIA,kCAA8B;AAE9B,eAA8B,MAAU,EAAE,KAAgB;IAAhB,sBAAA,EAAA,SAAgB;IAEzD,EAAE,CAAA,CAAC,KAAK,GAAC,CAAC,CAAC;QACV,MAAM,CAAC,MAAM,CAAC;IAGf,EAAE,CAAA,CAAC,CAAC,YAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAAC,MAAM,CAAC,MAAM,CAAC;IAEzC,IAAI,MAAU,CAAC;IACf,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CACzB,CAAC;QACA,MAAM,GAAS,MAAO,CAAC,KAAK,EAAE,CAAC;QAC/B,EAAE,CAAA,CAAC,KAAK,GAAC,CAAC,CAAC,CACX,CAAC;YACA,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,CAAC;gBACA,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;IACD,IAAI,CACJ,CAAC;QACA,MAAM,GAAG,EAAE,CAAC;QACZ,EAAE,CAAA,CAAC,KAAK,GAAC,CAAC,CAAC;YAAC,GAAG,CAAA,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAChC,CAAC;gBAEA,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;YACzC,CAAC;IACF,CAAC;IAED,MAAM,CAAC,MAAM,CAAC;AAEf,CAAC;;AAhCD,wBAgCC","file":"clone.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {Type} from \"../Types\";\r\n\r\nexport default function clone(source:any, depth:number = 0):any\r\n{\r\n\tif(depth<0)\r\n\t\treturn source;\r\n\r\n\t// return primitives as is.\r\n\tif(!Type.isObject(source)) return source;\r\n\r\n\tlet result:any;\r\n\tif(Array.isArray(source))\r\n\t{\r\n\t\tresult = (<any>source).slice();\r\n\t\tif(depth>0)\r\n\t\t{\r\n\t\t\tfor(let i = 0; i<result.length; i++)\r\n\t\t\t{\r\n\t\t\t\tresult[i] = clone(result[i], depth - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tresult = {};\r\n\t\tif(depth>0) for(let k in source)\r\n\t\t{\r\n\t\t\t//noinspection JSUnfilteredForInLoop\r\n\t\t\tresult[k] = clone(source[k], depth - 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n"]}