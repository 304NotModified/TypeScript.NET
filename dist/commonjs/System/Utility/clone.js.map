{"version":3,"sources":["System/Utility/clone.ts"],"names":["clone"],"mappings":";;;;;;;;;qBAOA,KAAA;;;;qBAFiB,UAAU;;;;AAE3B,SAAA,KAAA,CAA8B,MAAU,EAAkB;QAAhB,KAAK,yDAAU,CAAC;;AAEzDA,QAAGA,KAAKA,GAACA,CAACA,EACTA,OAAOA,MAAMA,CAACA;AAGfA,QAAGA,CAACA,mBAAKA,QAAQA,CAACA,MAAMA,CAACA,EAAEA,OAAOA,MAAMA,CAACA;AAEzCA,QAAIA,MAAUA,CAACA;AACfA,QAAGA,MAAMA,YAAYA,KAAKA,EAC1BA;AACCA,cAAMA,GAASA,MAAOA,CAACA,KAAKA,EAAEA,CAACA;AAC/BA,YAAGA,KAAKA,GAACA,CAACA,EACVA;AACCA,iBAAIA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAACA,MAAMA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EACnCA;AACCA,sBAAMA,CAACA,CAACA,CAACA,GAAGA,KAAKA,CAACA,MAAMA,CAACA,CAACA,CAACA,EAAEA,KAAKA,GAAGA,CAACA,CAACA,CAACA;aACxCA;SACDA;KACDA,MAEDA;AACCA,cAAMA,GAAGA,EAAEA,CAACA;AACZA,YAAGA,KAAKA,GAACA,CAACA,EAAEA,KAAIA,IAAIA,CAACA,IAAIA,MAAMA,EAC/BA;AAECA,kBAAMA,CAACA,CAACA,CAACA,GAAGA,KAAKA,CAACA,MAAMA,CAACA,CAACA,CAACA,EAAEA,KAAKA,GAAGA,CAACA,CAACA,CAACA;SACxCA;KACDA;AAEDA,WAAOA,MAAMA,CAACA;CAEdA","file":"System/Utility/clone.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport Type from '../Types';\r\n\r\nexport default function clone(source:any, depth:number = 0):any\r\n{\r\n\tif(depth<0)\r\n\t\treturn source;\r\n\r\n\t// return primitives as is.\r\n\tif(!Type.isObject(source)) return source;\r\n\r\n\tvar result:any;\r\n\tif(source instanceof Array)\r\n\t{\r\n\t\tresult = (<any>source).slice();\r\n\t\tif(depth>0)\r\n\t\t{\r\n\t\t\tfor(let i = 0; i<result.length; i++)\r\n\t\t\t{\r\n\t\t\t\tresult[i] = clone(result[i], depth - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tresult = {};\r\n\t\tif(depth>0) for(let k in source)\r\n\t\t{\r\n\t\t\t//noinspection JSUnfilteredForInLoop\r\n\t\t\tresult[k] = clone(source[k], depth - 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n"]}