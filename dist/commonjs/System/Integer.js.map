{"version":3,"sources":["System/Integer.ts"],"names":["Integer","Integer.random","Integer.is","Integer.assert"],"mappings":";;;;;;;;;;;;qBAKiB,SAAS;;;;2CACI,gCAAgC;;;;AAE9D,SAAA,OAAA,CAAiB,CAAQ,EAAA;AAExBA,WAAOA,CAACA,GAAGA,CAACA,CAACA;CACbA;AAED,IAAO,OAAO,CAwBb;AAxBD,CAAA,UAAO,OAAO,EACd;AAGCA,aAAAA,MAAAA,CAAuBA,GAAUA,EAAAA;AAEhCC,eAAOA,AAACA,IAAIA,CAACA,MAAMA,EAAEA,GAACA,GAAGA,GAAIA,CAACA,CAACA;KAC/BA;AAHeD,WAAAA,CAAAA,MAAMA,GAAAA,MAGrBA,CAAAA;AAEDA,aAAAA,EAAAA,CAAmBA,CAAQA,EAAAA;AAE1BE,eAAOA,mBAAKA,QAAQA,CAACA,CAACA,EAAEA,KAAKA,CAACA,IAAIA,CAACA,KAAGA,CAACA,GAAGA,CAACA,CAAAA,AAACA,CAACA;KAC7CA;AAHeF,WAAAA,CAAAA,EAAEA,GAAAA,EAGjBA,CAAAA;AAEDA,aAAAA,MAAAA,CAAuBA,CAAQA,EAAEA,YAAoBA,EAAAA;AAEpDG,YAAIA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA;AACdA,YAAGA,CAACA,CAACA,EACLA;AACCA,kBAAMA,6CAAsBA,YAAYA,IAAIA,GAAGA,EAAEA,qBAAqBA,CAACA,CAACA;SACxEA;AACDA,eAAOA,CAACA,CAACA;KACTA;AAReH,WAAAA,CAAAA,MAAMA,GAAAA,MAQrBA,CAAAA;CAEDA,CAAAA,CAxBM,OAAO,KAAP,OAAO,GAAA,EAAA,CAAA,CAAA,CAwBb;qBAEc,OAAO","file":"System/Integer.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport Type from './Types';\r\nimport ArgumentException from './Exceptions/ArgumentException';\r\n\r\nfunction Integer(n:number):number\r\n{\r\n\treturn n | 0;\r\n}\r\n\r\nmodule Integer\r\n{\r\n\r\n\r\n\texport function random(max:number):number\r\n\t{\r\n\t\treturn (Math.random()*max) | 0;\r\n\t}\r\n\r\n\texport function is(n:number):boolean\r\n\t{\r\n\t\treturn Type.isNumber(n, false) && n==(n | 0);\r\n\t}\r\n\r\n\texport function assert(n:number, argumentName?:string):boolean\r\n\t{\r\n\t\tvar i = is(n);\r\n\t\tif(!i)\r\n\t\t{\r\n\t\t\tthrow new ArgumentException(argumentName || 'n', \"Must be an integer.\");\r\n\t\t}\r\n\t\treturn i;\r\n\t}\r\n\r\n}\r\n\r\nexport default Integer;\r\n"]}