{"version":3,"sources":["System/Timers/Timer.ts"],"names":[],"mappings":"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","file":"System/Timers/Timer.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {ICancellable} from \"../Threading/ICancellable\";\r\nimport {ObservableBase} from \"../Observable/ObservableBase\";\r\nimport {ITimer} from \"./ITimer\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport default class Timer extends ObservableBase<number> implements ITimer, ICancellable\r\n{\r\n\r\n\tprivate _cancel:()=>void;\r\n\tprivate _count:number = 0;\r\n\r\n\tconstructor(\r\n\t\tprivate _interval:number,\r\n\t\tprivate _maxCount:number = Infinity,\r\n\t\tprivate _initialDelay = _interval)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(_interval===null || _interval=== void(0))\r\n\t\t\tthrow \"'interval' must be a valid number.\";\r\n\t\tif(_interval<0)\r\n\t\t\tthrow \"'interval' cannot be negative.\";\r\n\t}\r\n\r\n\tstatic startNew(\r\n\t\tmillisecondInterval:number,\r\n\t\tmaxCount:number = Infinity,\r\n\t\tinitialDelay:number = millisecondInterval):Timer\r\n\t{\r\n\t\tvar t = new Timer(millisecondInterval, maxCount, millisecondInterval);\r\n\t\tt.start();\r\n\t\treturn t;\r\n\t}\r\n\r\n\tget isRunning():boolean\r\n\t{\r\n\t\treturn !!this._cancel;\r\n\t}\r\n\r\n\tget count():number\r\n\t{\r\n\t\treturn this._count;\r\n\t}\r\n\r\n\tstart():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(!_._cancel && _._count<_._maxCount)\r\n\t\t{\r\n\t\t\t// For now, if it's isn't the start...\r\n\t\t\tif(_._count || _._initialDelay==_._interval)\r\n\t\t\t{\r\n\t\t\t\tlet i = setInterval(\r\n\t\t\t\t\tTimer._onTick,\r\n\t\t\t\t\t_._interval,\r\n\t\t\t\t\t_);\r\n\r\n\t\t\t\t_._cancel = ()=>\r\n\t\t\t\t{\r\n\t\t\t\t\tclearInterval(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlet i = setTimeout(\r\n\t\t\t\t\tTimer._onTick,\r\n\t\t\t\t\t_._initialDelay,\r\n\t\t\t\t\t_, true);\r\n\r\n\t\t\t\t_._cancel = ()=>\r\n\t\t\t\t{\r\n\t\t\t\t\tclearTimeout(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstop():void\r\n\t{\r\n\t\tthis.cancel();\r\n\t}\r\n\r\n\treset():void\r\n\t{\r\n\t\tthis.stop();\r\n\t\tthis._count = 0;\r\n\t}\r\n\r\n\tcancel():boolean\r\n\t{\r\n\t\tif(this._cancel)\r\n\t\t{\r\n\t\t\tthis._cancel();\r\n\t\t\tthis._cancel = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.cancel();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t// We use a private static here so there's no need to create a handler every time.\r\n\tprivate static _onTick(\r\n\t\ttimer:Timer,\r\n\t\treInitTimer?:boolean):void\r\n\t{\r\n\t\tvar index      = timer._count++,\r\n\t\t    max        = timer._maxCount,\r\n\t\t    isComplete = timer._count>=max;\r\n\r\n\t\tif(reInitTimer)\r\n\t\t{\r\n\t\t\ttimer.cancel();\r\n\t\t\ttimer.start();\r\n\t\t}\r\n\r\n\t\tif(isComplete)\r\n\t\t{\r\n\t\t\ttimer.stop();\r\n\t\t}\r\n\r\n\t\tif(index<max)\r\n\t\t{\r\n\t\t\ttimer._onNext(index);\r\n\t\t}\r\n\r\n\t\tif(isComplete)\r\n\t\t{\r\n\t\t\ttimer._onCompleted();\r\n\t\t}\r\n\t}\r\n\r\n}"]}