{"version":3,"sources":["System/Collections/Enumeration/forEach.ts"],"names":["forEach"],"mappings":";;;;;;;;;qBAUA,OAAA;;;;iCAHoB,0BAA0B;;gDAClB,0CAA0C;;IAA1D,UAAU;;AAEtB,SAAA,OAAA,CACI,UAAqC,EACrC,MAAwC,EAAA;AAExCA,QAAIA,UAAUA,EAAEA;AACZA,sCAAMA,UAAUA,CAACA,IAAIA,CAACA,UAAUA,CAACA,EAAEA,UAAAA,CAACA,EAAAA;AAEhCA,sBAAUA,CAACA,OAAOA,CAACA,CAACA,EAAEA,MAAMA,CAACA,CAACA;SACjCA,CAACA,CAACA;KACNA;CACJA","file":"System/Collections/Enumeration/forEach.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"IEnumerable.d.ts\"/>\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\nimport {using} from '../../Disposable/Utility';\r\nimport * as Enumerator from '../../Collections/Enumeration/Enumerator';\r\n\r\nexport default function forEach<T>(\r\n    enumerable:IEnumerable<T> | IArray<T>,\r\n    action:(element:T, index?:number) => any):void\r\n{\r\n    if (enumerable) {\r\n        using(Enumerator.from(enumerable), e=>\r\n        {\r\n            Enumerator.forEach(e, action);\r\n        });\r\n    }\r\n}\r\n\r\n"]}