{"version":3,"sources":["System/Collections/Enumeration/EnumeratorBase.ts"],"names":[],"mappings":"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","file":"System/Collections/Enumeration/EnumeratorBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {Type} from \"../../Types\";\r\nimport {DisposableBase} from \"../../Disposable/DisposableBase\";\r\nimport {ObjectPool} from \"../../Disposable/ObjectPool\";\r\nimport {IDisposable} from \"../../Disposable/IDisposable\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IIteratorResult} from \"./IIterator\";\r\nimport {IYield} from \"./IYield\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport __extendsImport from \"../../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nconst VOID0:any = void(0);\r\n\r\nvar yielderPool:ObjectPool<Yielder<any>>;\r\nfunction yielder():Yielder<any>;\r\nfunction yielder(recycle?:Yielder<any>):void;\r\nfunction yielder(recycle?:Yielder<any>):Yielder<any>\r\n{\r\n\tif(!yielderPool)\r\n\t\tyielderPool\r\n\t\t\t= new ObjectPool<Yielder<any>>(40, ()=>new Yielder<any>(),y=>y.yieldBreak());\r\n\tif(!recycle) return yielderPool.take();\r\n\tyielderPool.add(recycle);\r\n}\r\n\r\nclass Yielder<T> implements IYield<T>, IDisposable\r\n{\r\n\tprivate _current:T = VOID0;\r\n\tprivate _index:number;\r\n\r\n\tget current():T { return this._current; } // this class is not entirely local/private.  Still needs protection.\r\n\r\n\tget index():number { return this._index; }\r\n\r\n\tyieldReturn(value:T):boolean\r\n\t{\r\n\t\tthis._current = value;\r\n\t\tif(this._index===VOID0)\r\n\t\t\tthis._index = 0;\r\n\t\telse\r\n\t\t\tthis._index++;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tyieldBreak():boolean\r\n\t{\r\n\t\tthis._current = VOID0;\r\n\t\tthis._index = VOID0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.yieldBreak();\r\n\t}\r\n}\r\n\r\ntype ActionVoid = ()=>void;\r\n\r\n// IEnumerator State\r\nenum EnumeratorState { Before, Running, After }\r\n\r\n// \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n// Naming this class EnumeratorBase to avoid collision with IE.\r\nexport class EnumeratorBase<T> extends DisposableBase implements IEnumerator<T>\r\n{\r\n\r\n\tprivate _yielder:Yielder<T>;\r\n\tprivate _state:EnumeratorState;\r\n\tprivate _disposer:()=>void;\r\n\r\n\tget current():T\r\n\t{\r\n\t\tvar y = this._yielder;\r\n\t\treturn y && y.current;\r\n\t}\r\n\r\n\tget index():number\r\n\t{\r\n\t\tvar y = this._yielder;\r\n\t\treturn y && y.index;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tinitializer:() => void,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tinitializer:() => void,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:()=>void,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tprivate _initializer:() => void,\r\n\t\tprivate _tryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:ActionVoid|boolean,\r\n\t\tisEndless?:boolean)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.reset();\r\n\t\tif(Type.isBoolean(isEndless))\r\n\t\t\tthis._isEndless = isEndless;\r\n\t\telse if(Type.isBoolean(disposer))\r\n\t\t\tthis._isEndless = disposer;\r\n\r\n\t\tif(Type.isFunction(disposer))\r\n\t\t\tthis._disposer = disposer;\r\n\t}\r\n\r\n\tprotected _isEndless:boolean;\r\n\t/*\r\n\t * Provides a mechanism to indicate if this enumerable never ends.\r\n\t * If set to true, some operations that expect a finite result may throw.\r\n\t * Explicit false means it has an end.\r\n\t * Implicit void means unknown.\r\n\t */\r\n\tget isEndless():boolean\r\n\t{\r\n\t\treturn this._isEndless;\r\n\t}\r\n\r\n\treset():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tvar y = _._yielder;\r\n\t\t_._yielder = null;\r\n\r\n\t\t_._state = EnumeratorState.Before;\r\n\r\n\t\tif(y) yielder(y); // recycle until actually needed.\r\n\t}\r\n\r\n\tmoveNext():boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tswitch(_._state)\r\n\t\t\t{\r\n\t\t\t\tcase EnumeratorState.Before:\r\n\t\t\t\t\t_._yielder = _._yielder || yielder();\r\n\t\t\t\t\t_._state = EnumeratorState.Running;\r\n\t\t\t\t\tvar initializer = _._initializer;\r\n\t\t\t\t\tif(initializer)\r\n\t\t\t\t\t\tinitializer();\r\n\t\t\t\t// fall through\r\n\t\t\t\tcase EnumeratorState.Running:\r\n\t\t\t\t\tif(_._tryGetNext(_._yielder))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.dispose();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase EnumeratorState.After:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tthis.dispose();\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\tnextValue():T\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? this.current\r\n\t\t\t: VOID0;\r\n\t}\r\n\r\n\t/**\r\n\t * Exposed for compatibility with generators.\r\n\t */\r\n\tnext():IIteratorResult<T>\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? new IteratorResult(this.current, this.index)\r\n\t\t\t: IteratorResult.Done\r\n\t}\r\n\r\n\t'return'():IIteratorResult<void>\r\n\t'return'<TReturn>(value:TReturn):IIteratorResult<TReturn>\r\n\t'return'(value?:any):IIteratorResult<any>\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\treturn value===VOID0 || this._state===EnumeratorState.After\r\n\t\t\t\t? IteratorResult.Done\r\n\t\t\t\t: new IteratorResult(value, VOID0, true);\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tthis.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tvar _ = this, disposer = _._disposer;\r\n\r\n\t\t_._initializer = null;\r\n\t\t_._disposer = null;\r\n\r\n\r\n\t\tvar y = _._yielder;\r\n\t\t_._yielder = null;\r\n\t\tthis._state = EnumeratorState.After;\r\n\r\n\t\tif(y) yielder(y);\r\n\r\n\t\tif(disposer)\r\n\t\t\tdisposer();\r\n\t}\r\n\r\n}\r\n\r\nexport default EnumeratorBase;\r\n"]}