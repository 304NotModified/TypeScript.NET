{"version":3,"sources":["System/Types.ts"],"names":["TypeInfo","TypeInfo.constructor","TypeInfo.member","TypeInfo.getFor","Type","Type.isBoolean","Type.isNumber","Type.isTrueNaN","Type.isString","Type.isPrimitive","Type.isFunction","Type.isObject","Type.numberOrNaN","Type.of","Type.hasMember"],"mappings":"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","file":"System/Types.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nconst\r\n_BOOLEAN:string   = typeof true,\r\n_NUMBER:string    = typeof 0,\r\n_STRING:string    = typeof \"\",\r\n_OBJECT:string    = typeof {},\r\n_UNDEFINED:string = typeof undefined,\r\n_FUNCTION:string  = typeof function() {};\r\n\r\n// Only used for primitives.\r\nvar typeInfoRegistry:{[key:string]:TypeInfo} = {};\r\n\r\n/**\r\n * Exposes easy access to type information including inquiring about members.\r\n */\r\nexport class TypeInfo\r\n{\r\n\t// Not retained for primitives. Since they have no members.\r\n\tprivate target:any;\r\n\r\n\ttype:string;\r\n\r\n\tisBoolean:boolean;\r\n\tisNumber:boolean;\r\n\tisFinite:boolean;\r\n\tisValidNumber:boolean;\r\n\tisString:boolean;\r\n\tisTrueNaN:boolean;\r\n\tisObject:boolean;\r\n\tisFunction:boolean;\r\n\tisUndefined:boolean;\r\n\tisNull:boolean;\r\n\tisNullOrUndefined:boolean;\r\n\tisPrimitive:boolean;\r\n\r\n\tconstructor(target:any)\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.isBoolean = false;\r\n\t\t_.isNumber = false;\r\n\t\t_.isString = false;\r\n\t\t_.isTrueNaN = false;\r\n\t\t_.isObject = false;\r\n\t\t_.isFunction = false;\r\n\t\t_.isUndefined = false;\r\n\t\t_.isNull = false;\r\n\t\t_.isPrimitive = false;\r\n\r\n\t\tswitch(_.type = typeof target)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\t\t_.isBoolean = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _NUMBER:\r\n\t\t\t\t_.isNumber = true;\r\n\t\t\t\t_.isTrueNaN = isNaN(target);\r\n\t\t\t\t_.isFinite = isFinite(target);\r\n\t\t\t\t_.isValidNumber = !_.isTrueNaN;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _STRING:\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\tif(target===null) {\r\n\t\t\t\t\t_.isNull = true;\r\n\t\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isObject = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\t_.isUndefined = true;\r\n\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Fatal type failure.  Unknown type: \" + _.type;\r\n\t\t}\r\n\r\n\t\tObject.freeze(_);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any member or non-member,\r\n\t * where non-members are of type undefined.\r\n\t * @param name\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tmember(name:string):TypeInfo\r\n\t{\r\n\t\tvar t = this.target;\r\n\t\treturn TypeInfo.getFor(\r\n\t\t\tt && name in t\r\n\t\t\t\t? t[name]\r\n\t\t\t\t: undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any target object.\r\n\t * If the target object is of a primitive type, it returns the TypeInfo instance assigned to that type.\r\n\t * @param target\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tstatic getFor(target:any):TypeInfo\r\n\t{\r\n\t\tvar type:string = typeof target;\r\n\t\tswitch(type)\r\n\t\t{\r\n\t\t\tcase _OBJECT:\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\treturn new TypeInfo(target);\r\n\t\t}\r\n\t\tvar info = typeInfoRegistry[type];\r\n\t\tif(!info) typeInfoRegistry[type] = info = new TypeInfo(target);\r\n\t\treturn info;\r\n\t}\r\n}\r\n\r\nmodule Type\r\n{\r\n\t/**\r\n\t * typeof true\r\n\t * @type {string}\r\n\t */\r\n\texport const BOOLEAN:string = _BOOLEAN;\r\n\r\n\t/**\r\n\t * typeof 0\r\n\t * @type {string}\r\n\t */\r\n\texport const NUMBER:string = _NUMBER;\r\n\r\n\t/**\r\n\t * typeof \"\"\r\n\t * @type {string}\r\n\t */\r\n\texport const STRING:string = _STRING;\r\n\r\n\t/**\r\n\t * typeof {}\r\n\t * @type {string}\r\n\t */\r\n\texport const OBJECT:string = _OBJECT;\r\n\r\n\r\n\t/**\r\n\t * typeof undefined\r\n\t * @type {string}\r\n\t */\r\n\texport const UNDEFINED:string = _UNDEFINED;\r\n\r\n\t/**\r\n\t * typeof function\r\n\t * @type {string}\r\n\t */\r\n\texport const FUNCTION:string = _FUNCTION;\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a boolean.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isBoolean(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_BOOLEAN;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a number.\r\n\t * @param value\r\n\t * @param allowNaN\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isNumber(value:any, allowNaN:boolean = true):boolean\r\n\t{\r\n\t\treturn typeof value===_NUMBER && (allowNaN || !isNaN(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if is a number and is NaN.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isTrueNaN(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_NUMBER && isNaN(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a string.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isString(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_STRING;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value is a boolean, string, number, null, or undefined.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isPrimitive(value:any):boolean\r\n\t{\r\n\t\tvar t = typeof value;\r\n\t\tswitch(t)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\tcase _STRING:\r\n\t\t\tcase _NUMBER:\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\treturn true;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\treturn value===null;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a function.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isFunction(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_FUNCTION;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is an object.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isObject(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_OBJECT;\r\n\t}\r\n\r\n\t/**\r\n\t * Guarantees a number value or NaN instead.\r\n\t * @param value\r\n\t * @returns {number}\r\n\t */\r\n\texport function numberOrNaN(value:any):number\r\n\t{\r\n\t\treturn isNaN(value) ? NaN : value;\r\n\t}\r\n\r\n\texport function of(target:any):TypeInfo\r\n\t{\r\n\t\treturn TypeInfo.getFor(target);\r\n\t}\r\n\r\n\texport function hasMember(value:any,property:string):boolean {\r\n\t\treturn value && !isPrimitive(value) && property in value;\r\n\t}\r\n\r\n}\r\n\r\nObject.freeze(Type);\r\n\r\nexport default Type;\r\n"]}