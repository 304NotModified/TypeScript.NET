{"version":3,"sources":["System/Time/DateTime.ts"],"names":["DateTime","DateTime.constructor","DateTime._setJsDate","DateTime.addMilliseconds","DateTime.addDays","DateTime.add","DateTime.timePassedSince","DateTime.jsDate","DateTime.kind","DateTime.year","DateTime.month","DateTime.day","DateTime.dayOfWeek","DateTime.date","DateTime.timeOfDay","DateTime.utc","DateTime.between","DateTime.now","DateTime.today","DateTime.tomorrow"],"mappings":"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","file":"System/Time/DateTime.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path='ITimeQuantity.d.ts'/>\r\n///<reference path=\"ICalendarDate.d.ts\"/>\r\nimport * as HowMany from './HowMany';\r\nimport ClockTime from './ClockTime';\r\nimport TimeSpan from './TimeSpan';\r\n\r\n\r\nclass DateTime implements ICalendarDate\r\n{\r\n\tprivate _value:Date;\r\n\r\n\tget jsDate():Date\r\n\t{\r\n\t\treturn new Date(this._value.getTime()); // return a clone.\r\n\t}\r\n\r\n\tprivate _setJsDate(value:Date)\r\n\t{\r\n\t\tthis._time = null;\r\n\t\tthis._value = new Date(value.getTime());\r\n\t}\r\n\r\n\tconstructor();\r\n\tconstructor(dateString:string, kind?:DateTime.Kind);\r\n\tconstructor(milliseconds:number, kind?:DateTime.Kind);\r\n\tconstructor(source:Date, kind?:DateTime.Kind);\r\n\tconstructor(source:DateTime, kind?:DateTime.Kind);\r\n\tconstructor(value:any = new Date(), kind:DateTime.Kind = DateTime.Kind.Local)\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_._kind = kind;\r\n\t\tif(value instanceof DateTime)\r\n\t\t\t_._value = value.jsDate;\r\n\t\telse if(value instanceof Date)\r\n\t\t\t_._setJsDate(value);\r\n\t\telse\r\n\t\t\t_._value = value==undefined\r\n\t\t\t\t? new Date()\r\n\t\t\t\t: new Date(value);\r\n\t}\r\n\r\n\tprivate _kind:DateTime.Kind;\r\n\tget kind():DateTime.Kind\r\n\t{\r\n\t\treturn this._kind;\r\n\t}\r\n\r\n\tget year():number\r\n\t{\r\n\t\treturn this._value.getFullYear();\r\n\t}\r\n\r\n\tget month():number\r\n\t{\r\n\t\treturn this._value.getMonth();\r\n\t}\r\n\r\n\t/**\r\n\t * An integer between 1 and 31.\r\n\t * @returns {number}\r\n\t */\r\n\tget day():number\r\n\t{\r\n\t\treturn this._value.getDate();\r\n\t}\r\n\r\n\tget dayOfWeek():DateTime.DayOfWeek\r\n\t{\r\n\t\treturn this._value.getDay();\r\n\t}\r\n\r\n\r\n\taddMilliseconds(ms:number):DateTime\r\n\t{\r\n\t\tms = ms || 0;\r\n\t\treturn new DateTime(this._value.getTime() + ms);\r\n\t}\r\n\r\n\taddDays(days:number):DateTime\r\n\t{\r\n\t\tdays = days || 0;\r\n\t\treturn this.addMilliseconds(days*HowMany.Milliseconds.Per.Day);\r\n\t}\r\n\r\n\t/**\r\n\t * Receives an ITimeTotal value and adds based on the total milliseconds.\r\n\t * @param {ITimeQuantity} time\r\n\t * @returns {DateTime}\r\n\t */\r\n\tadd(time:ITimeQuantity):DateTime\r\n\t{\r\n\t\treturn this.addMilliseconds(time.total.milliseconds);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DateTime object for 00:00 of this date.\r\n\t */\r\n\tget date():DateTime\r\n\t{\r\n\t\tvar _ = this;\r\n\t\treturn new DateTime(\r\n\t\t\tnew Date(\r\n\t\t\t\t_.year,\r\n\t\t\t\t_.month,\r\n\t\t\t\t_.day\r\n\t\t\t)\r\n\t\t\t,_._kind\r\n\t\t);\r\n\t}\r\n\r\n\tprivate _time:ClockTime;\r\n\tget timeOfDay():ClockTime\r\n\t{\r\n\t\tvar _ = this, t = _._time;\r\n\t\tif(!t) {\r\n\t\t\tvar d = this._value;\r\n\t\t\t_._time = t = new ClockTime(\r\n\t\t\t\td.getHours(),\r\n\t\t\t\td.getMinutes(),\r\n\t\t\t\td.getSeconds(),\r\n\t\t\t\td.getMilliseconds());\r\n\t\t}\r\n\t\treturn t;\r\n\t}\r\n\r\n\r\n\tstatic get now():DateTime\r\n\t{\r\n\t\treturn new DateTime();\r\n\t}\r\n\r\n\tget utc():DateTime\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(_._kind!=DateTime.Kind.Local)\r\n\t\t\treturn new DateTime(_,_._kind);\r\n\r\n\t\tvar d = _._value;\r\n\t\treturn new DateTime(\r\n\t\t\tnew Date(\r\n\t\t\t\td.getUTCFullYear(),\r\n\t\t\t\td.getUTCMonth(),\r\n\t\t\t\td.getUTCDate(),\r\n\t\t\t\td.getUTCHours(),\r\n\t\t\t\td.getUTCMinutes(),\r\n\t\t\t\td.getUTCSeconds(),\r\n\t\t\t\td.getUTCMilliseconds()\r\n\t\t\t),\r\n\t\t\tDateTime.Kind.Utc\r\n\t\t);\r\n\t}\r\n\r\n\tstatic get today():DateTime\r\n\t{\r\n\t\treturn DateTime.now.date;\r\n\t}\r\n\r\n\tstatic get tomorrow():DateTime\r\n\t{\r\n\t\tvar today:DateTime = DateTime.today;\r\n\t\treturn today.addDays(1);\r\n\t}\r\n\r\n\tstatic between(first:Date|DateTime, last:Date|DateTime):TimeSpan\r\n\t{\r\n\t\tvar f:Date = first instanceof DateTime ? first._value : <Date>first,\r\n\t\t    l:Date = last instanceof DateTime ? last._value: <Date>last;\r\n\r\n\t\treturn new TimeSpan(f.getTime() - l.getTime());\r\n\t}\r\n\r\n\ttimePassedSince(previous:Date|DateTime):TimeSpan {\r\n\t\treturn DateTime.between(previous,this);\r\n\t}\r\n\r\n}\r\n\r\nmodule DateTime\r\n{\r\n\texport const enum DayOfWeek {\r\n\t\tSunday,\r\n\t\tMonday,\r\n\t\tTuesday,\r\n\t\tWednesday,\r\n\t\tThursday,\r\n\t\tFriday,\r\n\t\tSaturday\r\n\t}\r\n\r\n\texport const enum Kind {\r\n\t\tUnspecified,\r\n\t\tLocal,\r\n\t\tUtc,\r\n\t}\r\n}\r\n\r\nObject.freeze(DateTime);\r\n\r\nexport default DateTime;\r\n"]}