{"version":3,"sources":["System/Time/ClockTime.ts"],"names":["ClockTime","ClockTime.constructor","ClockTime.equals","ClockTime.compareTo","ClockTime.toTimeSpan","ClockTime.toString","ClockTime.totalMilliseconds","ClockTime.direction","ClockTime.ticks","ClockTime.milliseconds","ClockTime.seconds","ClockTime.minutes","ClockTime.hours","ClockTime.days","ClockTime.total","ClockTime.from","pluralize"],"mappings":"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","file":"System/Time/ClockTime.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Originally based upon .NET source but with many additions and improvements.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"ITimeMeasurement.d.ts\"/>\r\n///<reference path=\"ITimeTotal.d.ts\"/>\r\n///<reference path=\"../IEquatable.d.ts\"/>\r\n///<reference path=\"../IComparable.d.ts\"/>\r\n///<reference path=\"../IFormattable.d.ts\"/>\r\n///<reference path=\"../IFormatProvider.d.ts\"/>\r\nimport {areEqual,compare} from '../Compare';\r\nimport * as HowMany from './HowMany';\r\nimport TimeSpan from './TimeSpan';\r\n\r\n\r\nexport default\r\nclass ClockTime implements ITimeMeasurement, IEquatable<ClockTime>, IComparable<ClockTime>, IFormattable, ITimeTotal\r\n{\r\n\tprivate _totalMilliseconds:number;\r\n\tget totalMilliseconds():number\r\n\t{\r\n\t\treturn this._totalMilliseconds;\r\n\t}\r\n\r\n\t// Could be in reverse or negative...\r\n\tget direction():number\r\n\t{\r\n\t\treturn compare(this._totalMilliseconds, 0);\r\n\t}\r\n\r\n\tconstructor(milliseconds:number);\r\n\tconstructor(hours:number, minutes:number, seconds?:number, milliseconds?:number);\r\n\tconstructor(...args:number[])\r\n\t{\r\n\t\tthis._totalMilliseconds =\r\n\t\t\targs.length>1\r\n\t\t\t\t? TimeSpan.millisecondsFromTime(\r\n\t\t\t\targs[0] || 0,\r\n\t\t\t\targs[1] || 0,\r\n\t\t\t\targs.length>2 && args[2] || 0,\r\n\t\t\t\targs.length>3 && args[3] || 0\r\n\t\t\t)\r\n\t\t\t\t: (args.length>0 && args[0] || 0);\r\n\t}\r\n\r\n\r\n\tequals(other:ClockTime):boolean\r\n\t{\r\n\t\treturn areEqual(this._totalMilliseconds, other.totalMilliseconds);\r\n\t}\r\n\r\n\tcompareTo(other:ClockTime):number\r\n\t{\r\n\t\tif(other==null) return 1 | 0;\r\n\r\n\t\treturn compare(this._totalMilliseconds, other.totalMilliseconds);\r\n\t}\r\n\r\n\r\n\tprivate _ticks:number;\r\n\tget ticks():number\r\n\t{\r\n\t\tvar _ = this, r = _._ticks;\r\n\t\tif(r===undefined)\r\n\t\t{\r\n\t\t\tvar ms = Math.abs(_._totalMilliseconds);\r\n\t\t\t_._ticks = r = (ms - Math.floor(ms))*HowMany.Ticks.Per.Millisecond;\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n\r\n\tprivate _ms:number;\r\n\r\n\tget milliseconds():number\r\n\t{\r\n\t\tvar _ = this, r = _._ms;\r\n\t\tif(r===undefined)\r\n\t\t\t_._ms = r =\r\n\t\t\t\t(this._totalMilliseconds%HowMany.Milliseconds.Per.Second) | 0;\r\n\t\treturn r;\r\n\t}\r\n\r\n\r\n\tprivate _seconds:number;\r\n\tget seconds():number\r\n\t{\r\n\t\tvar _ = this, r = _._seconds;\r\n\t\tif(r===undefined)\r\n\t\t\t_._seconds = r =\r\n\t\t\t\t((this._totalMilliseconds/HowMany.Milliseconds.Per.Second)\r\n\t\t\t\t%HowMany.Seconds.Per.Minute) | 0;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tprivate _minutes:number;\r\n\tget minutes():number\r\n\t{\r\n\t\tvar _ = this, r = _._minutes;\r\n\t\tif(r===undefined)\r\n\t\t\t_._minutes = r =\r\n\t\t\t\t((this._totalMilliseconds/HowMany.Milliseconds.Per.Minute)\r\n\t\t\t\t%HowMany.Minutes.Per.Hour) | 0;\r\n\r\n\t\treturn r;\r\n\t}\r\n\r\n\tprivate _hours:number;\r\n\tget hours():number\r\n\t{\r\n\t\tvar _ = this, r = _._hours;\r\n\t\tif(r===undefined)\r\n\t\t\t_._hours = r =\r\n\t\t\t\t((this._totalMilliseconds/HowMany.Milliseconds.Per.Hour)\r\n\t\t\t\t%HowMany.Hours.Per.Day) | 0;\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\tprivate _days:number;\r\n\tget days():number\r\n\t{\r\n\t\tvar _ = this, r = _._days;\r\n\t\tif(r===undefined)\r\n\t\t\t_._days = r =\r\n\t\t\t\t(this._totalMilliseconds\r\n\t\t\t\t/HowMany.Milliseconds.Per.Hour\r\n\t\t\t\t/HowMany.Seconds.Per.Minute\r\n\t\t\t\t/HowMany.Minutes.Per.Hour\r\n\t\t\t\t/HowMany.Hours.Per.Day) | 0;\r\n\t\treturn r;\r\n\t}\r\n\r\n\tget total():ITimeMeasurement\r\n\t{\r\n\t\treturn this.toTimeSpan();\r\n\t}\r\n\r\n\ttoTimeSpan():TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(this._totalMilliseconds);\r\n\t}\r\n\r\n\t// Static version for relative consistency.  Constructor does allow this format.\r\n\tstatic from(hours:number, minutes:number, seconds:number = 0, milliseconds:number = 0):ClockTime\r\n\t{\r\n\t\treturn new ClockTime(hours, minutes, seconds, milliseconds);\r\n\t}\r\n\r\n\ttoString(/*format?:string, formatProvider?:IFormatProvider*/):string\r\n\t{\r\n\t\t/* INSERT CUSTOM FORMATTING CODE HERE */\r\n\r\n\r\n\t\tvar _ = this, a:string[] = [];\r\n\r\n\t\tif(_.days)\r\n\t\t\ta.push(pluralize(_.days, \"day\"));\r\n\r\n\t\tif(_.hours)\r\n\t\t\ta.push(pluralize(_.hours, \"hour\"));\r\n\r\n\t\tif(_.minutes)\r\n\t\t\ta.push(pluralize(_.minutes, \"minute\"));\r\n\r\n\t\tif(_.seconds)\r\n\t\t\ta.push(pluralize(_.seconds, \"second\"));\r\n\r\n\t\tif(a.length>1)\r\n\t\t\ta.splice(a.length - 1, 0, \"and\");\r\n\r\n\t\treturn a.join(\", \").replace(\", and, \", \" and \");\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Temporary until the full TimeSpanFormat is available.\r\nfunction pluralize(value:number, label:string):string\r\n{\r\n\tif(Math.abs(value)!==1)\r\n\t\tlabel += \"s\";\r\n\r\n\treturn label;\r\n}\r\n"]}