{"version":3,"sources":["System/Events/EventSimple.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;QAMG,SAAS;;;;;;;YAAT,SAAS,GAAG,iBAAe,CAAC;YAMlC;gBAAA;oBAES,eAAU,GAAO,EAAE,CAAC;gBAuC7B,CAAC;gBArCA,yBAAG,GAAH,UAAI,QAAU;oBAEb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChC,CAAC;gBAED,4BAAM,GAAN,UAAO,QAAU;oBAEhB,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBAC9C,EAAE,CAAA,CAAC,KAAK,GAAC,CAAC,CAAC;wBAAC,MAAM,CAAC;oBACnB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAED,8BAAQ,GAAR;oBAAS,gBAAe;yBAAf,WAAe,CAAf,sBAAe,CAAf,IAAe;wBAAf,+BAAe;;oBAEvB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;oBAChC,GAAG,CAAA,CAAU,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,CAAC;wBAAnB,IAAI,CAAC,kBAAA;wBAER,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACf;gBACF,CAAC;gBAED,yCAAmB,GAAnB;oBAEC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;oBAChC,MAAM,CAAC;wBAEN,GAAG,CAAA,CAAU,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,CAAC;4BAAnB,IAAI,CAAC,kBAAA;4BAER,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBAClB;oBACF,CAAC,CAAC;gBACH,CAAC;gBAED,6BAAO,GAAP;oBAEC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC5B,CAAC;gBACF,kBAAC;YAAD,CAzCA,AAyCC,IAAA;YAzCD,iCAyCC,CAAA","file":"EventSimple.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Based on Netjs mscorlib.ts\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IDisposable} from \"../Disposable/IDisposable\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n/**\r\n * A simple event dispatcher provided as an alternative to built-in event.\r\n * If just dispatching a payload to a uniform set of functions, it may be better to just use the utilities in System/Collections/Array/Dispatch.\r\n */\r\nexport default class EventSimple<T extends Function> implements IDisposable\r\n{\r\n\tprivate _listeners:T[] = [];\r\n\r\n\tadd(listener:T):void\r\n\t{\r\n\t\tthis._listeners.push(listener);\r\n\t}\r\n\r\n\tremove(listener:T):void\r\n\t{\r\n\t\tvar index = this._listeners.indexOf(listener);\r\n\t\tif(index<0) return;\r\n\t\tthis._listeners.splice(index, 1);\r\n\t}\r\n\r\n\tdispatch(...params:any[]):void\r\n\t{\r\n\t\tvar listeners = this._listeners;\r\n\t\tfor(var f of listeners)\r\n\t\t{\r\n\t\t\tf.call(params);\r\n\t\t}\r\n\t}\r\n\r\n\ttoMulticastFunction():Function\r\n\t{\r\n\t\tvar listeners = this._listeners;\r\n\t\treturn function()\r\n\t\t{\r\n\t\t\tfor(var f of listeners)\r\n\t\t\t{\r\n\t\t\t\tf.call(arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis._listeners.length = 0;\r\n\t}\r\n}"]}