{"version":3,"sources":["System/Collections/Dictionaries/getIdentifier.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;IAOH,uBAA8B,GAAO,EAAE,cAA8B;QAA9B,+BAAA,EAAA,sBAA8B;QAEpE,EAAE,CAAA,CAAC,YAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QACvC,EAAE,CAAA,CAAC,GAAG,KAAG,IAAI,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAC3B,EAAE,CAAA,CAAC,GAAG,KAAG,KAAK,CAAC;YAAC,MAAM,CAAC,YAAI,CAAC,SAAS,CAAC;QAGtC,EAAE,CAAA,CAAC,YAAI,CAAC,SAAS,CAAgB,GAAG,EAAE,UAAU,CAAC,CAAC,CAClD,CAAC;YACA,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACxB,CAAC;QAGD,EAAE,CAAA,CAAC,YAAI,CAAC,SAAS,CAAY,GAAG,EAAE,aAAa,CAAC,CAAC,CACjD,CAAC;YACA,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC1B,CAAC;QAED,EAAE,CAAA,CAAC,cAAc,CAAC;YACjB,MAAM,+BAA+B,CAAC;QAEvC,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC,QAAQ,IAAE,YAAI,CAAC,QAAQ,CAAC;cACxC,GAAG,CAAC,QAAQ,EAAE;cACd,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;;;;;;;;;8BAlCD;;;eAGG;YAKG,KAAK,GAAa,KAAK,CAAC,CAAC;YACzB,IAAI,GAAG,MAAM,EAAE,UAAU,GAAG,WAAW,EAAE,aAAa,GAAG,aAAa,CAAC;iCA2B9D,aAAa;QAAC,CAAC","file":"getIdentifier.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {IHashable, ISymbolizable} from \"./IDictionary\";\r\nimport {Type} from \"../../Types\";\r\n\r\nconst VOID0:undefined = void 0;\r\nconst NULL = \"null\", GET_SYMBOL = \"getSymbol\", GET_HASH_CODE = \"getHashCode\";\r\nexport function getIdentifier(obj:any, throwIfUnknown:boolean = false):string|number|symbol\r\n{\r\n\tif(Type.isPropertyKey(obj)) return obj;\r\n\tif(obj===null) return NULL;\r\n\tif(obj===VOID0) return Type.UNDEFINED;\r\n\r\n\t// See ISymbolizable.\r\n\tif(Type.hasMethod<ISymbolizable>(obj, GET_SYMBOL))\r\n\t{\r\n\t\treturn obj.getSymbol();\r\n\t}\r\n\r\n\t// See IHashable.\r\n\tif(Type.hasMethod<IHashable>(obj, GET_HASH_CODE))\r\n\t{\r\n\t\treturn obj.getHashCode();\r\n\t}\r\n\r\n\tif(throwIfUnknown)\r\n\t\tthrow \"Cannot create known identity.\";\r\n\r\n\treturn (typeof obj.toString==Type.FUNCTION)\r\n\t\t? obj.toString()\r\n\t\t: Object.prototype.toString.call(obj);\r\n}\r\n\r\nexport default getIdentifier;"]}