{"version":3,"sources":["System/Collections/Set.ts"],"names":[],"mappings":"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","file":"Set.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {Type} from \"../Types\";\r\nimport {ArgumentException} from \"../Exceptions/ArgumentException\";\r\nimport {SetBase} from \"./SetBase\";\r\nimport {IMap} from \"./Dictionaries/IDictionary\";\r\nimport {ILinkedNodeWithValue} from \"./ILinkedListNode\";\r\nimport {Primitive} from \"../Primitive\";\r\nimport {IEnumerableOrArray} from \"./IEnumerableOrArray\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst OTHER = 'other';\r\n\r\nexport class Set<T extends Primitive>\r\nextends SetBase<T>\r\n{\r\n\tprotected newUsing(source?:IEnumerableOrArray<T>):Set<T>\r\n\t{\r\n\t\treturn new Set<T>(source);\r\n\t}\r\n\r\n\tprivate _registry:IMap<IMap<ILinkedNodeWithValue<T>>>;\r\n\r\n\tprotected _addInternal(item:T):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(!_.contains(item))\r\n\t\t{\r\n\t\t\tvar type = typeof item;\r\n\t\t\tif(!Type.isPrimitive(type))\r\n\t\t\t\tthrow new ArgumentException(\"item\", \"A Set can only index primitives.  Complex objects require a HashSet.\");\r\n\r\n\t\t\tvar r = _._registry || (_._registry = {});\r\n\t\t\tvar t = r[type] || (r[type] = {});\r\n\t\t\tvar node:ILinkedNodeWithValue<T> = {value: item};\r\n\t\t\t_._getSet().addNode(node);\r\n\t\t\tt[<any>item] = node;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\twipe(this._registry, 2);\r\n\t\treturn super._clearInternal();\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._registry = <any>null;\r\n\t}\r\n\r\n\tprotected _getNode(item:T):ILinkedNodeWithValue<T>\r\n\t{\r\n\t\tvar r = this._registry, t = r && r[typeof item];\r\n\r\n\t\treturn t && t[<any>item];\r\n\t}\r\n\r\n\tprotected _removeInternal(item:T, max:number = Infinity):number\r\n\t{\r\n\t\tif(max===0) return 0;\r\n\r\n\t\tvar r    = this._registry,\r\n\t\t    t    = r && r[typeof item],\r\n\t\t    node = t && t[<any>item];\r\n\r\n\t\tif(node)\r\n\t\t{\r\n\t\t\tdelete t[<any>item];\r\n\t\t\tvar s = this._set;\r\n\t\t\tif(s && s.removeNode(node))\r\n\t\t\t{\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n}\r\n\r\nfunction wipe(map:IMap<any>, depth:number = 1):void\r\n{\r\n\tif(map && depth)\r\n\t{\r\n\t\tfor(var key of Object.keys(map))\r\n\t\t{\r\n\t\t\tvar v = map[key];\r\n\t\t\tdelete map[key];\r\n\t\t\twipe(v, depth - 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Set;"]}