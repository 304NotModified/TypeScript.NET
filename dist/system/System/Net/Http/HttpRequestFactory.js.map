{"version":3,"sources":["System/Net/Http/HttpRequestFactory.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;QAaG,SAAS;;;;;;;;;;;;;;;;;;;YAAT,SAAS,GAAG,iBAAe,CAAC;YAKlC;gBAAgD,sCAAc;gBAK7D,4BACS,KAAyB,EACjC,WAAwB;oBAExB,iBAAO,CAAC;oBAHA,UAAK,GAAL,KAAK,CAAoB;oBAKjC,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;oBAElD,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC;wBACT,MAAM,IAAI,6CAAqB,CAAC,OAAO,CAAC,CAAC;oBAE1C,IAAI,CAAC,YAAY,GAAG,SAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC3C,CAAC;gBAES,uCAAU,GAApB;oBAGC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC1B,CAAC;gBAED,gCAAG,GAAH,UAAI,GAAe;oBAGlB,IAAM,CAAC,GAAG,IAAI,CAAC;oBACf,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,IAAI,CAAC,GAAG,SAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;oBACtC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;0BAC5B,CAAC;0BACD,IAAI,kBAAkB,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACvC,CAAC;gBAED,mCAAM,GAAN,UAAO,MAA6B;oBAEnC,IAAM,CAAC,GAAG,IAAI,CAAC;oBACf,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBAClD,CAAC;gBAED,oCAAO,GAAP,UAAiB,MAAsB,EAAE,IAAS;oBAEjD,IAAM,CAAC,GAAG,IAAI,CAAC;oBACf,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;wBACtB,MAAM,EAAE,MAAM;wBACd,GAAG,EAAE,CAAC,CAAC,YAAY;wBACnB,IAAI,EAAE,IAAI;qBACV,CAAC,CAAC;gBACJ,CAAC;gBAGD,gCAAG,GAAH;oBAEC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAU,gBAAG,CAAC,CAAC;gBACnC,CAAC;gBAED,gCAAG,GAAH;oBAEC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAU,gBAAG,CAAC,CAAC;gBACnC,CAAC;gBAED,iCAAI,GAAJ,UAAc,IAAQ;oBAErB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAU,iBAAI,EAAE,IAAI,CAAC,CAAC;gBAC1C,CAAC;gBAED,sCAAQ,GAAR;oBAEC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAU,mBAAM,CAAC,CAAC;gBACtC,CAAC;gBAEF,yBAAC;YAAD,CA5EA,AA4EC,CA5E+C,+BAAc,GA4E7D;YA5ED,wCA4EC,CAAA","file":"System/Net/Http/HttpRequestFactory.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport * as QueryParam from \"../../Uri/QueryParam\";\r\nimport {ArgumentNullException} from \"../../Exceptions/ArgumentNullException\";\r\nimport {DisposableBase} from \"../../Disposable/DisposableBase\";\r\nimport {HttpMethodValue} from \"./HttpMethodValue\";\r\nimport {GET, PUT, POST, DELETE} from \"./HttpMethod\";\r\nimport {Uri} from \"../../Uri/Uri\";\r\nimport {IUri} from \"../../Uri/IUri\";\r\nimport {IHttpRequestAdapter} from \"./IHttpRequestAdapter\";\r\nimport __extendsImport from \"../../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n/**\r\n * This class exposes a factory for making requests to prepared uri and params.\r\n */\r\nexport default class HttpRequestFactory extends DisposableBase\r\n{\r\n\r\n\tprotected _uriDefaults:Uri;\r\n\r\n\tconstructor(\r\n\t\tprivate _http:IHttpRequestAdapter,\r\n\t\turiDefaults?:string|IUri)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._disposableObjectName = 'HttpRequestFactory';\r\n\r\n\t\tif(!_http)\r\n\t\t\tthrow new ArgumentNullException('_http');\r\n\r\n\t\tthis._uriDefaults = Uri.from(uriDefaults);\r\n\t}\r\n\r\n\tprotected _onDispose()\r\n\t{\r\n\t\t// super._onDispose(); // Not required for first level inheritance.\r\n\t\tthis._http = null;\r\n\t\tthis._uriDefaults = null;\r\n\t}\r\n\r\n\turi(uri:string|IUri):HttpRequestFactory\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tvar u = Uri.from(uri, _._uriDefaults);\r\n\t\treturn _._uriDefaults.equals(u)\r\n\t\t\t? _\r\n\t\t\t: new HttpRequestFactory(_._http, u);\r\n\t}\r\n\r\n\tparams(params:QueryParam.Convertible):HttpRequestFactory\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn _.uri(_._uriDefaults.updateQuery(params));\r\n\t}\r\n\r\n\trequest<TResult>(method:HttpMethodValue, data?:any):PromiseLike<TResult>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn _._http.request({\r\n\t\t\tmethod: method,\r\n\t\t\turi: _._uriDefaults,\r\n\t\t\tdata: data\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tget<TResult>():PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(GET);\r\n\t}\r\n\r\n\tput<TResult>():PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(PUT);\r\n\t}\r\n\r\n\tpost<TResult>(data:any):PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(POST, data);\r\n\t}\r\n\r\n\t'delete'<TResult>():PromiseLike<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(DELETE);\r\n\t}\r\n\r\n}\r\n"]}