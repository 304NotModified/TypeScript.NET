{"version":3,"sources":["System/Uri/Scheme.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AASH,OAAO,MAAM,IAAI,GAAe,MAAM,CAAC;AAMvC,OAAO,MAAM,GAAG,GAAc,KAAK,CAAC;AAMpC,OAAO,MAAM,MAAM,GAAiB,QAAQ,CAAC;AAM7C,OAAO,MAAM,IAAI,GAAe,MAAM,CAAC;AAMvC,OAAO,MAAM,KAAK,GAAgB,OAAO,CAAC;AAM1C,OAAO,MAAM,IAAI,GAAe,MAAM,CAAC;AAMvC,OAAO,MAAM,MAAM,GAAiB,QAAQ,CAAC;AAM7C,OAAO,MAAM,IAAI,GAAe,UAAU,CAAC;AAM3C,OAAO,MAAM,GAAG,GAAc,SAAS,CAAC;AAMxC,OAAO,MAAM,IAAI,GAAe,MAAM,CAAC;AAMvC,OAAO,MAAM,IAAI,GAAe,MAAM,CAAC;AAMvC,OAAO,MAAM,MAAM,GAAiB,QAAQ,CAAC;AAK7C,OAAO,MAAM,IAAI,GAAe,MAAM,CAAC;AAMvC,OAAO,MAAM,GAAG,GAAiB,MAAM,CAAC,MAAM,CAAC;IAC9C,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI;CACjF,CAAC,CAAC;AAEH,wBAAwB,MAAa;IAEpC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAM,MAAM,CAAC,IAAG,CAAC,CAAC,CAAC;AACtC,CAAC","file":"System/Uri/Scheme.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based on: https://msdn.microsoft.com/en-us/library/system.uri.scheme%28v=vs.110%29.aspx\r\n */\r\n\r\nimport * as Scheme from \"./SchemeValue\";\r\nimport {SchemeValue} from \"./SchemeValue\";\r\n\r\n\r\n/**\r\n * The resource is a file on the local computer.\r\n */\r\nexport const File:Scheme.File = \"file\";\r\n\r\n\r\n/**\r\n * The resource is accessed through FTP.\r\n */\r\nexport const FTP:Scheme.FTP = \"ftp\";\r\n\r\n\r\n/**\r\n * The resource is accessed through the Gopher protocol.\r\n */\r\nexport const GOPHER:Scheme.Gopher = \"gopher\";\r\n\r\n\r\n/**\r\n * The resource is accessed through HTTP.\r\n */\r\nexport const HTTP:Scheme.HTTP = \"http\";\r\n\r\n\r\n/**\r\n * The resource is accessed through SSL-encrypted HTTP.\r\n */\r\nexport const HTTPS:Scheme.HTTPS = \"https\";\r\n\r\n\r\n/**\r\n * The resource is accessed through the LDAP protocol.\r\n */\r\nexport const LDAP:Scheme.LDAP = \"ldap\";\r\n\r\n\r\n/**\r\n * The resource is an e-mail address and accessed through the SMTP protocol.\r\n */\r\nexport const MAILTO:Scheme.MailTo = \"mailto\";\r\n\r\n\r\n/**\r\n * The resource is accessed through a named pipe.\r\n */\r\nexport const PIPE:Scheme.Pipe = \"net.pipe\";\r\n\r\n\r\n/**\r\n * The resource is accessed from TCP endpoint.\r\n */\r\nexport const TCP:Scheme.TCP = \"net.tcp\";\r\n\r\n\r\n/**\r\n * The resource is accessed through the NNTP protocol.\r\n */\r\nexport const NEWS:Scheme.NNTP = \"news\";\r\n\r\n\r\n/**\r\n * The resource is accessed through the NNTP protocol.\r\n */\r\nexport const NNTP:Scheme.NNTP = \"nntp\";\r\n\r\n\r\n/**\r\n * The resource is accessed through the TELNET protocol.\r\n */\r\nexport const TELNET:Scheme.Telnet = \"telnet\";\r\n\r\n/**\r\n * The resource is accessed through a unique UUID endpoint name for communicating with a service.\r\n */\r\nexport const UUID:Scheme.UUID = \"uuid\";\r\n\r\n/**\r\n * An index of possible values to validate against.\r\n * @type {Array}\r\n */\r\nexport const All:SchemeValue[] = Object.freeze([\r\n\tFile, FTP, GOPHER, HTTP, HTTPS, LDAP, MAILTO, PIPE, TCP, NEWS, NNTP, TELNET, UUID\r\n]);\r\n\r\nexport function isValid(scheme:string):scheme is SchemeValue\r\n{\r\n\treturn All.indexOf(<any>scheme)!= -1;\r\n}\r\n"]}