{"version":3,"sources":["System/Collections/SetBase.ts"],"names":[],"mappings":"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","file":"System/Collections/SetBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {LinkedNodeList} from \"./LinkedNodeList\";\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {forEach} from \"./Enumeration/Enumerator\";\r\nimport {EmptyEnumerator} from \"./Enumeration/EmptyEnumerator\";\r\nimport {using} from \"../Disposable/dispose\";\r\nimport {areEqual} from \"../Compare\";\r\nimport {CollectionBase} from \"./CollectionBase\";\r\nimport {IDisposable} from \"../Disposable/IDisposable\";\r\nimport {ILinkedNodeWithValue} from \"./ILinkedListNode\";\r\nimport {Predicate, Action} from \"../FunctionTypes\";\r\nimport {IMap} from \"./Dictionaries/IDictionary\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport {IEnumerableOrArray} from \"./IEnumerableOrArray\";\r\nimport {ISet} from \"./ISet\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nconst OTHER = 'other';\r\n\r\nexport abstract class SetBase<T>\r\nextends CollectionBase<T> implements ISet<T>, IDisposable\r\n{\r\n\r\n\tconstructor(source?:IEnumerableOrArray<T>)\r\n\t{\r\n\t\tsuper(null, areEqual);\r\n\t\tthis._importEntries(source);\r\n\t}\r\n\r\n\tprotected abstract newUsing(source?:IEnumerableOrArray<T>):SetBase<T>;\r\n\r\n\tprotected _set:LinkedNodeList<ILinkedNodeWithValue<T>>;\r\n\r\n\tprotected _getSet():LinkedNodeList<ILinkedNodeWithValue<T>>\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\tif(!s) this._set = s = new LinkedNodeList<ILinkedNodeWithValue<T>>();\r\n\t\treturn s;\r\n\t}\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._set ? this._set.unsafeCount : 0;\r\n\t}\r\n\r\n\texceptWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tforEach(other, v=>\r\n\t\t{\r\n\t\t\tif(_._removeInternal(v))\r\n\t\t\t\t_._incrementModified();\r\n\t\t});\r\n\r\n\t\t_._signalModification();\r\n\t}\r\n\r\n\tintersectWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tconst _ = this;\r\n\t\tif(other instanceof SetBase)\r\n\t\t{\r\n\t\t\tlet s = _._set;\r\n\t\t\tif(s) s.forEach(n=>\r\n\t\t\t{\r\n\t\t\t\tif(!other.contains(n.value) && _._removeInternal(n.value))\r\n\t\t\t\t\t_._incrementModified();\r\n\t\t\t});\r\n\r\n\t\t\t_._signalModification();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tusing(_.newUsing(other), o=>_.intersectWith(o));\r\n\t\t}\r\n\t}\r\n\r\n\tisProperSubsetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\treturn other instanceof SetBase\r\n\t\t\t? other.isProperSupersetOf(this)\r\n\t\t\t: using(this.newUsing(other), o=> o.isProperSupersetOf(this));\r\n\t}\r\n\r\n\tisProperSupersetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar result = true, count:number;\r\n\t\tif(other instanceof SetBase)\r\n\t\t{\r\n\t\t\tresult = this.isSupersetOf(other);\r\n\t\t\tcount = other.getCount();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tcount = using(this.newUsing(), o=>\r\n\t\t\t{\r\n\t\t\t\tforEach(other, v=>\r\n\t\t\t\t{\r\n\t\t\t\t\to.add(v); // We have to add to another set in order to filter out duplicates.\r\n\t\t\t\t\t// contains == false will cause this to exit.\r\n\t\t\t\t\treturn result = this.contains(v);\r\n\t\t\t\t});\r\n\t\t\t\treturn o.getCount();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result && this.getCount()>count;\r\n\t}\r\n\r\n\tisSubsetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\treturn other instanceof SetBase\r\n\t\t\t? other.isSupersetOf(this)\r\n\t\t\t: using(this.newUsing(other), o=> o.isSupersetOf(this));\r\n\t}\r\n\r\n\tisSupersetOf(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar result = true;\r\n\t\tforEach(other, v=>\r\n\t\t{\r\n\t\t\treturn result = this.contains(v);\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\toverlaps(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tvar result = false;\r\n\t\tforEach(other, v => !(result = this.contains(v)));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tsetEquals(other:IEnumerableOrArray<T>):boolean\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\treturn this.getCount()==(\r\n\t\t\t\tother instanceof SetBase\r\n\t\t\t\t\t? other.getCount()\r\n\t\t\t\t\t: using(this.newUsing(other), o=> o.getCount()))\r\n\t\t\t&& this.isSubsetOf(other);\r\n\t}\r\n\r\n\tsymmetricExceptWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tif(!other) throw new ArgumentNullException(OTHER);\r\n\r\n\t\tconst _ = this;\r\n\t\tif(other instanceof SetBase)\r\n\t\t{\r\n\t\t\tforEach(other, v=>\r\n\t\t\t{\r\n\t\t\t\tif(_.contains(v))\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_._removeInternal(v))\r\n\t\t\t\t\t\t_._incrementModified();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_._addInternal(v))\r\n\t\t\t\t\t\t_._incrementModified();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t_._signalModification();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tusing(this.newUsing(other), o=>_.symmetricExceptWith(o));\r\n\t\t}\r\n\t}\r\n\r\n\tunionWith(other:IEnumerableOrArray<T>):void\r\n\t{\r\n\t\tthis.importEntries(other);\r\n\t}\r\n\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn s ? s.clear() : 0;\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._set = null;\r\n\t}\r\n\r\n\tprotected abstract _getNode(item:T):ILinkedNodeWithValue<T>;\r\n\r\n\tcontains(item:T):boolean\r\n\t{\r\n\t\treturn !(!this.getCount() || !this._getNode(item));\r\n\t}\r\n\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn s && this.getCount()\r\n\t\t\t? LinkedNodeList.valueEnumeratorFrom<T>(s)\r\n\t\t\t: EmptyEnumerator;\r\n\t}\r\n\r\n\tforEach(\r\n\t\taction:Predicate<T> | Action<T>,\r\n\t\tuseCopy:boolean = false):number\r\n\t{\r\n\t\treturn useCopy\r\n\t\t\t? super.forEach(action, useCopy)\r\n\t\t\t: this._set.forEach((node, i)=>action(node.value, i));\r\n\t}\r\n\r\n\tprotected _removeNode(node:ILinkedNodeWithValue<T>):boolean\r\n\t{\r\n\t\tif(!node) return false;\r\n\t\treturn this.remove(node.value)!=0;\r\n\t}\r\n\r\n\tremoveFirst():boolean\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn this._removeNode(s && s.first);\r\n\t}\r\n\r\n\tremoveLast():boolean\r\n\t{\r\n\t\tvar s = this._set;\r\n\t\treturn this._removeNode(s && s.last);\r\n\t}\r\n\r\n\r\n}\r\n\r\nfunction wipe(map:IMap<any>, depth:number = 1):void\r\n{\r\n\tif(map && depth)\r\n\t{\r\n\t\tfor(var key of Object.keys(map))\r\n\t\t{\r\n\t\t\tvar v = map[key];\r\n\t\t\tdelete map[key];\r\n\t\t\twipe(v, depth - 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default SetBase;"]}