{"version":3,"sources":["System/Collections/Array/ReadOnlyArrayWrapper.ts"],"names":[],"mappings":"AAAA;;;GAGG;OAEI,EAAC,qBAAqB,EAAC,MAAM,wCAAwC;OACrE,EAAC,sBAAsB,EAAC,MAAM,2BAA2B;OAEzD,EAAC,IAAI,IAAI,cAAc,EAAC,MAAM,2BAA2B;OACzD,eAAe,MAAM,kBAAkB;AAC9C,MAAM,SAAS,GAAG,eAAe,CAAC;AAElC,kDAAqD,sBAAsB;IAG1E,YAAY,KAAe;QAE1B,OAAO,CAAC;QACR,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC;YACT,MAAM,IAAI,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAE1C,MAAM,CAAC,GAAG,IAAI,CAAC;QACf,CAAC,CAAC,SAAS,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC;QACjC,CAAC,CAAC,aAAa,GAAG,MAAM,cAAc,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;AAGF,CAAC;AAAA","file":"System/Collections/Array/ReadOnlyArrayWrapper.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArgumentNullException} from \"../../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"../ReadOnlyCollectionBase\";\r\nimport {IArray} from \"./IArray\";\r\nimport {from as enumeratorFrom} from \"../Enumeration/Enumerator\";\r\nimport __extendsImport from \"../../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nexport default class ReadOnlyArrayWrapper<T> extends ReadOnlyCollectionBase<T>\r\n{\r\n\r\n\tconstructor(array:IArray<T>)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(!array)\r\n\t\t\tthrow new ArgumentNullException('array');\r\n\r\n\t\tconst _ = this;\r\n\t\t_._getCount = () => array.length;\r\n\t\t_.getEnumerator = () => enumeratorFrom(array);\r\n\t\t_.getValueAt = i => array[i];\r\n\t}\r\n\r\n\tgetValueAt:(index:number)=>T;\r\n}\r\n"]}