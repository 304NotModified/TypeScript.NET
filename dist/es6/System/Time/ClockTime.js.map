{"version":3,"sources":["System/Time/ClockTime.ts"],"names":[],"mappings":"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","file":"System/Time/ClockTime.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Originally based upon .NET source but with many additions and improvements.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {TimeQuantity} from \"./TimeQuantity\";\r\nimport {IClockTime} from \"./ITimeStamp\";\r\nimport {Minutes, Seconds, Milliseconds, Ticks} from \"./HowMany\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\nexport class ClockTime extends TimeQuantity implements IClockTime\r\n{\r\n\r\n\tdays:number;\r\n\thour:number;\r\n\tminute:number;\r\n\tsecond:number;\r\n\tmillisecond:number;\r\n\ttick:number;\r\n\r\n\tconstructor(milliseconds:number);\r\n\tconstructor(hours:number, minutes:number, seconds?:number, milliseconds?:number);\r\n\tconstructor(...args:number[])\r\n\t{\r\n\t\tsuper(\r\n\t\t\targs.length>1\r\n\t\t\t\t? ClockTime.millisecondsFromTime(\r\n\t\t\t\targs[0] || 0,\r\n\t\t\t\targs[1] || 0,\r\n\t\t\t\targs.length>2 && args[2] || 0,\r\n\t\t\t\targs.length>3 && args[3] || 0\r\n\t\t\t)\r\n\t\t\t\t: (args.length>0 && args[0] || 0)\r\n\t\t);\r\n\r\n\t\tconst _ = this;\r\n\t\tvar ms = Math.abs(_.getTotalMilliseconds());\r\n\t\tvar msi = Math.floor(ms);\r\n\r\n\t\t_.tick = (ms - msi)*Ticks.Per.Millisecond;\r\n\r\n\t\t_.days = (msi/Milliseconds.Per.Day) | 0;\r\n\t\tmsi -= _.days*Milliseconds.Per.Day;\r\n\r\n\t\t_.hour = (msi/Milliseconds.Per.Hour) | 0;\r\n\t\tmsi -= _.hour*Milliseconds.Per.Hour;\r\n\r\n\t\t_.minute = (msi/Milliseconds.Per.Minute) | 0;\r\n\t\tmsi -= _.minute*Milliseconds.Per.Minute;\r\n\r\n\t\t_.second = (msi/Milliseconds.Per.Second) | 0;\r\n\t\tmsi -= _.second*Milliseconds.Per.Second;\r\n\r\n\t\t_.millisecond = msi;\r\n\r\n\t\tObject.freeze(_);\r\n\t}\r\n\r\n\r\n\t// Static version for relative consistency.  Constructor does allow this format.\r\n\tstatic from(hours:number, minutes:number, seconds:number = 0, milliseconds:number = 0):ClockTime\r\n\t{\r\n\t\treturn new ClockTime(hours, minutes, seconds, milliseconds);\r\n\t}\r\n\r\n\tstatic millisecondsFromTime(\r\n\t\thours:number,\r\n\t\tminutes:number,\r\n\t\tseconds:number = 0,\r\n\t\tmilliseconds:number = 0):number\r\n\t{\r\n\t\tvar value = hours;\r\n\t\tvalue *= Minutes.Per.Hour;\r\n\t\tvalue += minutes;\r\n\t\tvalue *= Seconds.Per.Minute;\r\n\t\tvalue += seconds;\r\n\t\tvalue *= Milliseconds.Per.Second;\r\n\t\tvalue += milliseconds;\r\n\t\treturn value;\r\n\t}\r\n\r\n\ttoString(/*format?:string, formatProvider?:IFormatProvider*/):string\r\n\t{\r\n\t\t/* INSERT CUSTOM FORMATTING CODE HERE */\r\n\r\n\r\n\t\tvar _ = this, a:string[] = [];\r\n\r\n\t\tif(_.days)\r\n\t\t\ta.push(pluralize(_.days, \"day\"));\r\n\r\n\t\tif(_.hour)\r\n\t\t\ta.push(pluralize(_.hour, \"hour\"));\r\n\r\n\t\tif(_.minute)\r\n\t\t\ta.push(pluralize(_.minute, \"minute\"));\r\n\r\n\t\tif(_.second)\r\n\t\t\ta.push(pluralize(_.second, \"second\"));\r\n\r\n\t\tif(a.length>1)\r\n\t\t\ta.splice(a.length - 1, 0, \"and\");\r\n\r\n\t\treturn a.join(\", \").replace(\", and, \", \" and \");\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Temporary until the full TimeSpanFormat is available.\r\nfunction pluralize(value:number, label:string):string\r\n{\r\n\tif(Math.abs(value)!==1)\r\n\t\tlabel += \"s\";\r\n\r\n\treturn label;\r\n}\r\n\r\nexport default ClockTime;"]}