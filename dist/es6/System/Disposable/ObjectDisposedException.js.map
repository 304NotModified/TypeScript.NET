{"version":3,"sources":["System/Disposable/ObjectDisposedException.ts"],"names":[],"mappings":"AAAA;;;;GAIG;OAGI,EAAC,yBAAyB,EAAC,MAAM,yCAAyC;OAE1E,eAAe,MAAM,eAAe;AAC3C,MAAM,SAAS,GAAG,eAAe,CAAC;AAGlC,MAAM,IAAI,GAAU,yBAAyB,CAAC;AAE9C,6CACQ,yBAAyB;IAMhC,YACC,UAAiB,EACjB,OAAO,GAAU,IAAI,EACrB,cAAc,GAAa,IAAI;QAE/B,MAAM,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;YAChC,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC;QAC3B,CAAC,CAAC,CAAC;IACJ,CAAC;IAGS,OAAO;QAEhB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,QAAQ;QAEP,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC;QACnC,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE1C,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;IACtD,CAAC;IAED,OAAO,eAAe,CACrB,UAA2B,EAC3B,UAAkB,EAClB,OAAe;QAEf,EAAE,CAAA,CAAC,UAAU,CAAC,WAAW,CAAC;YACzB,MAAM,IAAI,uBAAuB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;AAEF,CAAC;AAED,eAAe,uBAAuB,CAAC","file":"System/Disposable/ObjectDisposedException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {Exception} from \"../Exception\";\r\nimport {InvalidOperationException} from \"../Exceptions/InvalidOperationException\";\r\nimport {IDisposableAware} from \"./IDisposableAware\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\n\r\nconst NAME:string = 'ObjectDisposedException';\r\n\r\nexport class ObjectDisposedException\r\nextends InvalidOperationException\r\n{\r\n\r\n\tobjectName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tobjectName:string,\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(message, innerException, (_)=>{\r\n\t\t\t_.objectName = objectName;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tvar _ = this, oName = _.objectName;\r\n\t\toName = oName ? ('{' + oName + '} ') : '';\r\n\r\n\t\treturn '[' + _.name + ': ' + oName + _.message + ']';\r\n\t}\r\n\r\n\tstatic throwIfDisposed(\r\n\t\tdisposable:IDisposableAware,\r\n\t\tobjectName?:string,\r\n\t\tmessage?:string):void\r\n\t{\r\n\t\tif(disposable.wasDisposed)\r\n\t\t\tthrow new ObjectDisposedException(objectName, message);\r\n\t}\r\n\r\n}\r\n\r\nexport default ObjectDisposedException;"]}