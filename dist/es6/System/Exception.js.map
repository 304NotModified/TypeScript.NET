{"version":3,"sources":["System/Exception.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH,MAAM,IAAI,GAAU,WAAW,CAAC;AAWhC;IAkBC,YACC,OAAc,EACd,cAAqB,EACrB,aAA6B;QAE7B,MAAM,CAAC,GAAG,IAAI,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,EAAE,CAAA,CAAC,cAAc,CAAC;YACjB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,cAAc,CAAC;QAO3C,EAAE,CAAA,CAAC,aAAa,CAAC;YAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAGnC,IACA,CAAC;YACA,IAAI,KAAK,GAAU,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAC7C,KAAK,GAAG,KAAK;mBACT,KAAK;qBACN,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;qBACvB,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC;mBAChC,EAAE,CAAC;YAEP,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,uBAAuB,EAAE,GAAG,KAAK,CAAC;QAClD,CACA;QAAA,KAAK,CAAA,CAAC,EAAE,CAAC,CACT,CAAC,CAAA,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAOS,OAAO,KACf,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAKhB,QAAQ;QAEP,MAAM,CAAC,IAAI,IAAI,CAAC,uBAAuB,EAAE,GAAG,CAAC;IAC9C,CAAC;IAES,uBAAuB;QAEhC,MAAM,CAAC,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;QAClB,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IACvC,CAAC;IAKD,OAAO;QAEN,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,GAAG,CAAA,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAClB,CAAC;YACA,EAAE,CAAA,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC;IACF,CAAC;AACF,CAAC;AAED,eAAe,SAAS,CAAC","file":"Exception.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {IDisposable} from \"./Disposable/IDisposable\";\r\nimport {IMap} from \"./Collections/Dictionaries/IDictionary\";\r\nconst NAME:string = 'Exception';\r\n\r\n// Avoid importing node reference..\r\nexport interface Error {\r\n\tname: string;\r\n\tmessage: string;\r\n}\r\n\r\n/**\r\n * Represents errors that occur during application execution.\r\n */\r\nexport class Exception implements Error, IDisposable\r\n{\r\n\t/**\r\n\t * A string representation of the error type.\r\n\t * The default is 'Error'.\r\n\t */\r\n\treadonly name:string;\r\n\r\n\treadonly message:string;\r\n\treadonly stack:string;\r\n\treadonly data:IMap<any>;\r\n\r\n\t/**\r\n\t * Initializes a new instance of the Exception class with a specified error message and optionally a reference to the inner exception that is the cause of this exception.\r\n\t * @param message\r\n\t * @param innerException\r\n\t * @param beforeSealing This delegate is used to allow actions to occur just before this constructor finishes.  Since some compilers do not allow the use of 'this' before super.\r\n\t */\r\n\tconstructor(\r\n\t\tmessage:string,\r\n\t\tinnerException?:Error,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tconst _ = this;\r\n\r\n\t\tthis.name = _.getName();\r\n\t\tthis.message = message;\r\n\t\tthis.data = {};\r\n\r\n\t\tif(innerException)\r\n\t\t\t_.data['innerException'] = innerException;\r\n\r\n\t\t/* Originally intended to use 'get' accessors for properties,\r\n\t\t * But debuggers don't display these readily yet.\r\n\t\t * Object.freeze has to be used carefully, but will prevent overriding values.\r\n\t\t */\r\n\r\n\t\tif(beforeSealing) beforeSealing(_);\r\n\r\n\t\t// Node has a .stack, let's use it...\r\n\t\ttry\r\n\t\t{\r\n\t\t\tvar stack:string = eval(\"new Error()\").stack;\r\n\t\t\tstack = stack\r\n\t\t\t\t&& stack\r\n\t\t\t\t\t.replace(/^Error\\n/, '')\r\n\t\t\t\t\t.replace(/(.|\\n)+\\s+at new.+/, '')\r\n\t\t\t\t|| '';\r\n\r\n\t\t\tthis.stack = _.toStringWithoutBrackets() + stack;\r\n\t\t}\r\n\t\tcatch(ex)\r\n\t\t{}\r\n\r\n\t\tObject.freeze(_);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A string representation of the error type.\r\n\t * The default is 'Error'.\r\n\t */\r\n\tprotected getName():string\r\n\t{ return NAME; }\r\n\r\n\t/**\r\n\t * The string representation of the Exception instance.\r\n\t */\r\n\ttoString():string\r\n\t{\r\n\t\treturn `[${this.toStringWithoutBrackets()}]`;\r\n\t}\r\n\r\n\tprotected toStringWithoutBrackets():string\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tvar m = _.message;\r\n\t\treturn _.name + (m ? (': ' + m) : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the data object.\r\n\t */\r\n\tdispose():void\r\n\t{\r\n\t\tvar data = this.data;\r\n\t\tfor(let k in data)\r\n\t\t{\r\n\t\t\tif(data.hasOwnProperty(k))\r\n\t\t\t\tdelete data[k];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Exception;\r\n"]}