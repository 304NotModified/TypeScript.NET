{"version":3,"sources":["System/Environment.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAKH,OAAO,MACN,UAAU,GACP,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AAEnC,OAAO,MACN,WAAW,GACR,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AAapD,OAAO,MACN,QAAQ,GACL,OAAO,OAAO,IAAE,QAAQ;OACvB,OAAO,CAAC,QAAQ,EAAE,KAAG,kBAAkB;OACvC,OAAO,CAAC,QAAQ,IAAG,KAAK,CAAC,CAAC;AAG/B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC","file":"System/Environment.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\ndeclare const require:any;\r\ndeclare const process:any;\r\n\r\nexport const\r\n\tisCommonJS:boolean\r\n\t\t= !!(require && require.resolve);\r\n\r\nexport const\r\n\tisRequireJS:boolean\r\n\t\t= !!(require && require.toUrl && require.defined);\r\n\r\n/*\r\n * Ensure is in a real Node environment, with a `process.nextTick`.\r\n * To see through fake Node environments:\r\n * Mocha test runner - exposes a `process` global without a `nextTick`\r\n * Browserify - exposes a `process.nexTick` function that uses\r\n * `setTimeout`. In this case `setImmediate` is preferred because\r\n * it is faster. Browserify's `process.toString()` yields\r\n * \"[object Object]\", while in a real Node environment\r\n * `process.nextTick()` yields \"[object process]\".\r\n */\r\n\r\nexport const\r\n\tisNodeJS:boolean\r\n\t\t= typeof process==\"object\"\r\n\t\t&& process.toString()===\"[object process]\"\r\n\t\t&& process.nextTick!= void 0;\r\n\r\ndeclare const exports:any;\r\nObject.freeze(exports);"]}