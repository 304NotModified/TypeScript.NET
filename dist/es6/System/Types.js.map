{"version":3,"sources":["System/Types.ts"],"names":[],"mappings":"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","file":"System/Types.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {Primitive} from \"./Primitive\";\r\nimport {IArray} from \"./Collections/Array/IArray\"; // For compatibility with (let, const, function, class);\r\n\r\nconst\r\n\tVOID0:any         = void(0),\r\n\t_BOOLEAN:string   = typeof true,\r\n\t_NUMBER:string    = typeof 0,\r\n\t_STRING:string    = typeof \"\",\r\n\t_OBJECT:string    = typeof {},\r\n\t_UNDEFINED:string = typeof VOID0,\r\n\t_FUNCTION:string  = typeof function() {},\r\n\tLENGTH:string     = \"length\";\r\n\r\n// Only used for primitives.\r\nvar typeInfoRegistry:{[key:string]:TypeInfo} = {};\r\n\r\n/**\r\n * Exposes easy access to type information including inquiring about members.\r\n */\r\nexport class TypeInfo\r\n{\r\n\t// Not retained for primitives. Since they have no members.\r\n\tprotected target:any;\r\n\r\n\ttype:string;\r\n\r\n\tisBoolean:boolean;\r\n\tisNumber:boolean;\r\n\tisFinite:boolean;\r\n\tisValidNumber:boolean;\r\n\tisString:boolean;\r\n\tisTrueNaN:boolean;\r\n\tisObject:boolean;\r\n\tisArray:boolean;\r\n\tisFunction:boolean;\r\n\tisUndefined:boolean;\r\n\tisNull:boolean;\r\n\tisNullOrUndefined:boolean;\r\n\tisPrimitive:boolean;\r\n\r\n\tconstructor(target:any, onBeforeFreeze?:()=>void)\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.isBoolean = false;\r\n\t\t_.isNumber = false;\r\n\t\t_.isString = false;\r\n\t\t_.isTrueNaN = false;\r\n\t\t_.isObject = false;\r\n\t\t_.isFunction = false;\r\n\t\t_.isUndefined = false;\r\n\t\t_.isNull = false;\r\n\t\t_.isPrimitive = false;\r\n\r\n\t\tswitch(_.type = typeof target)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\t\t_.isBoolean = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _NUMBER:\r\n\t\t\t\t_.isNumber = true;\r\n\t\t\t\t_.isTrueNaN = isNaN(target);\r\n\t\t\t\t_.isFinite = isFinite(target);\r\n\t\t\t\t_.isValidNumber = !_.isTrueNaN;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _STRING:\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\tif(target===null)\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isNull = true;\r\n\t\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isArray = Array.isArray(target);\r\n\t\t\t\t\t_.isObject = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\t_.isFunction = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\t_.isUndefined = true;\r\n\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Fatal type failure.  Unknown type: \" + _.type;\r\n\t\t}\r\n\r\n\t\tif(onBeforeFreeze) onBeforeFreeze();\r\n\t\tObject.freeze(_);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any member or non-member,\r\n\t * where non-members are of type undefined.\r\n\t * @param name\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tmember(name:string):TypeInfo\r\n\t{\r\n\t\tvar t = this.target;\r\n\t\treturn TypeInfo.getFor(\r\n\t\t\tt && (name) in (t)\r\n\t\t\t\t? t[name]\r\n\t\t\t\t: undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any target object.\r\n\t * If the target object is of a primitive type, it returns the TypeInfo instance assigned to that type.\r\n\t * @param target\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tstatic getFor(target:any):TypeInfo\r\n\t{\r\n\t\tvar type:string = typeof target;\r\n\t\tswitch(type)\r\n\t\t{\r\n\t\t\tcase _OBJECT:\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\treturn new TypeInfo(target);\r\n\t\t}\r\n\t\tvar info = typeInfoRegistry[type];\r\n\t\tif(!info) typeInfoRegistry[type] = info = new TypeInfo(target);\r\n\t\treturn info;\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport module Type\r\n{\r\n\t/**\r\n\t * typeof true\r\n\t * @type {string}\r\n\t */\r\n\texport const BOOLEAN:string = _BOOLEAN;\r\n\r\n\t/**\r\n\t * typeof 0\r\n\t * @type {string}\r\n\t */\r\n\texport const NUMBER:string = _NUMBER;\r\n\r\n\t/**\r\n\t * typeof \"\"\r\n\t * @type {string}\r\n\t */\r\n\texport const STRING:string = _STRING;\r\n\r\n\t/**\r\n\t * typeof {}\r\n\t * @type {string}\r\n\t */\r\n\texport const OBJECT:string = _OBJECT;\r\n\r\n\r\n\t/**\r\n\t * typeof undefined\r\n\t * @type {string}\r\n\t */\r\n\texport const UNDEFINED:string = _UNDEFINED;\r\n\r\n\t/**\r\n\t * typeof function\r\n\t * @type {string}\r\n\t */\r\n\texport const FUNCTION:string = _FUNCTION;\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a boolean.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isBoolean(value:any):value is boolean\r\n\t{\r\n\t\treturn typeof value===_BOOLEAN;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a number.\r\n\t * @param value\r\n\t * @param allowNaN Default is true.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isNumber(value:any, allowNaN?:boolean):value is number\r\n\t{\r\n\t\tif(allowNaN===VOID0) allowNaN = true;\r\n\t\treturn typeof value===_NUMBER && (allowNaN || !isNaN(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if is a number and is NaN.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isTrueNaN(value:any):value is number\r\n\t{\r\n\t\treturn typeof value===_NUMBER && isNaN(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a string.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isString(value:any):value is string\r\n\t{\r\n\t\treturn typeof value===_STRING;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value is a boolean, string, number, null, or undefined.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isPrimitive(value:any):value is Primitive\r\n\t{\r\n\t\tvar t = typeof value;\r\n\t\tswitch(t)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\tcase _STRING:\r\n\t\t\tcase _NUMBER:\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\treturn true;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\treturn value===null;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a function.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isFunction(value:any):value is Function\r\n\t{\r\n\t\treturn typeof value===_FUNCTION;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is an object.\r\n\t * @param value\r\n\t * @param allowNull If false (default) null is not considered an object.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isObject(value:any, allowNull:boolean = false):boolean\r\n\t{\r\n\t\treturn typeof value===_OBJECT && (allowNull || value!==null);\r\n\t}\r\n\r\n\t/**\r\n\t * Guarantees a number value or NaN instead.\r\n\t * @param value\r\n\t * @returns {number}\r\n\t */\r\n\texport function numberOrNaN(value:any):number\r\n\t{\r\n\t\treturn isNaN(value) ? NaN : value;\r\n\t}\r\n\r\n\texport function of(target:any):TypeInfo\r\n\t{\r\n\t\treturn TypeInfo.getFor(target);\r\n\t}\r\n\r\n\texport function hasMember(value:any, property:string):boolean\r\n\t{\r\n\t\treturn value && !isPrimitive(value) && (property) in (value);\r\n\t}\r\n\r\n\texport function hasMemberOfType<T>(instance:any, property:string, type:string):instance is T\r\n\t{\r\n\t\treturn hasMember(instance, property) && typeof(instance[property])===type;\r\n\t}\r\n\r\n\texport function isArrayLike<T>(instance:any):instance is IArray<T>\r\n\t{\r\n\t\t/*\r\n\t\t * NOTE:\r\n\t\t *\r\n\t\t * Functions:\r\n\t\t * Enumerating a function although it has a .length property will yield nothing or unexpected results.\r\n\t\t * Effectively, a function is not like an array.\r\n\t\t *\r\n\t\t * Strings:\r\n\t\t * Behave like arrays but don't have the same exact methods.\r\n\t\t */\r\n\t\treturn instance instanceof Array\r\n\t\t\t|| Type.isString(instance)\r\n\t\t\t|| !Type.isFunction(instance) && hasMember(instance, LENGTH);\r\n\t}\r\n}\r\n\r\nObject.freeze(Type);\r\n\r\nexport default Type;\r\n\r\n"]}