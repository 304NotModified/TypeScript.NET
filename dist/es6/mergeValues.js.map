{"version":3,"sources":["mergeValues.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;GAKG;AAVH,AAWA;;;GARG,CAQH,MAAM,CAAC,OAAO,sBAEb,MAAQ,EACR,QAAU;IAEV,MAAM,MAAM,GAAO,MAAM,IAAI,EAAE,CAAC;IAChC,GAAG,CAAA,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,CAC1B,CAAC;QACA,EAAE,CAAA,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAC/D,CAAC;YACA,MAAM,CAAC,GAAG,CAAC,GAAS,QAAS,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC;IACF,CAAC;IACD,MAAM,CAAC,MAAM,CAAC;AACf,CAAC","file":"mergeValues.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n/**\r\n * Takes a target object and ensures values exist.\r\n * @param target\r\n * @param defaults\r\n * @returns {any}\r\n */\r\nexport default\r\nfunction mergeValues<T extends Object, U extends Object>(\r\n\ttarget:T,\r\n\tdefaults:U):T & U\r\n{\r\n\tconst result:any = target || {};\r\n\tfor(const key in defaults)\r\n\t{\r\n\t\tif(defaults.hasOwnProperty(key) && !result.hasOwnProperty(key))\r\n\t\t{\r\n\t\t\tresult[key] = (<any>defaults)[key];\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n"]}