{"version":3,"sources":["System/Observable/ObservableNodeBase.js","System/Observable/ObservableNodeBase.ts"],"names":["dependencies","factory","module","exports","v","require","undefined","define","amd","ObservableBase_1","extends_1","__extends","ObservableNodeBase","_super","apply","this","arguments","prototype","onNext","value","_onNext","onError","error","_onError","onCompleted","_onCompleted","Object","defineProperty"],"mappings":";;;;;;CAMA,SAAWA,EAAcC,GACrB,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAcC,KAEzB,UAAW,UAAW,mBAAoB,iBAAkB,SAAUI,EAASF,GAC/E,YCNJ,IAAAM,GAAAJ,EAAA,oBAEAK,EAAAL,EAAA,iBAEMM,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAAA,QAAAD,KDOY,MAAOC,GAAOC,MAAMC,KAAMC,YAAcD,KCWpD,MAjBQJ,GAAAC,EAAAC,GAGPD,EAAAK,UAAAC,OAAA,SAAOC,GAENJ,KAAKK,QAAQD,IAGdP,EAAAK,UAAAI,QAAA,SAAQC,GAEPP,KAAKQ,SAASD,IAGfV,EAAAK,UAAAO,YAAA,WAECT,KAAKU,gBAEPb,GAjBQH,EAAAA,WADKN,GAAAS,mBAAAA,EDqBTc,OAAOC,eAAexB,EAAS,cAAgBgB,OAAO,ICD1DhB,EAAAA,WAAeS","file":"ObservableNodeBase.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Based upon .NET source.\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Source: http://referencesource.microsoft.com/#mscorlib/system/IObserver.cs\n */\n(function (dependencies, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define(dependencies, factory);\n    }\n})([\"require\", \"exports\", \"./ObservableBase\", \"../../extends\"], function (require, exports) {\n    \"use strict\";\n    var ObservableBase_1 = require(\"./ObservableBase\");\n    var extends_1 = require(\"../../extends\");\n    var __extends = extends_1.default;\n    var ObservableNodeBase = (function (_super) {\n        __extends(ObservableNodeBase, _super);\n        function ObservableNodeBase() {\n            return _super.apply(this, arguments) || this;\n        }\n        ObservableNodeBase.prototype.onNext = function (value) {\n            this._onNext(value);\n        };\n        ObservableNodeBase.prototype.onError = function (error) {\n            this._onError(error);\n        };\n        ObservableNodeBase.prototype.onCompleted = function () {\n            this._onCompleted();\n        };\n        return ObservableNodeBase;\n    }(ObservableBase_1.default));\n    exports.ObservableNodeBase = ObservableNodeBase;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ObservableNodeBase;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Based upon .NET source.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Source: http://referencesource.microsoft.com/#mscorlib/system/IObserver.cs\r\n */\r\n\r\n// Can be used as a base class, mixin, or simply reference on how to implement the pattern.\r\nimport ObservableBase from \"./ObservableBase\";\r\nimport {IObserver} from \"./IObserver\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport class ObservableNodeBase<T>\r\nextends ObservableBase<T> implements IObserver<T>\r\n{\r\n\r\n\tonNext(value:T):void\r\n\t{\r\n\t\tthis._onNext(value);\r\n\t}\r\n\r\n\tonError(error:any):void\r\n\t{\r\n\t\tthis._onError(error);\r\n\t}\r\n\r\n\tonCompleted():void\r\n\t{\r\n\t\tthis._onCompleted();\r\n\t}\r\n}\r\n\r\nexport default ObservableNodeBase;"]}