{"version":3,"sources":["System/Collections/Set.js","System/Collections/Set.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","getId","obj","getIdentifier_1","getIdentifier","Types_1","Type","BOOLEAN","HashSet_1","extends_1","__extends","Set","_super","source","call","this","HashSet","Object","defineProperty","value"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,WAAY,+BAAgC,YAAa,iBAAkBN,IAE9G,SAAUI,EAASF,GAClB,YCOJ,SAAAM,GAAeC,GACd,MAAOC,GAAAC,cAAcF,QAAYA,IAAKG,EAAAC,KAAKC,SAd5C,GAAAF,GAAAR,EAAmB,YACnBM,EAAAN,EAA4B,gCAE5BW,EAAAX,EAAsB,aAGtBY,EAAAZ,EAA4B,iBAEtBa,EAAYD,EAAAA,WASlBE,EAAA,SAAAC,GAGC,QAAAD,GAAYE,GAEXD,EAAAE,KAAAC,KAAMF,EAAQZ,GAEhB,MANQS,GAAAC,EAAAC,GAMRD,GANQH,EAAAQ,QADKrB,GAAAgB,IAAGA,EAShBM,OAAAC,eAAAvB,EAAA,cAAAwB,OAAA,IDAIxB,EAAAA,WCAWgB","file":"Set.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"../Types\", \"./Dictionaries/getIdentifier\", \"./HashSet\", \"../../extends\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Types_1 = require(\"../Types\");\n    var getIdentifier_1 = require(\"./Dictionaries/getIdentifier\");\n    var HashSet_1 = require(\"./HashSet\");\n    var extends_1 = require(\"../../extends\");\n    var __extends = extends_1.default;\n    var OTHER = 'other';\n    var VOID0 = void 0;\n    function getId(obj) {\n        return getIdentifier_1.getIdentifier(obj, typeof obj != Types_1.Type.BOOLEAN);\n    }\n    var Set = (function (_super) {\n        __extends(Set, _super);\n        function Set(source) {\n            _super.call(this, source, getId);\n        }\n        return Set;\n    }(HashSet_1.HashSet));\n    exports.Set = Set;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Set;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {Type} from \"../Types\";\r\nimport {getIdentifier} from \"./Dictionaries/getIdentifier\";\r\nimport {ISymbolizable} from \"./Dictionaries/IDictionary\";\r\nimport {HashSet} from \"./HashSet\";\r\nimport {Primitive} from \"../Primitive\";\r\nimport {IEnumerableOrArray} from \"./IEnumerableOrArray\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst OTHER = 'other';\r\nconst VOID0:undefined = void 0;\r\n\r\nfunction getId(obj:any):string|number|symbol {\r\n\treturn getIdentifier(obj, typeof obj!=Type.BOOLEAN);\r\n}\r\n\r\nexport class Set<T extends Primitive|ISymbolizable|symbol>\r\nextends HashSet<T>\r\n{\r\n\tconstructor(source?:IEnumerableOrArray<T>)\r\n\t{\r\n\t\tsuper(source, getId);\r\n\t}\r\n}\r\n\r\nexport default Set;"]}