{"version":3,"sources":["System/Collections/Set.js","System/Collections/Set.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","wipe","map","depth","_i","_a","keys","length","key","Types_1","ArgumentException_1","SetBase_1","Set","_super","apply","arguments","newUsing","source","_addInternal","item","_","contains","type","isPrimitive","r","_registry","t","node","value","_getSet","addNode","_clearInternal","call","_onDispose","_getNode","_removeInternal","max","Infinity","s","_set","removeNode","defineProperty"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,WAAY,kCAAmC,aAAcN,IAEhG,SAAUI,EAASF,GAClB,YCsEJ,SAAAM,GAAcC,EAAeC,GAE5B,GAF4B,SAAAA,IAAAA,EAAA,GAEzBD,GAAOC,EAET,IAAe,GAAAC,GAAA,EAAAC,EAAAd,OAAOe,KAAKJ,GAAZE,EAAAC,EAAAE,OAAAH,IAAiB,CAA5B,GAAII,GAAGH,EAAAD,GAENR,EAAIM,EAAIM,SACLN,GAAIM,GACXP,EAAKL,EAAGO,EAAQ,IAvFnB,GAAAM,GAAAZ,EAAiB,YACjBa,EAAAb,EAA8B,mCAC9Bc,EAAAd,EAAoB,aAIpBe,EAAA,SAAAC,GAAA,QAAAD,KACQC,EAAAC,MAAA/B,KAAAgC,WAsER,MAtEQjC,WAAA8B,EAAAC,GAEGD,EAAAtB,UAAA0B,SAAV,SAAmBC,GAElB,MAAO,IAAIL,GAAIK,IAKNL,EAAAtB,UAAA4B,aAAV,SAAuBC,GAEtB,GAAIC,GAAIrC,IACR,KAAIqC,EAAEC,SAASF,GACf,CACC,GAAIG,SAAcH,EAClB,KAAIV,EAAAA,WAAKc,YAAYD,GACpB,KAAM,IAAIZ,GAAAA,WAAkB,OAAQ,uEAErC,IAAIc,GAAIJ,EAAEK,UACNC,EAAIF,GAAKA,EAAEF,EACXE,KAAGJ,EAAEK,UAAYD,MACjBE,IAAGF,EAAEF,GAAQI,KACjB,IAAIC,IAAgCC,MAAOT,EAG3C,OAFAC,GAAES,UAAUC,QAAQH,GACpBD,EAAOP,GAAQQ,GACR,EAER,OAAO,GAGEf,EAAAtB,UAAAyC,eAAV,WAGC,MADA9B,GAAKlB,KAAK0C,UAAW,GACdZ,EAAAvB,UAAMyC,eAAcC,KAAAjD,OAGlB6B,EAAAtB,UAAA2C,WAAV,WAECpB,EAAAvB,UAAM2C,WAAUD,KAAAjD,MAChBA,KAAK0C,UAAY,MAGRb,EAAAtB,UAAA4C,SAAV,SAAmBf,GAElB,GAAIK,GAAIzC,KAAK0C,UAAWC,EAAIF,GAAKA,QAASL,GAE1C,OAAOO,IAAKA,EAAOP,IAGVP,EAAAtB,UAAA6C,gBAAV,SAA0BhB,EAAQiB,GAEjC,GAFiC,SAAAA,IAAAA,EAAAC,EAAAA,GAExB,IAAND,EAAS,MAAO,EAEnB,IAAIZ,GAAOzC,KAAK0C,UACZC,EAAOF,GAAKA,QAASL,IACrBQ,EAAOD,GAAKA,EAAOP,EAEvB,IAAGQ,EACH,OACQD,GAAOP,EACd,IAAImB,GAAIvD,KAAKwD,IACb,IAAGD,GAAKA,EAAEE,WAAWb,GAEpB,MAAO,GAIT,MAAO,IAGTf,GAtEQD,EAAAA,WADRpB,QAAAkD,eAAA9C,EAAA,cAAAiC,OAAA,IDgEIjC,EAAAA,WAAkBiB","file":"System/Collections/Set.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"../Types\", \"../Exceptions/ArgumentException\", \"./SetBase\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Types_1 = require(\"../Types\");\n    var ArgumentException_1 = require(\"../Exceptions/ArgumentException\");\n    var SetBase_1 = require(\"./SetBase\");\n    var OTHER = 'other';\n    var Set = (function (_super) {\n        __extends(Set, _super);\n        function Set() {\n            _super.apply(this, arguments);\n        }\n        Set.prototype.newUsing = function (source) {\n            return new Set(source);\n        };\n        Set.prototype._addInternal = function (item) {\n            var _ = this;\n            if (!_.contains(item)) {\n                var type = typeof item;\n                if (!Types_1.default.isPrimitive(type))\n                    throw new ArgumentException_1.default(\"item\", \"A Set can only index primitives.  Complex objects require a HashSet.\");\n                var r = _._registry;\n                var t = r && r[type];\n                if (!r)\n                    _._registry = r = {};\n                if (!t)\n                    r[type] = t = {};\n                var node = { value: item };\n                _._getSet().addNode(node);\n                t[item] = node;\n                return true;\n            }\n            return false;\n        };\n        Set.prototype._clearInternal = function () {\n            wipe(this._registry, 2);\n            return _super.prototype._clearInternal.call(this);\n        };\n        Set.prototype._onDispose = function () {\n            _super.prototype._onDispose.call(this);\n            this._registry = null;\n        };\n        Set.prototype._getNode = function (item) {\n            var r = this._registry, t = r && r[typeof item];\n            return t && t[item];\n        };\n        Set.prototype._removeInternal = function (item, max) {\n            if (max === void 0) { max = Infinity; }\n            if (max === 0)\n                return 0;\n            var r = this._registry, t = r && r[typeof item], node = t && t[item];\n            if (node) {\n                delete t[item];\n                var s = this._set;\n                if (s && s.removeNode(node)) {\n                    return 1;\n                }\n            }\n            return 0;\n        };\n        return Set;\n    }(SetBase_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Set;\n    function wipe(map, depth) {\n        if (depth === void 0) { depth = 1; }\n        if (map && depth) {\n            for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var v = map[key];\n                delete map[key];\n                wipe(v, depth - 1);\n            }\n        }\n    }\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../Primitive.d.ts\"/>\r\n///<reference path=\"ISet.d.ts\"/>\r\n///<reference path=\"IEnumerableOrArray.d.ts\"/>\r\nimport Type from \"../Types\";\r\nimport ArgumentException from \"../Exceptions/ArgumentException\";\r\nimport SetBase from \"./SetBase\";\r\n\r\nconst OTHER = 'other';\r\n\r\nexport default class Set<T extends Primitive>\r\nextends SetBase<T>\r\n{\r\n\tprotected newUsing(source?:IEnumerableOrArray<T>):Set<T>\r\n\t{\r\n\t\treturn new Set(source);\r\n\t}\r\n\r\n\tprivate _registry:IMap<IMap<ILinkedNodeWithValue<T>>>;\r\n\r\n\tprotected _addInternal(item:T):boolean\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tif(!_.contains(item))\r\n\t\t{\r\n\t\t\tvar type = typeof item;\r\n\t\t\tif(!Type.isPrimitive(type))\r\n\t\t\t\tthrow new ArgumentException(\"item\", \"A Set can only index primitives.  Complex objects require a HashSet.\");\r\n\r\n\t\t\tvar r = _._registry;\r\n\t\t\tvar t = r && r[type];\r\n\t\t\tif(!r) _._registry = r = {};\r\n\t\t\tif(!t) r[type] = t = {};\r\n\t\t\tvar node:ILinkedNodeWithValue<T> = {value: item};\r\n\t\t\t_._getSet().addNode(node);\r\n\t\t\tt[<any>item] = node;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\twipe(this._registry, 2);\r\n\t\treturn super._clearInternal();\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._registry = null;\r\n\t}\r\n\r\n\tprotected _getNode(item:T):ILinkedNodeWithValue<T>\r\n\t{\r\n\t\tvar r = this._registry, t = r && r[typeof item];\r\n\r\n\t\treturn t && t[<any>item];\r\n\t}\r\n\r\n\tprotected _removeInternal(item:T, max:number = Infinity):number\r\n\t{\r\n\t\tif(max===0) return 0;\r\n\r\n\t\tvar r    = this._registry,\r\n\t\t    t    = r && r[typeof item],\r\n\t\t    node = t && t[<any>item];\r\n\r\n\t\tif(node)\r\n\t\t{\r\n\t\t\tdelete t[<any>item];\r\n\t\t\tvar s = this._set;\r\n\t\t\tif(s && s.removeNode(node))\r\n\t\t\t{\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n}\r\n\r\nfunction wipe(map:IMap<any>, depth:number = 1):void\r\n{\r\n\tif(map && depth)\r\n\t{\r\n\t\tfor(var key of Object.keys(map))\r\n\t\t{\r\n\t\t\tvar v = map[key];\r\n\t\t\tdelete map[key];\r\n\t\t\twipe(v, depth - 1);\r\n\t\t}\r\n\t}\r\n}"]}