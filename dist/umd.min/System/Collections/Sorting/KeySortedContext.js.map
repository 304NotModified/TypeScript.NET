{"version":3,"sources":["System/Collections/Sorting/KeySortedContext.ts","System/Collections/Sorting/KeySortedContext.js"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","deps","factory","module","exports","v","require","undefined","define","amd","Values","SortContext_1","Functions_1","KeySortedContext","_super","KeySortedContext.constructor","KeySortedContext.compare","defineProperty","value"],"mappings":"AAIA,YCHA,IAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,EAAMC,GACb,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAMC,KAEjB,UAAW,UAAW,gBAAiB,gBAAiB,mBAAoB,SAAUI,EAASF,GDFnG,GAAYM,GAAMJ,EAAM,iBACxBK,EAAAL,EAAwB,iBACxBM,EAAAN,EAAsB,mBAItBO,EAAA,SAAAC,GAGCD,QAAAA,GACCA,EACUA,EACVA,EACAA,GADAE,SAAAA,IAAAA,EAAAA,GACAA,SAAAA,IAAAA,EAAyBA,EAAOA,SAEhCA,EAAAA,KAAAA,KAAMA,EAAMA,EAAUA,GAJZA,KAAAA,aAAAA,EAgBZF,MApB2DA,WAAAA,EAAAA,GAW1DA,EAAAA,UAAAA,QAAAA,SAAQA,EAAKA,GAEZG,GAAIA,GAAIA,KAAMA,EAAKA,EAAEA,YACrBA,KAAIA,GAAMA,GAAIA,EAAAA,WAAUA,SAAUA,MAAOA,GAAAA,UAAMA,QAAOA,KAAAA,KAACA,EAAGA,EAE1DA,IAAIA,GAAIA,EAAOA,QAAaA,EAAGA,GAASA,EAAGA,GAC3CA,OAAMA,IAAHA,GAAQA,EAAEA,MAAcA,EAAEA,MAAMA,QAAQA,EAAGA,GACvCA,EAAEA,OAAOA,GAElBH,GApB2DF,EAAAA,WAD3DZ,QAAAkB,eAAAb,EAAA,cAAAc,OAAA,ICyBId,EAAAA,WAAkBS","file":"System/Collections/Sorting/KeySortedContext.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\n///<reference path=\"../../FunctionTypes.d.ts\"/>\r\n///<reference path=\"../../IComparer.d.ts\"/>\r\n///<reference path=\"../../Primitive.d.ts\"/>\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\n///<reference path=\"Order.d.ts\"/>\r\nimport * as Values from '../../Compare'\r\nimport SortContext from \"./SortContext\";\r\nimport Functions from \"../../Functions\";\r\n\r\ntype Comparable = Primitive|IComparable<any>\r\n\r\nexport default\r\nclass KeySortedContext<T, TKey extends Comparable> extends SortContext<T>\r\n{\r\n\tconstructor(\r\n\t\tnext:IComparer<T>,\r\n\t\tprotected _keySelector:Selector<T,TKey>,\r\n\t\torder:Order = Order.Ascending,\r\n\t\tcomparer:Comparison<T> = Values.compare)\r\n\t{\r\n\t\tsuper(next, comparer, order);\r\n\t}\r\n\r\n\tcompare(a:T, b:T):number\r\n\t{\r\n\t\tvar _ = this, ks = _._keySelector;\r\n\t\tif(!ks || ks==Functions.Identity) return super.compare(a, b);\r\n\t\t// We force <any> here since it can be a Primitive or IComparable<any>\r\n\t\tvar d = Values.compare(<any>ks(a), <any>ks(b));\r\n\t\tif(d==0 && _._next) return _._next.compare(a, b);\r\n\t\treturn _._order*d;\r\n\t}\r\n}\r\n","'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n(function (deps, factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(deps, factory);\r\n    }\r\n})([\"require\", \"exports\", '../../Compare', \"./SortContext\", \"../../Functions\"], function (require, exports) {\r\n    ///<reference path=\"../../FunctionTypes.d.ts\"/>\r\n    ///<reference path=\"../../IComparer.d.ts\"/>\r\n    ///<reference path=\"../../Primitive.d.ts\"/>\r\n    ///<reference path=\"../Array/IArray.d.ts\"/>\r\n    ///<reference path=\"Order.d.ts\"/>\r\n    var Values = require('../../Compare');\r\n    var SortContext_1 = require(\"./SortContext\");\r\n    var Functions_1 = require(\"../../Functions\");\r\n    var KeySortedContext = (function (_super) {\r\n        __extends(KeySortedContext, _super);\r\n        function KeySortedContext(next, _keySelector, order, comparer) {\r\n            if (order === void 0) { order = 1; }\r\n            if (comparer === void 0) { comparer = Values.compare; }\r\n            _super.call(this, next, comparer, order);\r\n            this._keySelector = _keySelector;\r\n        }\r\n        KeySortedContext.prototype.compare = function (a, b) {\r\n            var _ = this, ks = _._keySelector;\r\n            if (!ks || ks == Functions_1.default.Identity)\r\n                return _super.prototype.compare.call(this, a, b);\r\n            var d = Values.compare(ks(a), ks(b));\r\n            if (d == 0 && _._next)\r\n                return _._next.compare(a, b);\r\n            return _._order * d;\r\n        };\r\n        return KeySortedContext;\r\n    })(SortContext_1.default);\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = KeySortedContext;\r\n});\r\n//# sourceMappingURL=KeySortedContext.js.map"]}