{"version":3,"sources":["System/Collections/Sorting/SortContext.ts","System/Collections/Sorting/SortContext.js"],"names":["deps","factory","module","exports","v","require","undefined","define","amd","Values","SortContext","SortContext.constructor","get","SortContext.order","enumerable","configurable","SortContext.generateSortedIndexes","SortContext.compare","Object","defineProperty","value"],"mappings":"AAIA,cCHA,SAAWA,EAAMC,GACb,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAMC,KAEjB,UAAW,UAAW,iBAAkB,SAAUI,EAASF,GDE/D,GAAYM,GAAMJ,EAAM,iBAIxBK,EAAA,WAWCA,QAAAA,GACWA,EACAA,EACAA,GADVC,SAAAA,IAAAA,EAAoCA,EAAOA,SAC3CA,SAAAA,IAAAA,EAAAA,GAFUA,KAAAA,MAAAA,EACAA,KAAAA,UAAAA,EACAA,KAAAA,OAAAA,EA+BZD,MArCCA,QAAAA,eAAIA,EAAAA,UAAAA,SCCOE,IDDXF,WACEG,MAAOA,MAAKA,QCCHC,YAAY,EACZC,cAAc,IDazBL,EAAAA,UAAAA,sBAAAA,SAAsBA,GAAtBM,GAAAA,GAAAA,IAECA,IAAWA,MAARA,EAAcA,QACjBA,IAAIA,GAAkBA,EAAOA,IAAIA,SAACA,EAAGA,GAAIA,MAAAA,IAEzCA,OADAA,GAAOA,KAAKA,SAACA,EAAGA,GAAMA,MAAAA,GAAKA,QAAQA,EAAOA,GAAIA,EAAOA,MAC9CA,GASRN,EAAAA,UAAAA,QAAAA,SAAQA,EAAKA,GAEZO,GAAIA,GAAIA,KACJA,EAAIA,EAAEA,UAAUA,EAAGA,EACvBA,OAAMA,IAAHA,GAAQA,EAAEA,MAAcA,EAAEA,MAAMA,QAAQA,EAAGA,GACvCA,EAAEA,OAAOA,GAElBP,IA7CAQ,QAAAC,eAAAhB,EAAA,cAAAiB,OAAA,IC+BIjB,EAAAA,WAAkBO","file":"System/Collections/Sorting/SortContext.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\n///<reference path=\"../../FunctionTypes.d.ts\"/>\r\n///<reference path=\"../../IComparer.d.ts\"/>\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\n///<reference path=\"Order.d.ts\"/>\r\nimport * as Values from '../../Compare'\r\nimport Integer from '../../Integer'\r\nimport forEach from \"../Enumeration/forEach\"\r\n\r\nexport default\r\nclass SortContext<T> implements IComparer<T>\r\n{\r\n\r\n\t/**\r\n\t * Direction of the comparison.\r\n\t * @type {Order}\r\n\t */\r\n\tget order():Order\r\n\t{ return this._order; }\r\n\r\n\tconstructor(\r\n\t\tprotected _next:IComparer<T>,\r\n\t\tprotected _comparer:Comparison<T> = Values.compare,\r\n\t\tprotected _order:Order = Order.Ascending)\r\n\t{\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generates an array of indexes from the source in order of their expected sort without modifying the source.\r\n\t * @param source\r\n\t * @returns {number[]}\r\n\t */\r\n\tgenerateSortedIndexes(source:T[]):number[]\r\n\t{\r\n\t\tif(source==null) return [];\r\n\t\tvar result:number[] = source.map((s, i)=>i);\r\n\t\tresult.sort((a, b) => this.compare(source[a], source[b]));\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares two values based upon SortContext parameters.\r\n\t * @param a\r\n\t * @param b\r\n\t * @returns {any}\r\n\t */\r\n\tcompare(a:T, b:T):number\r\n\t{\r\n\t\tvar _ = this;\r\n\t\tvar d = _._comparer(a, b);\r\n\t\tif(d==0 && _._next) return _._next.compare(a, b);\r\n\t\treturn _._order*d;\r\n\t}\r\n}\r\n","'use strict';\r\n(function (deps, factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(deps, factory);\r\n    }\r\n})([\"require\", \"exports\", '../../Compare'], function (require, exports) {\r\n    ///<reference path=\"../../FunctionTypes.d.ts\"/>\r\n    ///<reference path=\"../../IComparer.d.ts\"/>\r\n    ///<reference path=\"../Array/IArray.d.ts\"/>\r\n    ///<reference path=\"Order.d.ts\"/>\r\n    var Values = require('../../Compare');\r\n    var SortContext = (function () {\r\n        function SortContext(_next, _comparer, _order) {\r\n            if (_comparer === void 0) { _comparer = Values.compare; }\r\n            if (_order === void 0) { _order = 1; }\r\n            this._next = _next;\r\n            this._comparer = _comparer;\r\n            this._order = _order;\r\n        }\r\n        Object.defineProperty(SortContext.prototype, \"order\", {\r\n            get: function () { return this._order; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        SortContext.prototype.generateSortedIndexes = function (source) {\r\n            var _this = this;\r\n            if (source == null)\r\n                return [];\r\n            var result = source.map(function (s, i) { return i; });\r\n            result.sort(function (a, b) { return _this.compare(source[a], source[b]); });\r\n            return result;\r\n        };\r\n        SortContext.prototype.compare = function (a, b) {\r\n            var _ = this;\r\n            var d = _._comparer(a, b);\r\n            if (d == 0 && _._next)\r\n                return _._next.compare(a, b);\r\n            return _._order * d;\r\n        };\r\n        return SortContext;\r\n    })();\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = SortContext;\r\n});\r\n//# sourceMappingURL=SortContext.js.map"]}