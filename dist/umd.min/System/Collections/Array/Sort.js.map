{"version":3,"sources":["System/Collections/Array/Sort.js","System/Collections/Array/Sort.ts"],"names":["dependencies","factory","module","exports","v","require","undefined","define","amd","createComparer_1","createComparer","Object","defineProperty","value","by","quickSort_1","quickSort","ArraySort","using","target","selector","order","equivalentToNaN","NaN","sort","quick"],"mappings":"CAAA,SAAWA,EAAcC,GACrB,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAcC,KAEzB,UAAW,UAAW,2BAA4B,uBAAwB,SAAUI,EAASF,GAC7F,YCRJ,IAAAM,GAAAJ,EAAA,2BAQCF,GAAAO,eAAAD,EAAAC,eDGGC,OAAOC,eAAeT,EAAS,cAAgBU,OAAO,ICFvCV,EAAAA,WAAAM,EAAAC,eACAP,EAAAW,GAAAL,EAAAC,cATnB,IAAAK,GAAAV,EAAA,sBAMCF,GAAAa,UAAAD,EAAAC,SAMD,IAAcC,IAAd,SAAcA,GAIb,QAAAC,GACCC,EACAC,EACAC,EACAC,GAEA,MAHA,UAAAD,IAAAA,EAAA,GACA,SAAAC,IAAAA,EAAAC,KAEOJ,EAAOK,KAAKf,EAAAC,eAAeU,EAAUC,EAAOC,IATvCL,EAAAQ,MAAQV,EAAAC,UAGLC,EAAAC,MAAKA,GAJRD,EAAAd,EAAAc,YAAAd,EAAAc","file":"Sort.js","sourcesContent":["(function (dependencies, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define(dependencies, factory);\n    }\n})([\"require\", \"exports\", \"./Sorting/createComparer\", \"./Sorting/quickSort\"], function (require, exports) {\n    \"use strict\";\n    var createComparer_1 = require(\"./Sorting/createComparer\");\n    exports.createComparer = createComparer_1.createComparer;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = createComparer_1.createComparer;\n    exports.by = createComparer_1.createComparer;\n    var quickSort_1 = require(\"./Sorting/quickSort\");\n    exports.quickSort = quickSort_1.quickSort;\n    var ArraySort;\n    (function (ArraySort) {\n        ArraySort.quick = quickSort_1.quickSort;\n        function using(target, selector, order, equivalentToNaN) {\n            if (order === void 0) { order = 1 /* Ascending */; }\n            if (equivalentToNaN === void 0) { equivalentToNaN = NaN; }\n            return target.sort(createComparer_1.createComparer(selector, order, equivalentToNaN));\n        }\n        ArraySort.using = using;\n    })(ArraySort = exports.ArraySort || (exports.ArraySort = {}));\n});\n","import {createComparer} from \"./Sorting/createComparer\";\r\nimport {quickSort} from \"./Sorting/quickSort\";\r\nimport {Order} from \"../Sorting/Order\";\r\nimport {Selector} from \"../../FunctionTypes\";\r\nimport {Primitive} from \"../../Primitive\";\r\n\r\nexport {\r\n\tquickSort,\r\n\tcreateComparer,\r\n\tcreateComparer as default, // Allow for default import.\r\n\tcreateComparer as by // Alias for Sort.by(...) instead of Sort.createComparer\r\n}\r\n\r\nexport module ArraySort {\r\n\texport const quick = quickSort;\r\n\r\n\r\n\texport function using<TSource, TSelect extends Primitive>(\r\n\t\ttarget:TSource[],\r\n\t\tselector:Selector<TSource,TSelect|TSelect[]>,\r\n\t\torder:Order | Order[] = Order.Ascending,\r\n\t\tequivalentToNaN:any = NaN):TSource[]\r\n\t{\r\n\t\treturn target.sort(createComparer(selector, order, equivalentToNaN));\r\n\t}\r\n}\r\n"]}