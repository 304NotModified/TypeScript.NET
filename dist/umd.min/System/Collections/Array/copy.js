!function(e,n){if("object"==typeof module&&"object"==typeof module.exports){var t=n(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(e,n)}(["require","exports","./initialize","../../Exceptions/ArgumentNullException","../../Exceptions/ArgumentOutOfRangeException"],function(e,n){"use strict";function t(e,n,t){return void 0===n&&(n=0),void 0===t&&(t=1/0),e?o(e,i.initialize(Math.min(t,Math.max(e.length-n,0))),n,0,t):e}function o(e,n,t,o,i){if(void 0===t&&(t=0),void 0===o&&(o=0),void 0===i&&(i=1/0),!e)throw new r.ArgumentNullException("source",c);if(!n)throw new r.ArgumentNullException("destination",c);if(t<0)throw new u.ArgumentOutOfRangeException("sourceIndex",t,a);var f=e.length;if(!f)return n;if(t>=f)throw new u.ArgumentOutOfRangeException("sourceIndex",t,"Must be less than the length of the source array.");if(n.length<0)throw new u.ArgumentOutOfRangeException("destinationIndex",o,a);var l=e.length-t;if(isFinite(i)&&i>l)throw new u.ArgumentOutOfRangeException("sourceIndex",t,"Source index + length cannot exceed the length of the source array.");i=Math.min(i,l);var g=o+i;g>n.length&&(n.length=g);for(var s=0;s<i;s++)n[o+s]=e[t+s];return n}/*!
     * @author electricessence / https://github.com/electricessence/
     * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
     */
var i=e("./initialize"),r=e("../../Exceptions/ArgumentNullException"),u=e("../../Exceptions/ArgumentOutOfRangeException");n.copy=t;var c="Cannot be null.",a="Cannot be less than zero.";n.copyTo=o});
//# sourceMappingURL=copy.js.map