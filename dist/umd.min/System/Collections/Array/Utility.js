/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../../Types","../../Integer","../../Compare","../../Exceptions/ArgumentException","../../Exceptions/ArgumentNullException","../../Exceptions/ArgumentOutOfRangeException"],e)}(function(e,t){"use strict";function n(e){x["default"].assert(e,"length");var t;return e>65536?t=new Array(e):(t=[],t.length=e),t}function r(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=1/0),e?o(e,n(Math.min(r,Math.max(e.length-t,0))),t,0,r):e}function o(e,t,n,r,o){if(void 0===n&&(n=0),void 0===r&&(r=0),void 0===o&&(o=1/0),!e)throw new E["default"]("source",I);if(!t)throw new E["default"]("destination",I);if(0>n)throw new A["default"]("sourceIndex",n,b);var i=e.length;if(n>=i)throw new A["default"]("sourceIndex",n,"Must be less than the length of the source array.");if(t.length<0)throw new A["default"]("destinationIndex",r,b);var a=e.length-n;if(isFinite(o)&&o>a)throw new A["default"]("sourceIndex",n,"Source index + length cannot exceed the length of the source array.");o=Math.min(o,a);for(var f=0;o>f;++f)t[r+f]=e[n+f];return t}function i(e,t,n){if(void 0===n&&(n=m.areEqual),e&&e.length){if(Array.isArray(e))return-1!=e.indexOf(t);for(var r=0;r<e.length;++r)if(n(e[r],t))return!0}return!1}function a(e,t,n,r){var o=0;if(0!==r){if(r){if(0>r)throw new A["default"]("max",r,b)}else r=1/0;for(var i=e.length-1;i>=0&&(e[i]!==t||(e[i]=n,++o,--r));--i);}return o}function f(e,t,n,r){x["default"].assert(n,"index"),x["default"].assert(n,"length");for(var o=n+r,i=n;o>i;++i)e[i]=t}function u(e,t,n){f(e,null,t,n)}function l(e,t,n){if(void 0===n&&(n=m.areEqual),!e)throw new E["default"]("array",I);var r=e.length,o=!r||!i(e,t,n);return o&&(e[r]=t),o}function d(e,t){if(!e)throw new E["default"]("array",I);if(!v["default"].isFunction(t))throw new y["default"]("predicate","Must be a function.");for(var n=e.length,r=0;n>r;++r)if(r in e&&t(e[r]))return r;return-1}function c(e,t){if(!e)throw new E["default"]("source",I);if(t)for(var n=0;n<e.length&&t(e[n])!==!1;++n);return e}function s(e,t){if(!e)throw new E["default"]("target",I);if(t)for(var n=0;n<e.length;++n)e[n]=t(e[n]);return e}function h(e,t){if(!e)throw new E["default"]("array",I);if(x["default"].assert(t,"index"),0>t)throw new A["default"]("index",t,b);var n=t<e.length;return n&&e.splice(t,1),n}function p(e,t,n,r){if(void 0===r&&(r=m.areEqual),!e)throw new E["default"]("array",I);var o=0;if(e&&e.length&&0!==n){if(n){if(0>n)throw new A["default"]("max",n,b)}else n=1/0;for(var i=e.length-1;i>=0&&(!r(e[i],t)||(e.splice(i,1),++o,--n));--i);}return o}function g(e,t){if(x["default"].assert(t,"count"),0>t)throw new A["default"]("count",t,b);for(var n=[];t--;)n.push(e);return n}function w(e,t){void 0===t&&(t=0);for(var n=[],r=0;r<e.length;r++){var o=e[r];if(Array.isArray(o)){t>0&&(o=w(o,t-1));for(var i=0;i<o.length;i++)n.push(o[i])}else n.push(o)}return n}var v=e("../../Types"),x=e("../../Integer"),m=e("../../Compare"),y=e("../../Exceptions/ArgumentException"),E=e("../../Exceptions/ArgumentNullException"),A=e("../../Exceptions/ArgumentOutOfRangeException");t.initialize=n,t.copy=r;var I="Cannot be null.",b="Cannot be less than zero.";t.copyTo=o,t.contains=i,t.replace=a,t.updateRange=f,t.clear=u,t.register=l,t.findIndex=d,t.forEach=c,t.applyTo=s,t.removeIndex=h,t.remove=p,t.repeat=g,t.flatten=w});
//# sourceMappingURL=Utility.js.map
