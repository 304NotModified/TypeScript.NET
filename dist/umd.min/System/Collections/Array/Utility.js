/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../../Types","../../Integer","../../Compare","../../Exceptions/ArgumentException","../../Exceptions/ArgumentNullException","../../Exceptions/ArgumentOutOfRangeException"],e)}(function(e,t){"use strict";function n(e){E["default"].assert(e,"length");var t;return e>65536?t=new Array(e):(t=[],t.length=e),t}function r(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=1/0),e?i(e,n(Math.min(r,Math.max(e.length-t,0))),t,0,r):e}function i(e,t,n,r,i){if(void 0===n&&(n=0),void 0===r&&(r=0),void 0===i&&(i=1/0),!e)throw new I["default"]("source",O);if(!t)throw new I["default"]("destination",O);if(0>n)throw new N["default"]("sourceIndex",n,M);var o=e.length;if(n>=o)throw new N["default"]("sourceIndex",n,"Must be less than the length of the source array.");if(t.length<0)throw new N["default"]("destinationIndex",r,M);var a=e.length-n;if(isFinite(i)&&i>a)throw new N["default"]("sourceIndex",n,"Source index + length cannot exceed the length of the source array.");i=Math.min(i,a);var f=r+i;f>t.length&&(t.length=f);for(var u=0;i>u;u++)t[r+u]=e[n+u];return t}function o(e,t,n){void 0===n&&(n=A.areEqual);var r=e&&e.length;if(r){if(Array.isArray(e)&&!y["default"].isTrueNaN(t))return e.indexOf(t);for(var i=0;r>i;i++)if(n(e[i],t))return i}return-1}function a(e,t,n){return void 0===n&&(n=A.areEqual),-1!=o(e,t,n)}function f(e,t,n,r){if(!e||!e.length||0===r)return 0;if(0>r)throw new N["default"]("max",r,M);r||(r=1/0);for(var i=0,o=0,a=e.length;a>o&&(e[o]!==t||(e[o]=n,++i,i!=r));o++);return i}function u(e,t,n,r){if(void 0===n&&(n=0),e){if(E["default"].assertZeroOrGreater(n,"start"),r||0===r||(r=e.length),E["default"].assert(r,"stop"),n>r)throw new N["default"]("stop",r,"is less than start");for(var i=n;r>i;i++)e[i]=t}}function l(e,t,n){void 0===t&&(t=0),u(e,null,t,n)}function s(e,t,n){if(void 0===n&&(n=A.areEqual),!e)throw new I["default"]("array",O);var r=e.length,i=!r||!a(e,t,n);return i&&(e[r]=t),i}function d(e,t){if(!e)throw new I["default"]("array",O);if(!y["default"].isFunction(t))throw new b["default"]("predicate","Must be a function.");var n=e.length;if(Array.isArray(e)){for(var r=0;n>r;r++)if(t(e[r]))return r}else for(var r=0;n>r;r++)if(r in e&&t(e[r]))return r;return-1}function c(e,t){if(e&&t)for(var n=0;n<e.length&&t(e[n])!==!1;n++);}function h(e,t){if(e&&t)for(var n=0;n<e.length;n++)e[n]=t(e[n])}function v(e,t){if(!e)throw new I["default"]("array",O);if(E["default"].assert(t,"index"),0>t)throw new N["default"]("index",t,M);var n=t<e.length;return n&&e.splice(t,1),n}function g(e,t,n,r){if(void 0===r&&(r=A.areEqual),!e||!e.length||0===n)return 0;if(0>n)throw new N["default"]("max",n,M);var i=0;if(n&&isFinite(n)){for(var o=[],a=0,f=e.length;f>a&&(!r(e[a],t)||(o.push(a),++i,i!=n));a++);for(var a=o.length-1;a>=0;a--)e.splice(o[a],1)}else for(var a=e.length-1;a>=0;a--)r(e[a],t)&&(e.splice(a,1),++i);return i}function p(e,t){if(E["default"].assert(t,"count"),0>t)throw new N["default"]("count",t,M);for(var r=n(t),i=0;t>i;i++)r[i]=e;return r}function w(e,t,r){if(void 0===r&&(r=1),isNaN(e)||!isFinite(e))throw new N["default"]("first",e,C);if(isNaN(t)||!isFinite(t))throw new N["default"]("count",t,C);if(0>t)throw new N["default"]("count",t,M);for(var i=n(t),o=0;t>o;o++)i[o]=e,e+=r;return i}function x(e,t,n){if(void 0===n&&(n=1),0==n)throw new N["default"]("step",n,q);return w(e,(t-e)/n,n)}function m(e,t){void 0===t&&(t=0);for(var n=[],r=0;r<e.length;r++){var i=e[r];if(Array.isArray(i)){t>0&&(i=m(i,t-1));for(var o=0;o<i.length;o++)n.push(i[o])}else n.push(i)}return n}var y=e("../../Types"),E=e("../../Integer"),A=e("../../Compare"),b=e("../../Exceptions/ArgumentException"),I=e("../../Exceptions/ArgumentNullException"),N=e("../../Exceptions/ArgumentOutOfRangeException");t.initialize=n,t.copy=r;var O="Cannot be null.",q="Cannot be zero.",M="Cannot be less than zero.",C="Must be a valid finite number";t.copyTo=i,t.indexOf=o,t.contains=a,t.replace=f,t.updateRange=u,t.clear=l,t.register=s,t.findIndex=d,t.forEach=c,t.applyTo=h,t.removeIndex=v,t.remove=g,t.repeat=p,t.range=w,t.rangeUntil=x,t.flatten=m});
//# sourceMappingURL=Utility.js.map
