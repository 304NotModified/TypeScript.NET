{"version":3,"sources":["System/Collections/Array/shuffle.js","System/Collections/Array/shuffle.ts"],"names":["dependencies","factory","module","exports","v","require","undefined","define","amd","shuffle","target","i","length","j","Math","floor","random","temp"],"mappings":"CAAA,SAAWA,EAAcC,GACrB,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAcC,KAEzB,UAAW,WAAY,SAAUI,EAASF,GAC1C,YCEJ,SAAAM,GAA0DC,GAGzD,IADA,GAAIC,GAAID,EAAOE,SACPD,GACR,CACC,GAAME,GAAIC,KAAKC,MAAMD,KAAKE,UAAUL,EAAI,IAClCM,EAAOP,EAAOC,EACpBD,GAAOC,GAAKD,EAAOG,GACnBH,EAAOG,GAAKI,EAEb,MAAOP,GAVRP,EAAAM,QAAAA","file":"shuffle.js","sourcesContent":["(function (dependencies, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define(dependencies, factory);\n    }\n})([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    /**\n     * Randomize array element order in-place.\n     * Using Durstenfeld shuffle algorithm.\n     */\n    function shuffle(target) {\n        var i = target.length;\n        while (--i) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = target[i];\n            target[i] = target[j];\n            target[j] = temp;\n        }\n        return target;\n    }\n    exports.shuffle = shuffle;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {ArrayLikeWritable} from \"./ArrayLikeWritable\";\r\n\r\n/**\r\n * Randomize array element order in-place.\r\n * Using Durstenfeld shuffle algorithm.\r\n */\r\nexport function shuffle<T extends ArrayLikeWritable<any>>(target:T):T\r\n{\r\n\tlet i = target.length;\r\n\twhile(--i)\r\n\t{\r\n\t\tconst j = Math.floor(Math.random()*(i + 1));\r\n\t\tconst temp = target[i];\r\n\t\ttarget[i] = target[j];\r\n\t\ttarget[j] = temp;\r\n\t}\r\n\treturn target;\r\n}\r\n\r\n"]}