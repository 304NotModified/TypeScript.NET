{"version":3,"sources":["System/Collections/Enumeration/EmptyEnumerator.js","System/Collections/Enumeration/EmptyEnumerator.ts"],"names":["factory","module","exports","v","require","undefined","define","amd","IteratorResult_1","Functions_1","VOID0","EmptyEnumerator","Object","freeze","current","moveNext","Functions","False","tryMoveNext","nextValue","Blank","next","IteratorResult","GetDone","return","end","reset","dispose","isEndless","defineProperty","value"],"mappings":";;;;CAIA,SAAWA,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,mBAAoB,mBAAoBN,IAE3E,SAAUI,EAASF,GAClB,YCLJ,IAAAM,GAAAJ,EAA6B,oBAC7BK,EAAAL,EAAwB,mBAElBM,EAAkB,MAQXR,GAAAS,gBAAmCC,OAAOC,QACtDC,QAASJ,EACTK,SAAUN,EAAAO,UAAUC,MACpBC,YAAaT,EAAAO,UAAUC,MACvBE,UAAWV,EAAAO,UAAUI,MACrBC,KAAMb,EAAAc,eAAeC,QACrBC,SAAUhB,EAAAc,eAAeC,QACzBE,IAAKhB,EAAAO,UAAUI,MACfM,MAAOjB,EAAAO,UAAUI,MACjBO,QAASlB,EAAAO,UAAUI,MACnBQ,WAAW,IAEZhB,OAAAiB,eAAA3B,EAAA,cAAA4B,OAAA,IDDI5B,EAAAA,WCCWA,EAAAS","file":"EmptyEnumerator.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"./IteratorResult\", \"../../Functions\"], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var IteratorResult_1 = require(\"./IteratorResult\");\n    var Functions_1 = require(\"../../Functions\");\n    var VOID0 = void 0;\n    exports.EmptyEnumerator = Object.freeze({\n        current: VOID0,\n        moveNext: Functions_1.Functions.False,\n        tryMoveNext: Functions_1.Functions.False,\n        nextValue: Functions_1.Functions.Blank,\n        next: IteratorResult_1.IteratorResult.GetDone,\n        \"return\": IteratorResult_1.IteratorResult.GetDone,\n        end: Functions_1.Functions.Blank,\n        reset: Functions_1.Functions.Blank,\n        dispose: Functions_1.Functions.Blank,\n        isEndless: false\n    });\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = exports.EmptyEnumerator;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport {Functions} from \"../../Functions\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\n\r\n/**\r\n * A simplified stripped down enumerable that is always complete and has no results.\r\n * Frozen and exported as 'empty' to allow for reuse.\r\n */\r\n\r\nexport const EmptyEnumerator:IEnumerator<any> = Object.freeze({\r\n\tcurrent: VOID0,\r\n\tmoveNext: Functions.False,\r\n\ttryMoveNext: Functions.False,\r\n\tnextValue: Functions.Blank,\r\n\tnext: IteratorResult.GetDone,\r\n\t\"return\": IteratorResult.GetDone,\r\n\tend: Functions.Blank,\r\n\treset: Functions.Blank,\r\n\tdispose: Functions.Blank,\r\n\tisEndless: false\r\n});\r\nexport default EmptyEnumerator;"]}