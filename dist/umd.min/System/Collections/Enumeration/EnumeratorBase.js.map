{"version":3,"sources":["System/Collections/Enumeration/EnumeratorBase.js","System/Collections/Enumeration/EnumeratorBase.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","yielder","recycle","yielderPool","ObjectPool_1","Yielder","yieldBreak","add","take","EnumeratorState","Types_1","DisposableBase_1","VOID0","_current","defineProperty","get","enumerable","configurable","yieldReturn","value","dispose","EnumeratorBase","_super","_initializer","_tryGetNext","disposer","isEndless","call","reset","isBoolean","_isEndless","isFunction","_disposer","_yielder","current","_","throwIfDisposed","y","_state","Before","moveNext","Running","initializer","After","e","nextValue","next","done","_onDispose"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,cAAe,kCAAmC,+BAAgCN,IAErH,SAAUI,EAASF,GCPtB,YAWA,SAAAM,GAAiBC,GAKhB,MAHIC,KACHA,EACG,GAAIC,GAAAA,WAAyB,GAAI,WAAI,MAAA,IAAIC,MACzCH,GACJA,EAAQI,iBACRH,GAAYI,IAAIL,IAFIC,EAAYK,OAdjC,GAMIL,GAuCCM,EA7CLC,EAAAb,EAAiB,eACjBc,EAAAd,EAA2B,mCAC3BO,EAAAP,EAAuB,+BAEjBe,EAAY,OAelBP,EAAA,WAAA,QAAAA,KAEStB,KAAA8B,SAAaD,EAmBtB,MAlBCrB,QAAAuB,eAAIT,EAAAf,UAAA,WDIOyB,ICJX,WAAkB,MAAOhC,MAAK8B,UDKnBG,YAAY,EACZC,cAAc,ICJzBZ,EAAAf,UAAA4B,YAAA,SAAYC,GAGX,MADApC,MAAK8B,SAAWM,GACT,GAGRd,EAAAf,UAAAgB,WAAA,WAGC,MADAvB,MAAK8B,SAAWD,GACT,GAGRP,EAAAf,UAAA8B,QAAA,WAECrC,KAAKuB,cAEPD,MAKA,SAAKI,GAAkBA,EAAAA,EAAA,OAAA,GAAA,SAAQA,EAAAA,EAAA,QAAA,GAAA,UAASA,EAAAA,EAAA,MAAA,GAAA,SAAnCA,IAAAA,MAIL,IAAAY,GAAA,SAAAC,GAsBC,QAAAD,GACSE,EACAC,EACRC,EACAC,GAEAJ,EAAAK,KAAA5C,MALQA,KAAAwC,aAAAA,EACAxC,KAAAyC,YAAAA,EAKRzC,KAAK6C,QACFlB,EAAAA,WAAKmB,UAAUH,GACjB3C,KAAK+C,WAAaJ,EACXhB,EAAAA,WAAKmB,UAAUJ,KACtB1C,KAAK+C,WAAaL,GAEhBf,EAAAA,WAAKqB,WAAWN,KAClB1C,KAAKiD,UAAYP,GAwGpB,MA3IgC3C,WAAAuC,EAAAC,GAO/B/B,OAAAuB,eAAIO,EAAA/B,UAAA,WDOOyB,ICPX,WAEC,MAAOhC,MAAKkD,SAASC,SDQXlB,YAAY,EACZC,cAAc,IC2BzB1B,OAAAuB,eAAIO,EAAA/B,UAAA,aDxBOyB,ICwBX,WACC,MAAOhC,MAAK+C,YDtBFd,YAAY,EACZC,cAAc,ICwBzBI,EAAA/B,UAAAsC,MAAA,WAEC,GAAIO,GAAIpD,IACRoD,GAAEC,iBACF,IAAIC,GAAIF,EAAEF,QACPI,GAAGA,EAAE/B,aACH6B,EAAEF,SAAWhC,IAClBkC,EAAEG,OAAS7B,EAAgB8B,QAG5BlB,EAAA/B,UAAAkD,SAAA,WAEC,GAAIL,GAAIpD,IACR,KAEC,OAAOoD,EAAEG,QAER,IAAK7B,GAAgB8B,OACpBJ,EAAEG,OAAS7B,EAAgBgC,OAC3B,IAAIC,GAAcP,EAAEZ,YACjBmB,IACFA,GAEF,KAAKjC,GAAgBgC,QACpB,MAAGN,GAAEX,YAAYW,EAAEF,WAEX,GAIPlD,KAAKqC,WACE,EAET,KAAKX,GAAgBkC,MACpB,OAAO,GAGV,MAAMC,GAGL,KADA7D,MAAKqC,UACCwB,IAIRvB,EAAA/B,UAAAuD,UAAA,WAEC,MAAO9D,MAAKyD,WACTzD,KAAKkD,SAASC,QACdtB,GAMJS,EAAA/B,UAAAwD,KAAA,WAEC,MAAO/D,MAAKyD,YAEXrB,MAAOpC,KAAKkD,SAASC,QACrBa,MAAM,IAEN5B,MAAOP,EACPmC,MAAM,IAIE1B,EAAA/B,UAAA0D,WAAV,WAEC,GAAIb,GAAIpD,KAAM0C,EAAWU,EAAEH,SAE3BG,GAAEZ,aAAe,KACjBY,EAAEH,UAAY,IAGd,IAAIK,GAAIF,EAAEF,QACVE,GAAEF,SAAW,KACbhC,EAAQoC,EAER,KAEIZ,GACFA,IDzCQ,QC8CT1C,KAAKuD,OAAS7B,EAAgBkC,QAIjCtB,GA3IgCV,EAAAA,WADhCpB,QAAAuB,eAAAnB,EAAA,cAAAwB,OAAA,IDiGIxB,EAAAA,WAAkB0B","file":"System/Collections/Enumeration/EnumeratorBase.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"../../Types\", \"../../Disposable/DisposableBase\", \"../../Disposable/ObjectPool\"], factory);\n    }\n})(function (require, exports) {\n    'use strict';\n    var Types_1 = require(\"../../Types\");\n    var DisposableBase_1 = require(\"../../Disposable/DisposableBase\");\n    var ObjectPool_1 = require(\"../../Disposable/ObjectPool\");\n    var VOID0 = void (0);\n    var yielderPool;\n    function yielder(recycle) {\n        if (!yielderPool)\n            yielderPool\n                = new ObjectPool_1.default(40, function () { return new Yielder(); });\n        if (!recycle)\n            return yielderPool.take();\n        recycle.yieldBreak();\n        yielderPool.add(recycle);\n    }\n    var Yielder = (function () {\n        function Yielder() {\n            this._current = VOID0;\n        }\n        Object.defineProperty(Yielder.prototype, \"current\", {\n            get: function () { return this._current; },\n            enumerable: true,\n            configurable: true\n        });\n        Yielder.prototype.yieldReturn = function (value) {\n            this._current = value;\n            return true;\n        };\n        Yielder.prototype.yieldBreak = function () {\n            this._current = VOID0;\n            return false;\n        };\n        Yielder.prototype.dispose = function () {\n            this.yieldBreak();\n        };\n        return Yielder;\n    }());\n    var EnumeratorState;\n    (function (EnumeratorState) {\n        EnumeratorState[EnumeratorState[\"Before\"] = 0] = \"Before\";\n        EnumeratorState[EnumeratorState[\"Running\"] = 1] = \"Running\";\n        EnumeratorState[EnumeratorState[\"After\"] = 2] = \"After\";\n    })(EnumeratorState || (EnumeratorState = {}));\n    var EnumeratorBase = (function (_super) {\n        __extends(EnumeratorBase, _super);\n        function EnumeratorBase(_initializer, _tryGetNext, disposer, isEndless) {\n            _super.call(this);\n            this._initializer = _initializer;\n            this._tryGetNext = _tryGetNext;\n            this.reset();\n            if (Types_1.default.isBoolean(isEndless))\n                this._isEndless = isEndless;\n            else if (Types_1.default.isBoolean(disposer))\n                this._isEndless = disposer;\n            if (Types_1.default.isFunction(disposer))\n                this._disposer = disposer;\n        }\n        Object.defineProperty(EnumeratorBase.prototype, \"current\", {\n            get: function () {\n                return this._yielder.current;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EnumeratorBase.prototype, \"isEndless\", {\n            get: function () {\n                return this._isEndless;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        EnumeratorBase.prototype.reset = function () {\n            var _ = this;\n            _.throwIfDisposed();\n            var y = _._yielder;\n            if (y)\n                y.yieldBreak();\n            else\n                _._yielder = yielder();\n            _._state = EnumeratorState.Before;\n        };\n        EnumeratorBase.prototype.moveNext = function () {\n            var _ = this;\n            try {\n                switch (_._state) {\n                    case EnumeratorState.Before:\n                        _._state = EnumeratorState.Running;\n                        var initializer = _._initializer;\n                        if (initializer)\n                            initializer();\n                    case EnumeratorState.Running:\n                        if (_._tryGetNext(_._yielder)) {\n                            return true;\n                        }\n                        else {\n                            this.dispose();\n                            return false;\n                        }\n                    case EnumeratorState.After:\n                        return false;\n                }\n            }\n            catch (e) {\n                this.dispose();\n                throw e;\n            }\n        };\n        EnumeratorBase.prototype.nextValue = function () {\n            return this.moveNext()\n                ? this._yielder.current\n                : VOID0;\n        };\n        EnumeratorBase.prototype.next = function () {\n            return this.moveNext() ?\n                {\n                    value: this._yielder.current,\n                    done: false\n                } : {\n                value: VOID0,\n                done: true\n            };\n        };\n        EnumeratorBase.prototype._onDispose = function () {\n            var _ = this, disposer = _._disposer;\n            _._initializer = null;\n            _._disposer = null;\n            var y = _._yielder;\n            _._yielder = null;\n            yielder(y);\n            try {\n                if (disposer)\n                    disposer();\n            }\n            finally {\n                this._state = EnumeratorState.After;\n            }\n        };\n        return EnumeratorBase;\n    }(DisposableBase_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = EnumeratorBase;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../../Disposable/IDisposable.d.ts\"/>\r\n///<reference path=\"IEnumerator.d.ts\"/>\r\n///<reference path=\"IYield.d.ts\"/>\r\n///<reference path=\"IIterator.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport Type from \"../../Types\";\r\nimport DisposableBase from \"../../Disposable/DisposableBase\";\r\nimport ObjectPool from \"../../Disposable/ObjectPool\";\r\n\r\nconst VOID0:any = void(0);\r\n\r\nvar yielderPool:ObjectPool<Yielder<any>>;\r\nfunction yielder():Yielder<any>;\r\nfunction yielder(recycle?:Yielder<any>):void;\r\nfunction yielder(recycle?:Yielder<any>):Yielder<any>\r\n{\r\n\tif(!yielderPool)\r\n\t\tyielderPool\r\n\t\t\t= new ObjectPool<Yielder<any>>(40, ()=>new Yielder<any>());\r\n\tif(!recycle) return yielderPool.take();\r\n\trecycle.yieldBreak();\r\n\tyielderPool.add(recycle);\r\n}\r\n\r\nclass Yielder<T> implements IYield<T>, IDisposable\r\n{\r\n\tprivate _current:T = VOID0;\r\n\tget current():T { return this._current; }\r\n\r\n\tyieldReturn(value:T):boolean\r\n\t{\r\n\t\tthis._current = value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tyieldBreak():boolean\r\n\t{\r\n\t\tthis._current = VOID0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.yieldBreak();\r\n\t}\r\n}\r\n\r\ntype ActionVoid = ()=>void;\r\n\r\n// IEnumerator State\r\nenum EnumeratorState { Before, Running, After }\r\n\r\n// \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n// Naming this class EnumeratorBase to avoid collision with IE.\r\nexport default\r\nclass EnumeratorBase<T> extends DisposableBase implements IEnumerator<T>\r\n{\r\n\r\n\tprivate _yielder:Yielder<T>;\r\n\tprivate _state:EnumeratorState;\r\n\tprivate _disposer:()=>void;\r\n\r\n\tget current():T\r\n\t{\r\n\t\treturn this._yielder.current;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tinitializer:() => void,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tinitializer:() => void,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:()=>void,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tprivate _initializer:() => void,\r\n\t\tprivate _tryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:ActionVoid|boolean,\r\n\t\tisEndless?:boolean)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.reset();\r\n\t\tif(Type.isBoolean(isEndless))\r\n\t\t\tthis._isEndless = isEndless;\r\n\t\telse if(Type.isBoolean(disposer))\r\n\t\t\tthis._isEndless = disposer;\r\n\r\n\t\tif(Type.isFunction(disposer))\r\n\t\t\tthis._disposer = disposer;\r\n\t}\r\n\r\n\tprotected _isEndless:boolean;\r\n\t/*\r\n\t * Provides a mechanism to indicate if this enumerable never ends.\r\n\t * If set to true, some operations that expect a finite result may throw.\r\n\t * Explicit false means it has an end.\r\n\t * Implicit void means unknown.\r\n\t */\r\n\tget isEndless():boolean {\r\n\t\treturn this._isEndless;\r\n\t}\r\n\r\n\treset():void\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tvar y = _._yielder;\r\n\t\tif(y) y.yieldBreak(); // Already exists? Reset.\r\n\t\telse _._yielder = yielder(); // New? Get one from the object pool.\r\n\t\t_._state = EnumeratorState.Before;\r\n\t}\r\n\r\n\tmoveNext():boolean\r\n\t{\r\n\t\tvar _ = this;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tswitch(_._state)\r\n\t\t\t{\r\n\t\t\t\tcase EnumeratorState.Before:\r\n\t\t\t\t\t_._state = EnumeratorState.Running;\r\n\t\t\t\t\tvar initializer = _._initializer;\r\n\t\t\t\t\tif(initializer)\r\n\t\t\t\t\t\tinitializer();\r\n\t\t\t\t// fall through\r\n\t\t\t\tcase EnumeratorState.Running:\r\n\t\t\t\t\tif(_._tryGetNext(_._yielder))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.dispose();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase EnumeratorState.After:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tthis.dispose();\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\tnextValue():T\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? this._yielder.current\r\n\t\t\t: VOID0;\r\n\t}\r\n\r\n\t/**\r\n\t * Exposed for compatibility with generators.\r\n\t */\r\n\tnext():IIteratorResult<T>\r\n\t{\r\n\t\treturn this.moveNext() ?\r\n\t\t{\r\n\t\t\tvalue: this._yielder.current,\r\n\t\t\tdone: false\r\n\t\t} : {\r\n\t\t\tvalue: VOID0,\r\n\t\t\tdone: true\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tvar _ = this, disposer = _._disposer;\r\n\r\n\t\t_._initializer = null;\r\n\t\t_._disposer = null;\r\n\r\n\r\n\t\tvar y = _._yielder;\r\n\t\t_._yielder = null;\r\n\t\tyielder(y);\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(disposer)\r\n\t\t\t\tdisposer();\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\t//if(this._state==EnumeratorState.Running)\r\n\t\t\tthis._state = EnumeratorState.After;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n"]}