/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var r=e(require,exports);void 0!==r&&(module.exports=r)}else"function"==typeof define&&define.amd&&define(["require","exports","../../Types","./ArrayEnumerator","./IndexEnumerator"],e)}(function(e,r){"use strict";function t(e){if(!e)return l;if(Array.isArray(e))return new a["default"](e);if(f["default"].isArrayLike(e))return new p["default"](function(){return{source:e,length:e.length,pointer:0,step:1}});if(!f["default"].isPrimitive(e)&&n(e))return e.getEnumerator();throw new Error("Unknown enumerable.")}function n(e){return f["default"].hasMemberOfType(e,"getEnumerator",f["default"].FUNCTION)}function o(e){return f["default"].isArrayLike(e)||n(e)}function u(e){return f["default"].hasMemberOfType(e,"moveNext",f["default"].FUNCTION)}function i(e,r){if(e){if(f["default"].isArrayLike(e)){for(var t=0;t<e.length&&r(e[t],t)!==!1;t++);return}if(n(e)&&(e=e.getEnumerator()),u(e))for(var o=0;e.moveNext()&&r(e.current,o++)!==!1;);}}var f=e("../../Types"),a=e("./ArrayEnumerator"),p=e("./IndexEnumerator"),c=void 0,d=function(){function e(){}return Object.defineProperty(e.prototype,"current",{get:function(){return c},enumerable:!0,configurable:!0}),e.prototype.moveNext=function(){return!1},e.prototype.nextValue=function(){return c},e.prototype.next=function(){return{value:c,done:!0}},e.prototype.reset=function(){},e.prototype.dispose=function(){},e}(),l=new d;Object.freeze(l),r.empty=l,r.from=t,r.isEnumerable=n,r.isEnumerableOrArrayLike=o,r.isEnumerator=u,r.forEach=i});
//# sourceMappingURL=Enumerator.js.map
