/*
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e,r){if("object"==typeof module&&"object"==typeof module.exports){var n=r(require,exports);void 0!==n&&(module.exports=n)}else"function"==typeof define&&define.amd&&define(e,r)}(["require","exports","../../Types","./ArrayEnumerator","./IndexEnumerator"],function(e,r){function n(e){if(!e)return a;if(e instanceof Array)return new u["default"](e);if(typeof e===o["default"].OBJECT){if("length"in e){var r=e;return new f["default"](function(){return{source:r,length:r.length,pointer:0,step:1}})}if("getEnumerator"in e)return e.getEnumerator()}throw new Error("Unknown enumerable.")}function t(e,r){if(e)for(var n=0;e.moveNext()&&r(e.current,n++)!==!1;);}var o=e("../../Types"),u=e("./ArrayEnumerator"),f=e("./IndexEnumerator"),i=function(){function e(){}return Object.defineProperty(e.prototype,"current",{get:function(){return void 0},enumerable:!0,configurable:!0}),e.prototype.moveNext=function(){return!1},e.prototype.reset=function(){},e.prototype.dispose=function(){},e}(),a=new i;r.from=n,r.forEach=t});
//# sourceMappingURL=Enumerator.js.map
