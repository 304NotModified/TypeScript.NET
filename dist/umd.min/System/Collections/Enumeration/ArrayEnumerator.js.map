{"version":3,"sources":["System/Collections/Enumeration/ArrayEnumerator.js","System/Collections/Enumeration/ArrayEnumerator.ts"],"names":["dependencies","factory","module","exports","v","require","undefined","define","amd","IndexEnumerator_1","Types_1","extends_1","__extends","ArrayEnumerator","_super","arrayOrFactory","start","step","call","this","array","Type","isFunction","source","pointer","length","IndexEnumerator","Object","defineProperty","value"],"mappings":"CAAA,SAAWA,EAAcC,GACrB,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAcC,KAEzB,UAAW,UAAW,oBAAqB,cAAe,oBAAqB,SAAUI,EAASF,GAClG;;;;ACJJ,GAAAM,GAAAJ,EAAA,qBACAK,EAAAL,EAAA,eAEAM,EAAAN,EAAA,oBAEMO,EAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAIC,QAAAD,GAAYE,EAAoBC,EAAkBC,GDQvC,MCRqB,UAAAD,IAAAA,EAAA,GAAkB,SAAAC,IAAAA,EAAA,GAEjDH,EAAAI,KAAAC,KACC,WAEC,GAAMC,GAAQV,EAAAW,KAAKC,WAAWP,GAAkBA,IAAmBA,CACnE,QACCQ,OAAQH,EACRI,QAASR,EACTS,OAAQL,EAAQA,EAAMK,OAAS,EAC/BR,KAAMA,MAGRE,KAEH,MAnBwCP,GAAAC,EAAAC,GAmBxCD,GAnBwCJ,EAAAiB,gBAAxCvB,GAAAU,gBAAAA,EDyBIc,OAAOC,eAAezB,EAAS,cAAgB0B,OAAO,ICJ1D1B,EAAAA,WAAeU","file":"ArrayEnumerator.js","sourcesContent":["(function (dependencies, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define(dependencies, factory);\n    }\n})([\"require\", \"exports\", \"./IndexEnumerator\", \"../../Types\", \"../../../extends\"], function (require, exports) {\n    \"use strict\";\n    /*!\n     * @author electricessence / https://github.com/electricessence/\n     * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n     */\n    var IndexEnumerator_1 = require(\"./IndexEnumerator\");\n    var Types_1 = require(\"../../Types\");\n    var extends_1 = require(\"../../../extends\");\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var ArrayEnumerator = (function (_super) {\n        __extends(ArrayEnumerator, _super);\n        function ArrayEnumerator(arrayOrFactory, start, step) {\n            if (start === void 0) { start = 0; }\n            if (step === void 0) { step = 1; }\n            return _super.call(this, function () {\n                var array = Types_1.Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\n                return {\n                    source: array,\n                    pointer: start,\n                    length: array ? array.length : 0,\n                    step: step\n                };\n            }) || this;\n        }\n        return ArrayEnumerator;\n    }(IndexEnumerator_1.IndexEnumerator));\n    exports.ArrayEnumerator = ArrayEnumerator;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ArrayEnumerator;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {IndexEnumerator} from \"./IndexEnumerator\";\r\nimport {Type} from \"../../Types\";\r\nimport {IArray} from \"../Array/IArray\";\r\nimport __extendsImport from \"../../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport class ArrayEnumerator<T> extends IndexEnumerator<T>\r\n{\r\n\tconstructor(arrayFactory:() => IArray<T>, start?:number, step?:number);\r\n\tconstructor(array:IArray<T>, start?:number, step?:number);\r\n\tconstructor(arrayOrFactory:any, start:number = 0, step:number = 1)\r\n\t{\r\n\t\tsuper(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tconst array = Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: array,\r\n\t\t\t\t\tpointer: start,\r\n\t\t\t\t\tlength: array ? array.length : 0,\r\n\t\t\t\t\tstep: step\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ArrayEnumerator;"]}