/*!
 * @author electricessence / https://github.com/electricessence/
 * Named groups based on: http://trentrichardson.com/2011/08/02/javascript-regexp-match-named-captures/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Exceptions/ArgumentNullException"],e)}(function(e,t){"use strict";var r,n=e("../Exceptions/ArgumentNullException"),o="",i="undefined",u="pattern";!function(e){e.IGNORE_CASE="i",e.GLOBAL="g",e.MULTI_LINE="m",e.UNICODE="u",e.STICKY="y"}(r=t.RegexOptions||(t.RegexOptions={}));var s=function(){function e(e,t){if(!e)throw new n["default"](u);var i,s=t&&t.join(o)||o;if(e instanceof RegExp){var c=e;c.ignoreCase&&-1===s.indexOf(r.IGNORE_CASE)&&(s+=r.IGNORE_CASE),c.multiline&&-1===s.indexOf(r.MULTI_LINE)&&(s+=r.MULTI_LINE),i=c.source}else i=e;s=s.replace(r.GLOBAL,o);var f=[],p=i.match(/(?!\(\?<)(\w+)(?=>)/g);if(p){for(var a=0,l=p.length;l>a;a++)f[a+1]=p[a];this._keys=f,this._re=new RegExp(i.replace(/\?<\w+>/g,o),s)}else this._keys=null,this._re=new RegExp(i,s);Object.freeze(this)}return e.prototype.match=function(e){var t=this,r=this._re.exec(e);if(!r)return a.Empty;for(var n=r.index,u=[],s={},c=0,p=r.length;p>c;++c){var l=typeof r[c]!==i&&r[c].constructor===String?r[c]:o,h=new f(l,n);h.freeze(),c&&t._keys&&c<t._keys.length&&(s[t._keys[c]]=h),u.push(h),0!==c&&(n+=l.length)}var d=new a(r[0],r.index,u,s);return d.freeze(),d},e.prototype.matches=function(e){for(var t,r=[];(t=this.match(e))&&t.success;)r.push(t),e=e.substring(t.index+t.length);return r},e.prototype.replace=function(e,t){return e.replace(this._re,t)},e.prototype.isMatch=function(e){return this._re.test(e)},e.isMatch=function(t,r,n){var o=new e(r,n);return o.isMatch(t)},e.replace=function(t,r,n,o){var i=new e(r,o);return i.replace(t,n)},e}();t.Regex=s;var c=function(){function e(e,t){void 0===e&&(e=o),void 0===t&&(t=-1),this.value=e,this.index=t}return Object.defineProperty(e.prototype,"length",{get:function(){var e=this.value;return e&&e.length||0},enumerable:!0,configurable:!0}),e.prototype.freeze=function(){Object.freeze(this)},e}();t.Capture=c;var f=function(e){function t(t,r){void 0===t&&(t=o),void 0===r&&(r=-1),e.call(this,t,r)}return __extends(t,e),Object.defineProperty(t.prototype,"success",{get:function(){return-1!=this.index},enumerable:!0,configurable:!0}),Object.defineProperty(t,"Empty",{get:function(){return p},enumerable:!0,configurable:!0}),t}(c);t.Group=f;var p=new f,a=function(e){function t(t,r,n,i){void 0===t&&(t=o),void 0===r&&(r=-1),void 0===n&&(n=[]),void 0===i&&(i={}),e.call(this,t,r),this.groups=n,this.namedGroups=i}return __extends(t,e),t.prototype.freeze=function(){if(!this.groups)throw new n["default"]("groups");if(!this.namedGroups)throw new n["default"]("groupMap");Object.freeze(this.groups.slice()),Object.freeze(this.namedGroups),e.prototype.freeze.call(this)},Object.defineProperty(t,"Empty",{get:function(){return l},enumerable:!0,configurable:!0}),t}(f);t.Match=a;var l=new a;Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=s});
//# sourceMappingURL=RegularExpressions.js.map
