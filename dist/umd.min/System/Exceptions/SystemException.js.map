{"version":3,"sources":["System/Exceptions/SystemException.js","System/Exceptions/SystemException.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","Exception_1","NAME","SystemException","_super","apply","arguments","getName","defineProperty","value"],"mappings":";;;;;AAKA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,gBAAiBN,IAEpD,SAAUI,EAASF,GCXtB,YAEA,IAAAM,GAAAJ,EAAsB,gBAGhBK,EAAc,kBAEpBC,EAAA,SAAAC,GAAA,QAAAD,KAC8BC,EAAAC,MAAAtB,KAAAuB,WAgB9B,MAhB8BxB,WAAAqB,EAAAC,GAYnBD,EAAAb,UAAAiB,QAAV,WAEC,MAAOL,IAETC,GAhB8BF,EAAAA,WAD9BV,QAAAiB,eAAAb,EAAA,cAAAc,OAAA,IDmBId,EAAAA,WAAkBQ","file":"System/Exceptions/SystemException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n(function (factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define([\"require\", \"exports\", '../Exception'], factory);\r\n    }\r\n})(function (require, exports) {\r\n    'use strict';\r\n    var Exception_1 = require('../Exception');\r\n    var NAME = 'SystemException';\r\n    var SystemException = (function (_super) {\r\n        __extends(SystemException, _super);\r\n        function SystemException() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        SystemException.prototype.getName = function () {\r\n            return NAME;\r\n        };\r\n        return SystemException;\r\n    }(Exception_1.default));\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = SystemException;\r\n});\r\n//# sourceMappingURL=SystemException.js.map","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\r\n */\r\n\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport Exception from '../Exception';\r\n\r\n\r\nconst NAME:string = 'SystemException';\r\n\r\nexport default\r\nclass SystemException extends Exception\r\n{\r\n/*\r\n\tconstructor(\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Error = null,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tsuper(message, innerException, beforeSealing);\r\n\t}\r\n*/\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n}\r\n"]}