{"version":3,"sources":["System/Exceptions/SystemException.js","System/Exceptions/SystemException.ts"],"names":["dependencies","factory","module","exports","v","require","undefined","define","amd","Exception_1","extends_1","__extends","NAME","SystemException","_super","apply","this","arguments","prototype","getName","Exception","Object","defineProperty","value"],"mappings":";;;;;CAKA,SAAWA,EAAcC,GACrB,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAcC,KAEzB,UAAW,UAAW,eAAgB,iBAAkB,SAAUI,EAASF,GAC3E,YCPJ,IAAAM,GAAAJ,EAAA,gBACAK,EAAAL,EAAA,iBAEMM,EAAYD,EAAAA,WAEZE,EAAc,kBAIpBC,EAAA,SAAAC,GAAA,QAAAD,KDMY,MAAOC,GAAOC,MAAMC,KAAMC,YAAcD,KCUpD,MAhBqCL,GAAAE,EAAAC,GAY1BD,EAAAK,UAAAC,QAAV,WAEC,MAAOP,IAETC,GAhBqCJ,EAAAW,UAAxBjB,GAAAU,gBAAAA,EDcTQ,OAAOC,eAAenB,EAAS,cAAgBoB,OAAO,ICI1DpB,EAAAA,WAAeU","file":"SystemException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\n */\n(function (dependencies, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define(dependencies, factory);\n    }\n})([\"require\", \"exports\", \"../Exception\", \"../../extends\"], function (require, exports) {\n    \"use strict\";\n    var Exception_1 = require(\"../Exception\");\n    var extends_1 = require(\"../../extends\");\n    var __extends = extends_1.default;\n    var NAME = 'SystemException';\n    var SystemException = (function (_super) {\n        __extends(SystemException, _super);\n        function SystemException() {\n            return _super.apply(this, arguments) || this;\n        }\n        SystemException.prototype.getName = function () {\n            return NAME;\n        };\n        return SystemException;\n    }(Exception_1.Exception));\n    exports.SystemException = SystemException;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = SystemException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {Exception, Error} from \"../Exception\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'SystemException';\r\n\r\nexport {Error};\r\n\r\nexport class SystemException extends Exception\r\n{\r\n\t/*\r\n\t\tconstructor(\r\n\t\t\tmessage:string = null,\r\n\t\t\tinnerException:Error = null,\r\n\t\t\tbeforeSealing?:(ex:any)=>void)\r\n\t\t{\r\n\t\t\tsuper(message, innerException, beforeSealing);\r\n\t\t}\r\n\t*/\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n}\r\n\r\nexport default SystemException;"]}