/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT
 */
!function(e,t){if("object"==typeof module&&"object"==typeof module.exports){var r=t(require,exports);void 0!==r&&(module.exports=r)}else"function"==typeof define&&define.amd&&define(e,t)}(["require","exports","./Types","./Compare","../extends"],function(e,t){"use strict";function r(e,t){if(!i.areEqual(e,t)){var r=new o(e);if(!r.contains(t))return!0}return!1}var n=e("./Types"),i=e("./Compare"),s=e("../extends"),u=s["default"],o=function(e){function t(t){return e.call(this,t,function(e){return e._value=t})||this}return u(t,e),t.prototype.contains=function(e){var t=this._value;if(t===e)return!0;switch(e){case Function:return this.isFunction;case Object:return this.isObject;case Array:return this.isArray;case String:return this.isString;case Number:return this.isNumber;case Boolean:return this.isBoolean}if(this.type!=typeof e||this.isPrimitive&&!i.areEqual(t,e))return!1;if(this.isArray&&Array.isArray(e)){for(var n=Math.min(e.length,t.length),s=0;s<n;s++)if(r(t[s],e[s]))return!1;return!0}if(this.isObject){var u=Object.keys(t),o=Object.keys(e);if(o.length>u.length)return!1;for(var a=0,f=o;a<f.length;a++){var c=f[a];if(u.indexOf(c)==-1)return!1}for(var p=0,h=o;p<h.length;p++){var c=h[p];if(r(t[c],e[c]))return!1}}return!0},t}(n.TypeInfo);t.TypeInfoHelper=o;var a=function(){function e(e){this._typeDescriptor=e,Object.freeze(this)}return e.prototype.isSubsetOf=function(e){return new o(e).contains(this._typeDescriptor)},e}();t.TypeValidator=a,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=a});
//# sourceMappingURL=TypeValidator.js.map