{"version":3,"sources":["System/Compare.js","System/Compare.ts"],"names":["deps","factory","module","exports","v","require","undefined","define","amd","areEqual","a","b","strict","compare","Types_1","isTrueNaN","COMPARE_TO"],"mappings":";;;;;;CAMA,SAAWA,EAAMC,GACb,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,OAAOP,EAAMC,KAEjB,UAAW,UAAW,WAAY,SAAUI,EAASF,GCKzD,QAAAM,GAAyBC,EAAOC,EAAOC,GAEtCH,MAFsCA,UAAAA,IAAAA,GAAAA,GAE/BA,IAAIA,IAAMA,GAAUA,GAAGA,GAAKA,EAAUA,IAAMA,EAAUA,GAO9D,QAAAI,GAAwBH,EAAOC,EAAOC,GAGrCC,MAHqCA,UAAAA,IAAAA,GAAAA,GAGlCA,EAASA,EAAGA,EAAGA,GACVA,EAELA,GAAKA,EAAAA,WAAKA,UAAUA,EAAGA,GAClBA,EAAEA,UAAUA,GACZA,GAAKA,EAAAA,WAAKA,UAAUA,EAAGA,IACtBA,EAAEA,UAAUA,GAIlBA,EAAEA,GAAKA,IAAeA,IAAJA,GAAYA,GAAHA,GAAYA,OAAJA,GAAgBA,SAAJA,GAC1CA,EAELA,EAAEA,GAAKA,IAAeA,IAAJA,GAAYA,GAAHA,GAAYA,OAAJA,GAAgBA,SAAJA,GAC1CA,GAEDA,IAvCR,GAAAC,GAAAT,EAAiB,WACVU,EAAYD,EAAAA,WAAKC,SAURZ,GAAAM,SAAQA,CAKxB,IAAMO,GAAa,WAIHb,GAAAU,QAAOA","file":"System/Compare.js","sourcesContent":["///<reference path=\"IComparable.d.ts\"/>\r\n///<reference path=\"Primitive.d.ts\"/>\r\n/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n(function (deps, factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(deps, factory);\r\n    }\r\n})([\"require\", \"exports\", './Types'], function (require, exports) {\r\n    var Types_1 = require('./Types');\r\n    var isTrueNaN = Types_1.default.isTrueNaN;\r\n    function areEqual(a, b, strict) {\r\n        if (strict === void 0) { strict = true; }\r\n        return a === b || !strict && a == b || isTrueNaN(a) && isTrueNaN(b);\r\n    }\r\n    exports.areEqual = areEqual;\r\n    var COMPARE_TO = \"compareTo\";\r\n    function compare(a, b, strict) {\r\n        if (strict === void 0) { strict = true; }\r\n        if (areEqual(a, b, strict))\r\n            return 0;\r\n        if (a && Types_1.default.hasMember(a, COMPARE_TO))\r\n            return a.compareTo(b);\r\n        else if (b && Types_1.default.hasMember(b, COMPARE_TO))\r\n            return -b.compareTo(a);\r\n        if (a > b || strict && (a === 0 && b == 0 || a === null && b === undefined))\r\n            return 1;\r\n        if (b > a || strict && (b === 0 && a == 0 || b === null && a === undefined))\r\n            return -1;\r\n        return NaN;\r\n    }\r\n    exports.compare = compare;\r\n});\r\n//# sourceMappingURL=Compare.js.map","///<reference path=\"IComparable.d.ts\"/>\r\n///<reference path=\"Primitive.d.ts\"/>\r\n/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport Type from './Types';\r\nimport isTrueNaN = Type.isTrueNaN;\r\n\r\nexport const enum CompareResult {\r\n\tEqual   = 0,\r\n\tGreater = 1,\r\n\tLess    = -1\r\n}\r\n\r\n\r\n// Used for special equals cases like NaN.\r\nexport function areEqual(a:any, b:any, strict:boolean = true):boolean\r\n{\r\n\treturn a===b || !strict && a==b || isTrueNaN(a) && isTrueNaN(b);\r\n}\r\n\r\nconst COMPARE_TO = \"compareTo\";\r\n\r\nexport function compare<T>(a:IComparable<T>, b:IComparable<T>):number;\r\nexport function compare<T extends Primitive>(a:T, b:T, strict?:boolean):CompareResult;\r\nexport function compare(a:any, b:any, strict:boolean = true):CompareResult\r\n{\r\n\r\n\tif(areEqual(a, b, strict))\r\n\t\treturn CompareResult.Equal;\r\n\r\n\tif(a && Type.hasMember(a, COMPARE_TO))\r\n\t\treturn a.compareTo(b);\r\n\telse if(b && Type.hasMember(b, COMPARE_TO))\r\n\t\treturn -b.compareTo(a);\r\n\r\n\t// Allow for special inequality..\r\n\r\n\tif(a>b || strict && (a===0 && b==0 || a===null && b===undefined))\r\n\t\treturn CompareResult.Greater;\r\n\r\n\tif(b>a || strict && (b===0 && a==0 || b===null && a===undefined))\r\n\t\treturn CompareResult.Less;\r\n\r\n\treturn NaN;\r\n}\r\n"]}