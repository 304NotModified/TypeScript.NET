/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports"],function(i,t){"use strict";var e=void 0,r=typeof!0,s="number",n="string",u="symbol",o=typeof{},a=typeof e,c="function",f="length",h={},y=function(){function i(i,t){switch(this.isBoolean=!1,this.isNumber=!1,this.isString=!1,this.isTrueNaN=!1,this.isObject=!1,this.isFunction=!1,this.isUndefined=!1,this.isNull=!1,this.isPrimitive=!1,this.isSymbol=!1,this.type=typeof i){case r:this.isBoolean=!0,this.isPrimitive=!0;break;case s:this.isNumber=!0,this.isTrueNaN=isNaN(i),this.isFinite=isFinite(i),this.isValidNumber=!this.isTrueNaN,this.isPrimitive=!0;break;case n:this.isString=!0,this.isPrimitive=!0;break;case u:this.isSymbol=!0;break;case o:this.target=i,null===i?(this.isNull=!0,this.isNullOrUndefined=!0,this.isPrimitive=!0):(this.isArray=Array.isArray(i),this.isObject=!0);break;case c:this.target=i,this.isFunction=!0;break;case a:this.isUndefined=!0,this.isNullOrUndefined=!0,this.isPrimitive=!0;break;default:throw"Fatal type failure.  Unknown type: "+this.type}t&&t(),Object.freeze(this)}return i.prototype.member=function(t){var r=this.target;return i.getFor(r&&t in r?r[t]:e)},i.getFor=function(t){var e=typeof t;switch(e){case o:case c:return new i(t)}var r=h[e];return r||(h[e]=r=new i(t)),r},i}();t.TypeInfo=y;var N;!function(i){function t(i){return typeof i===r}function h(i,t){return t===e&&(t=!0),typeof i===s&&(t||!isNaN(i))}function N(i){return typeof i===s&&isNaN(i)}function l(i){return typeof i===n}function p(i,t){void 0===t&&(t=!1);var e=typeof i;switch(e){case r:case n:case s:return!0;case a:return t;case o:return null===i}return!1}function b(i,t){return void 0===t&&(t=!1),typeof i===u||p(i,t)}function m(i){var t=typeof i;switch(t){case n:case s:case u:return!0}return!1}function v(i){return typeof i===c}function d(i,t){return void 0===t&&(t=!1),typeof i===o&&(t||null!==i)}function O(i){return isNaN(i)?NaN:i}function g(i){return y.getFor(i)}function F(i,t){return i&&!p(i)&&t in i}function T(i,t,e){return F(i,t)&&typeof i[t]===e}function P(i,t){return T(i,t,c)}function k(t){return t instanceof Array||i.isString(t)||!i.isFunction(t)&&F(t,f)}i.BOOLEAN=r,i.NUMBER=s,i.STRING=n,i.OBJECT=o,i.SYMBOL=u,i.UNDEFINED=a,i.FUNCTION=c,i.isBoolean=t,i.isNumber=h,i.isTrueNaN=N,i.isString=l,i.isPrimitive=p,i.isPrimitiveOrSymbol=b,i.isPropertyKey=m,i.isFunction=v,i.isObject=d,i.numberOrNaN=O,i.of=g,i.hasMember=F,i.hasMemberOfType=T,i.hasMethod=P,i.isArrayLike=k}(N=t.Type||(t.Type={})),Object.freeze(N),Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=N});
//# sourceMappingURL=Types.js.map