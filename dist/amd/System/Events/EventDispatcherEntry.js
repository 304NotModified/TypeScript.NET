/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,t){function n(){this.constructor=e}for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s]);e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)};define(["require","exports","../Types","../Disposable/DisposableBase","../Exceptions/ArgumentNullException","../Exceptions/ArgumentException","../Compare"],function(e,t,n,s,i,r,o){"use strict";var a=function(e){function t(t,s,o,a){if(void 0===o&&(o=null),e.call(this,a),this.type=t,this.listener=s,this.params=o,!s)throw new i["default"]("listener");if(n["default"].isObject(s)&&!n["default"].hasMemberOfType(s,"handleEvent",n["default"].FUNCTION))throw new r["default"]("listener","is invalid type.  Must be a function or an object with 'handleEvent'.");var p=this;p.type=t,p.listener=s,p.params=o,p._disposableObjectName="EventDispatcherEntry"}return __extends(t,e),t.prototype._onDispose=function(){e.prototype._onDispose.call(this),this.listener=null},t.prototype.dispatch=function(e){var t=this;if(t.wasDisposed)return!1;var s=t.listener,i=s&&e.type==t.type;return i&&(n["default"].isFunction(s)?t.listener(e):s.handleEvent(e)),i},t.prototype.matches=function(e,t){var n=this;return n.type==e&&n.listener==t},t.prototype.equals=function(e){var t=this;return t.matches(e.type,e.listener)&&o.areEquivalent(t.params,e.params,!1)},t}(s["default"]);Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=a});
//# sourceMappingURL=EventDispatcherEntry.js.map
