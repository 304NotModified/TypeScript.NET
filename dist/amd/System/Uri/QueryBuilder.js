/*
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)};define(["require","exports","../Types","./QueryParams","../Collections/Dictionaries/OrderedStringKeyDictionary"],function(t,e,r,n,i){var o="&",s="=",a=function(t){function e(e,n){void 0===n&&(n=!0),t.call(this),r["default"].isString(e)?this.importFromString(e,n):this.importMap(e)}return __extends(e,t),e.prototype.importFromString=function(t,e,r){void 0===e&&(e=!0),void 0===r&&(r=!0);var i=this;return n.parse(t,function(t,e){if(i.containsKey(t)){var r=i.getValue(t);Array.isArray(r)?r.push(e):i.setValue(t,[r,e])}else i.setValue(t,e)},e,r),this},e.init=function(t,r){return void 0===r&&(r=!0),new e(t,r)},e.prototype.encode=function(t){for(var e=[],r=this.keys,i=0;i<r.length;i++)for(var a=r[i],u=this.getValue(a),c=0,p=Array.isArray(u)?u:[u];c<p.length;c++){var l=p[c];e.push(a+s+n.encodeValue(l))}return(e.length&&t?"?":"")+e.join(o)},e.prototype.toString=function(){return this.encode()},e}(i["default"]);Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=a});
//# sourceMappingURL=QueryBuilder.js.map
