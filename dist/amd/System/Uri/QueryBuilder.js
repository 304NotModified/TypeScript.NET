/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(t,r){function e(){this.constructor=t}for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i]);t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)};define(["require","exports","../Types","./QueryParams","../Collections/Dictionaries/OrderedStringKeyDictionary","../Collections/Enumeration/Enumerator"],function(t,r,e,i,n,o){"use strict";var s="&",u="=",a=function(t){function r(r,e){void 0===e&&(e=!0),t.call(this),this.importQuery(r,e)}return __extends(r,t),r.init=function(t,e){return void 0===e&&(e=!0),new r(t,e)},r.prototype.importQuery=function(t,r){return void 0===r&&(r=!0),e["default"].isString(t)?this.importFromString(t,r):Array.isArray(t)||o.isEnumerable(t)?this.importPairs(t):this.importMap(t),this},r.prototype.importFromString=function(t,r,e){void 0===r&&(r=!0),void 0===e&&(e=!0);var n=this;return i.parse(t,function(t,r){if(n.containsKey(t)){var e=n.getValue(t);Array.isArray(e)?e.push(r):n.setValue(t,[e,r])}else n.setValue(t,r)},r,e),this},r.prototype.encode=function(t){for(var r=[],e=this.keys,n=0,o=e;n<o.length;n++)for(var a=o[n],p=this.getValue(a),c=0,l=Array.isArray(p)?p:[p];c<l.length;c++){var y=l[c];r.push(a+u+i.encodeValue(y))}return(r.length&&t?"?":"")+r.join(s)},r.prototype.toString=function(){return this.encode()},r}(n["default"]);Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=a});
//# sourceMappingURL=QueryBuilder.js.map
