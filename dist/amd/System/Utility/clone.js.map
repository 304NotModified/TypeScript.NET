{"version":3,"sources":["System/Utility/clone.js","System/Utility/clone.ts"],"names":["define","require","exports","Types_1","clone","source","depth","isObject","result","Array","isArray","slice","i","length","k","Object","defineProperty","value"],"mappings":";;;;AAIAA,QAAQ,UAAW,UAAW,YAAa,SAAUC,EAASC,EAASC,GACnE,YCEJ,SAAAC,GAA8BC,EAAYC,GAEzC,GAFyC,SAAAA,IAAAA,EAAA,GAEhC,EAANA,EACF,MAAOD,EAGR,KAAIF,EAAAA,WAAKI,SAASF,GAAS,MAAOA,EAElC,IAAIG,EACJ,IAAGC,MAAMC,QAAQL,IAGhB,GADAG,EAAeH,EAAQM,QACpBL,EAAM,EAER,IAAI,GAAIM,GAAI,EAAGA,EAAEJ,EAAOK,OAAQD,IAE/BJ,EAAOI,GAAKR,EAAMI,EAAOI,GAAIN,EAAQ,OAOvC,IADAE,KACGF,EAAM,EAAG,IAAI,GAAIQ,KAAKT,GAGxBG,EAAOM,GAAKV,EAAMC,EAAOS,GAAIR,EAAQ,EAIvC,OAAOE,GA9BRO,OAAAC,eAAAd,EAAA,cAAAe,OAAA,IDwBIf,EAAAA,WAAkBE","file":"System/Utility/clone.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n(function (factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define([\"require\", \"exports\", '../Types'], factory);\r\n    }\r\n})(function (require, exports) {\r\n    \"use strict\";\r\n    var Types_1 = require('../Types');\r\n    function clone(source, depth) {\r\n        if (depth === void 0) { depth = 0; }\r\n        if (depth < 0)\r\n            return source;\r\n        if (!Types_1.default.isObject(source))\r\n            return source;\r\n        var result;\r\n        if (Array.isArray(source)) {\r\n            result = source.slice();\r\n            if (depth > 0) {\r\n                for (var i = 0; i < result.length; i++) {\r\n                    result[i] = clone(result[i], depth - 1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = {};\r\n            if (depth > 0)\r\n                for (var k in source) {\r\n                    result[k] = clone(source[k], depth - 1);\r\n                }\r\n        }\r\n        return result;\r\n    }\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = clone;\r\n});\r\n//# sourceMappingURL=clone.js.map","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport Type from '../Types';\r\n\r\nexport default function clone(source:any, depth:number = 0):any\r\n{\r\n\tif(depth<0)\r\n\t\treturn source;\r\n\r\n\t// return primitives as is.\r\n\tif(!Type.isObject(source)) return source;\r\n\r\n\tvar result:any;\r\n\tif(Array.isArray(source))\r\n\t{\r\n\t\tresult = (<any>source).slice();\r\n\t\tif(depth>0)\r\n\t\t{\r\n\t\t\tfor(let i = 0; i<result.length; i++)\r\n\t\t\t{\r\n\t\t\t\tresult[i] = clone(result[i], depth - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tresult = {};\r\n\t\tif(depth>0) for(let k in source)\r\n\t\t{\r\n\t\t\t//noinspection JSUnfilteredForInLoop\r\n\t\t\tresult[k] = clone(source[k], depth - 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n"]}