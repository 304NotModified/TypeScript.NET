{"version":3,"sources":["System/Collections/Enumeration/IteratorResult.js","System/Collections/Enumeration/IteratorResult.ts"],"names":["define","require","exports","VOID0","IteratorResult","value","index","done","this","Object","freeze","GetDone","Done","defineProperty"],"mappings":"AAAAA,QAAQ,UAAW,WAAY,SAAUC,EAASC,GAC9C,YCKJ,IAAMC,GAAkB,OAExBC,EAAA,WAEC,QAAAA,GACiBC,EACAC,EACAC,GAAA,SAAAA,IAAAA,GAAA,GAFAC,KAAAH,MAAAA,EACAG,KAAAF,MAAAA,EACAE,KAAAD,KAAAA,EAEhBE,OAAOC,OAAOF,MAEhB,MAAAJ,KATAF,GAAAE,eAAAA,EAWA,SAAcA,GAIb,QAAAO,KAAgD,MAAOP,GAAAQ,KAF1CR,EAAAQ,KAA2B,GAAIR,GAAoBD,EAAOA,IAAO,IAE9DC,EAAAO,QAAOA,GAJVP,EAAAF,EAAAE,iBAAAF,EAAAE,oBAOdK,OAAOC,OAAON,GDNVK,OAAOI,eAAeX,EAAS,cAAgBG,OAAO,ICQ1DH,EAAAA,WAAeE","file":"IteratorResult.js","sourcesContent":["define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var VOID0 = void 0;\n    var IteratorResult = (function () {\n        function IteratorResult(value, index, done) {\n            if (done === void 0) { done = false; }\n            this.value = value;\n            this.index = index;\n            this.done = done;\n            Object.freeze(this);\n        }\n        return IteratorResult;\n    }());\n    exports.IteratorResult = IteratorResult;\n    (function (IteratorResult) {\n        IteratorResult.Done = new IteratorResult(VOID0, VOID0, true);\n        function GetDone() { return IteratorResult.Done; }\n        IteratorResult.GetDone = GetDone;\n    })(IteratorResult = exports.IteratorResult || (exports.IteratorResult = {}));\n    Object.freeze(IteratorResult);\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = IteratorResult;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {IIteratorResult} from \"./IIterator\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport class IteratorResult<T> implements IIteratorResult<T>\r\n{\r\n\tconstructor(\r\n\t\tpublic readonly value:T,\r\n\t\tpublic readonly index?:number,\r\n\t\tpublic readonly done:boolean = false)\r\n\t{\r\n\t\tObject.freeze(this);\r\n\t}\r\n}\r\n\r\nexport module IteratorResult\r\n{\r\n\texport const Done:IteratorResult<any> = new IteratorResult<any>(VOID0, VOID0, true);\r\n\r\n\texport function GetDone():IteratorResult<any> { return Done; }\r\n}\r\n\r\nObject.freeze(IteratorResult);\r\n\r\nexport default IteratorResult;"]}