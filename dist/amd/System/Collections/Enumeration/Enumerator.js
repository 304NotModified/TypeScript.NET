/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../../Types","./ArrayEnumerator","./IndexEnumerator"],function(e,r,t,n,u){"use strict";function o(e){if(!e)return s;if(Array.isArray(e))return new n["default"](e);if(!t["default"].isPrimitive(e)){if(t["default"].isArrayLike(e))return new u["default"](function(){return{source:e,length:e.length,pointer:0,step:1}});if(i(e))return e.getEnumerator()}throw new Error("Unknown enumerable.")}function i(e){return t["default"].hasMemberOfType(e,"getEnumerator",t["default"].FUNCTION)}function f(e){return t["default"].isArrayLike(e)||i(e)}function a(e){return t["default"].hasMemberOfType(e,"moveNext",t["default"].FUNCTION)}function c(e,r){if(e){if(t["default"].isArrayLike(e)){for(var n=0;n<e.length&&r(e[n],n)!==!1;n++);return}if(i(e)&&(e=e.getEnumerator()),a(e))for(var u=0;e.moveNext()&&r(e.current,u++)!==!1;);}}var p=void 0,l=function(){function e(){}return Object.defineProperty(e.prototype,"current",{get:function(){return p},enumerable:!0,configurable:!0}),e.prototype.moveNext=function(){return!1},e.prototype.nextValue=function(){return p},e.prototype.next=function(){return{value:p,done:!0}},e.prototype.reset=function(){},e.prototype.dispose=function(){},e}(),s=new l;Object.freeze(s),r.empty=s,r.from=o,r.isEnumerable=i,r.isEnumerableOrArrayLike=f,r.isEnumerator=a,r.forEach=c});
//# sourceMappingURL=Enumerator.js.map
