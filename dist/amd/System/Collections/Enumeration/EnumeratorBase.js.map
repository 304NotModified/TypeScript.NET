{"version":3,"sources":["System/Collections/Enumeration/EnumeratorBase.js","System/Collections/Enumeration/EnumeratorBase.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","DisposableBase_1","EnumeratorState","Yielder","get","Yielder.current","enumerable","configurable","Yielder.yieldReturn","Yielder.yieldBreak","EnumeratorBase","_super","EnumeratorBase.constructor","EnumeratorBase.current","EnumeratorBase.reset","EnumeratorBase.moveNext","EnumeratorBase._onDispose","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,mCAAoC,SAAUC,EAASC,EAASC,GCI9F,GAiBKC,GAjBLC,EAAA,WAAAA,QAAAA,MAcAA,MAXCA,QAAAA,eAAIA,EAAAA,UAAAA,WDFOC,ICEXD,WAAkBE,MAAOA,MAAKA,UDDnBC,YAAY,EACZC,cAAc,ICEzBJ,EAAAA,UAAAA,YAAAA,SAAYA,GAEXK,MADAA,MAAKA,SAAWA,GACTA,GAGRL,EAAAA,UAAAA,WAAAA,WAECM,MADAA,MAAKA,SAAWA,MACTA,GAETN,MAGA,SAAKD,GAAkBA,EAAAA,EAAAA,OAAAA,GAAAA,SAAQA,EAAAA,EAAAA,QAAAA,GAAAA,UAASA,EAAAA,EAAAA,MAAAA,GAAAA,SAAnCA,IAAAA,MAGL,IAAAQ,GAAA,SAAAC,GAYCD,QAAAA,GACSA,EACAA,EACAA,GAERE,EAAAA,KAAAA,MAJQA,KAAAA,YAAAA,EACAA,KAAAA,WAAAA,EACAA,KAAAA,SAAAA,EAGRA,KAAKA,QA6DPF,MA9EgCA,WAAAA,EAAAA,GAM/BA,OAAAA,eAAIA,EAAAA,UAAAA,WDION,ICJXM,WACCG,MAAOA,MAAKA,SAASA,SDMXP,YAAY,EACZC,cAAc,ICOzBG,EAAAA,UAAAA,MAAAA,WACCI,GAAIA,GAAIA,IACRA,GAAEA,SAAWA,GAAIA,GACjBA,EAAEA,OAASA,EAAgBA,QAG5BJ,EAAAA,UAAAA,SAAAA,WACCK,GAAIA,GAAIA,IACRA,KACCA,OAAOA,EAAEA,QACRA,IAAKA,GAAgBA,OACpBA,EAAEA,OAASA,EAAgBA,OAC3BA,IAAIA,GAAcA,EAAEA,WACjBA,IACFA,GAEFA,KAAKA,GAAgBA,QACpBA,MAAGA,GAAEA,WAAWA,EAAEA,WACVA,GAGPA,KAAKA,WACEA,EAETA,KAAKA,GAAgBA,MACpBA,OAAOA,GAGVA,MAAMA,GAELA,KADAA,MAAKA,UACCA,IAIEL,EAAAA,UAAAA,WAAVA,WACCM,GAAIA,GAAIA,KAAMA,EAAWA,EAAEA,QAE3BA,GAAEA,YAAcA,KAChBA,EAAEA,SAAWA,IAEbA,IAAIA,GAAUA,EAAEA,QAChBA,GAAEA,SAAWA,KACVA,GACFA,EAAQA,YAETA,KAEIA,GACFA,IDVQ,QCeTA,KAAKA,OAASA,EAAgBA,QAIjCN,GA9EgCT,EAAAA,WADhCL,QAAAqB,eAAAjB,EAAA,cAAAkB,OAAA,IDmEIlB,EAAAA,WAAkBU","file":"System/Collections/Enumeration/EnumeratorBase.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n(function (deps, factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(deps, factory);\r\n    }\r\n})([\"require\", \"exports\", '../../Disposable/DisposableBase'], function (require, exports) {\r\n    var DisposableBase_1 = require('../../Disposable/DisposableBase');\r\n    var Yielder = (function () {\r\n        function Yielder() {\r\n        }\r\n        Object.defineProperty(Yielder.prototype, \"current\", {\r\n            get: function () { return this._current; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Yielder.prototype.yieldReturn = function (value) {\r\n            this._current = value;\r\n            return true;\r\n        };\r\n        Yielder.prototype.yieldBreak = function () {\r\n            this._current = null;\r\n            return false;\r\n        };\r\n        return Yielder;\r\n    })();\r\n    var EnumeratorState;\r\n    (function (EnumeratorState) {\r\n        EnumeratorState[EnumeratorState[\"Before\"] = 0] = \"Before\";\r\n        EnumeratorState[EnumeratorState[\"Running\"] = 1] = \"Running\";\r\n        EnumeratorState[EnumeratorState[\"After\"] = 2] = \"After\";\r\n    })(EnumeratorState || (EnumeratorState = {}));\r\n    var EnumeratorBase = (function (_super) {\r\n        __extends(EnumeratorBase, _super);\r\n        function EnumeratorBase(initializer, tryGetNext, disposer) {\r\n            _super.call(this);\r\n            this.initializer = initializer;\r\n            this.tryGetNext = tryGetNext;\r\n            this.disposer = disposer;\r\n            this.reset();\r\n        }\r\n        Object.defineProperty(EnumeratorBase.prototype, \"current\", {\r\n            get: function () {\r\n                return this._yielder.current;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        EnumeratorBase.prototype.reset = function () {\r\n            var _ = this;\r\n            _._yielder = new Yielder();\r\n            _._state = EnumeratorState.Before;\r\n        };\r\n        EnumeratorBase.prototype.moveNext = function () {\r\n            var _ = this;\r\n            try {\r\n                switch (_._state) {\r\n                    case EnumeratorState.Before:\r\n                        _._state = EnumeratorState.Running;\r\n                        var initializer = _.initializer;\r\n                        if (initializer)\r\n                            initializer();\r\n                    case EnumeratorState.Running:\r\n                        if (_.tryGetNext(_._yielder)) {\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            this.dispose();\r\n                            return false;\r\n                        }\r\n                    case EnumeratorState.After:\r\n                        return false;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.dispose();\r\n                throw e;\r\n            }\r\n        };\r\n        EnumeratorBase.prototype._onDispose = function () {\r\n            var _ = this, disposer = _.disposer;\r\n            _.initializer = null;\r\n            _.disposer = null;\r\n            var yielder = _._yielder;\r\n            _._yielder = null;\r\n            if (yielder)\r\n                yielder.yieldBreak();\r\n            try {\r\n                if (disposer)\r\n                    disposer();\r\n            }\r\n            finally {\r\n                this._state = EnumeratorState.After;\r\n            }\r\n        };\r\n        return EnumeratorBase;\r\n    })(DisposableBase_1.default);\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = EnumeratorBase;\r\n});\r\n//# sourceMappingURL=EnumeratorBase.js.map","/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../../Disposable/IDisposable.d.ts\"/>\r\n///<reference path=\"IEnumerator.d.ts\"/>\r\n///<reference path=\"IYield.d.ts\"/>\r\nimport Type from '../../Types';\r\nimport DisposableBase from '../../Disposable/DisposableBase'\r\n\r\n\r\n\r\nclass Yielder<T> implements IYield<T>\r\n{\r\n\tprivate _current:T;\r\n\tget current():T { return this._current; }\r\n\r\n\tyieldReturn(value:T):boolean {\r\n\t\tthis._current = value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tyieldBreak():boolean {\r\n\t\tthis._current = null;\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n// IEnumerator State\r\nenum EnumeratorState { Before, Running, After }\r\n\r\n// Naming this class EnumeratorBase to avoid collision with IE.\r\nexport default\r\nclass EnumeratorBase<T> extends DisposableBase implements IEnumerator<T>\r\n{\r\n\r\n\tprivate _yielder:Yielder<T>;\r\n\tprivate _state:EnumeratorState;\r\n\r\n\tget current():T {\r\n\t\treturn this._yielder.current;\r\n\t}\r\n\r\n\t// \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n\tconstructor(\r\n\t\tprivate initializer:() => void,\r\n\t\tprivate tryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tprivate disposer?:() => void)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\r\n\treset():void {\r\n\t\tvar _ = this;\r\n\t\t_._yielder = new Yielder<T>();\r\n\t\t_._state = EnumeratorState.Before;\r\n\t}\r\n\r\n\tmoveNext():boolean {\r\n\t\tvar _ = this;\r\n\t\ttry {\r\n\t\t\tswitch(_._state) {\r\n\t\t\t\tcase EnumeratorState.Before:\r\n\t\t\t\t\t_._state = EnumeratorState.Running;\r\n\t\t\t\t\tvar initializer = _.initializer;\r\n\t\t\t\t\tif(initializer)\r\n\t\t\t\t\t\tinitializer();\r\n\t\t\t\t// fall through\r\n\t\t\t\tcase EnumeratorState.Running:\r\n\t\t\t\t\tif(_.tryGetNext(_._yielder)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.dispose();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase EnumeratorState.After:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tthis.dispose();\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _onDispose():void {\r\n\t\tvar _ = this, disposer = _.disposer;\r\n\r\n\t\t_.initializer = null;\r\n\t\t_.disposer = null;\r\n\r\n\t\tvar yielder = _._yielder;\r\n\t\t_._yielder = null;\r\n\t\tif(yielder)\r\n\t\t\tyielder.yieldBreak();\r\n\r\n\t\ttry {\r\n\r\n\t\t\tif(disposer)\r\n\t\t\t\tdisposer();\r\n\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\t//if(this._state==EnumeratorState.Running)\r\n\t\t\tthis._state = EnumeratorState.After;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n"]}