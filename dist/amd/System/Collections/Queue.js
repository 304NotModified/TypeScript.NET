/*
 * @author electricessence / https://github.com/electricessence/
 * Based Upon: http://referencesource.microsoft.com/#System/CompMod/system/collections/generic/queue.cs
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../Compare","./Array/Utility","../Types","../Integer","./Enumeration/EnumeratorBase","./Enumeration/forEach","../Exceptions/NotImplementedException","../Exceptions/InvalidOperationException","../Exceptions/ArgumentOutOfRangeException"],function(e,t,r,a,i,n,o,u,c,p,y){function _(e,t){if(0>e)throw new y["default"](t,e,"Must be greater than zero")}function s(e,t){n["default"].assert(e,t),_(e,t)}var l=4,f=100,d=l,h=[],v=function(){function e(e){var t=this;if(t._head=0,t._tail=0,t._size=0,t._version=0,e)if(i["default"].isNumber(e)){var r=e;s(r,"capacity"),t._array=r?a.initialize(r):h}else{var n=e;t._array=a.initialize(i["default"].isArrayLike(n)?n.length:d),u["default"](n,function(e){return t.enqueue(e)}),t._version=0}else t._array=h;t._capacity=t._array.length}return Object.defineProperty(e.prototype,"count",{get:function(){return this._size},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isReadOnly",{get:function(){return!1},enumerable:!0,configurable:!0}),e.prototype.add=function(e){this.enqueue(e)},e.prototype.clear=function(){var e=this,t=e._array,r=e._head,i=e._tail,n=e._size;return i>r?a.clear(t,r,n):(a.clear(t,r,t.length-r),a.clear(t,0,i)),e._head=0,e._tail=0,e._size=0,e._version++,n},e.prototype.contains=function(e){for(var t=this,a=t._array,i=t._head,n=t._size,o=t._capacity;n-->0;){if(r.areEqual(a[i],e))return!0;i=(i+1)%o}return!1},e.prototype.copyTo=function(e,t){if(void 0===t&&(t=0),null==e)throw new Error("ArgumentNullException: array cannot be null.");s(t,"arrayIndex");var r=this,i=r._size;if(i){var n=i,o=r._array,u=r._capacity,c=r._head,p=u-c,y=i>p?p:i;return a.copyTo(o,e,c,t,y),n-=y,n>0&&a.copyTo(o,e,0,t+u-c,n),e}},e.prototype.toArray=function(){var e=this,t=e._size,r=a.initialize(t);return t?e.copyTo(r):r},e.prototype.remove=function(e){throw new c["default"]("ICollection<T>.remove is not implemented in Queue<T> since it would require destroying the underlying array to remove the item.")},e.prototype.dispose=function(){var e=this;e.clear(),e._array!=h&&(e._array.length=e._capacity=0,e._array=h),e._version=0},e.prototype.forEach=function(e){for(var t=this,r=t.toArray(),a=t._size,i=0;a>i&&e(r[i],i)!==!1;i++);},e.prototype.setCapacity=function(e){s(e,"capacity");var t=this,r=t._array,i=t._capacity;if(e!=i){var n=t._head,o=t._tail,u=t._size;if(r!=h&&e>i&&o>n)return r.length=t._capacity=e,void t._version++;var c=a.initialize(e);u>0&&(o>n?a.copyTo(r,c,n,0,u):(a.copyTo(r,c,n,0,i-n),a.copyTo(r,c,0,i-n,o))),t._array=c,t._capacity=e,t._head=0,t._tail=u==e?0:u,t._version++}},e.prototype.enqueue=function(e){var t=this,r=t._array,a=t._size,i=t._capacity;if(a==i){var n=i*f;i+l>n&&(n=i+l),t.setCapacity(n),r=t._array,i=t._capacity}var o=t._tail;r[o]=e,t._tail=(o+1)%i,t._size=a+1,t._version++},e.prototype.dequeue=function(){var e=this;if(0==e._size)throw new p["default"]("Cannot dequeue an empty queue.");var t=e._array,r=e._head,a=e._array[r];return t[r]=null,e._head=(r+1)%e._capacity,e._size--,e._version++,a},e.prototype._getElement=function(e){s(e,"index");var t=this;return t._array[(t._head+e)%t._capacity]},e.prototype.peek=function(){if(0==this._size)throw new p["default"]("Cannot call peek on an empty queue.");return this._array[this._head]},e.prototype.trimExcess=function(){var e=this,t=e._size;t<Math.floor(.9*e._capacity)&&e.setCapacity(t)},e.prototype.getEnumerator=function(){var e,t,r=this;return new o["default"](function(){t=r._version,e=0},function(a){if(t!=r._version)throw new p["default"]("Collection was changed during enumeration.");return e==r._size?a.yieldBreak():a.yieldReturn(r._getElement(e++))})},e}();Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=v});
//# sourceMappingURL=Queue.js.map
