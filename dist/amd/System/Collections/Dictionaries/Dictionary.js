/*!
 * @author electricessence / https://github.com/electricessence/
 * Original: http://linqjs.codeplex.com/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)};define(["require","exports","../../Compare","../../Types","../../Functions","./DictionaryBase","../Enumeration/EnumeratorBase","../LinkedNodeList","../../Disposable/ObjectPool"],function(e,t,r,n,u,o,i,a,s){"use strict";function l(e){return p||(p=new s["default"](20,function(){return new a["default"]})),e?(e.clear(),void p.add(e)):p.take()}function f(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function c(e){return null===e?v:e===y?n["default"].UNDEFINED:n["default"].hasMemberOfType(e,_,n["default"].FUNCTION)?e.getHashCode():typeof e.toString==n["default"].FUNCTION?e.toString():Object.prototype.toString.call(e)}var p,y=void 0,d=function(){function e(e,t,r,n){this.key=e,this.value=t,this.previous=r,this.next=n}return e}(),v="null",_="getHashCode",h=function(e){function t(t){void 0===t&&(t=u["default"].Identity),e.call(this),this._keyComparer=t,this._entries=l(),this._buckets={}}return __extends(t,e),t.prototype.getCount=function(){return this._entries.unsafeCount},t.prototype._getBucket=function(e,t){if(null===e||e===y||!t&&!this.getCount())return null;var r=this._buckets,n=f(r,e)?r[e]:y;return t&&!n&&(r[e]=n=l()),n},t.prototype._getBucketEntry=function(e,t,r){if(null===e||e===y||!this.getCount())return null;var n=this,u=n._keyComparer,o=u(e);return r||(r=n._getBucket(t||c(o))),r&&r.find(function(e){return u(e.key)===o})},t.prototype._getEntry=function(e){var t=this._getBucketEntry(e);return t&&t.value},t.prototype.getValue=function(e){var t=this._getEntry(e);return t?t.value:y},t.prototype._setValueInternal=function(e,t){var n=this,u=n._buckets,o=n._entries,i=n._keyComparer,a=i(e),s=c(a),f=n._getBucket(s),p=f&&n._getBucketEntry(e,s,f);if(p){if(t!==y){var v=p.value.value;return p.value.value=t,!r.areEqual(t,v)}var _=f.removeNode(p),h=o.removeNode(p.value);if(_&&!f.count&&(delete u[s],l(f),f=null),_!==h)throw"Entries and buckets are out of sync.";if(_)return!0}else if(t!==y){f||(f=n._getBucket(s,!0));var k=new d(e,t);return o.addNode(k),f.addNode(new d(e,k)),!0}return!1},t.prototype._clearInternal=function(){var e=this,t=e._buckets;for(var r in t)if(t.hasOwnProperty(r)){var n=t[r];delete t[r],l(n)}return e._entries.clear()},t.prototype.getEnumerator=function(){var e,t,r=this;return new i["default"](function(){e=r._version,t=r._entries.first},function(n){if(null!=t){r.assertVersion(e);var u={key:t.key,value:t.value};return t=t.next,n.yieldReturn(u)}return n.yieldBreak()})},t.prototype.getKeys=function(){for(var e=this,t=[],r=e._entries.first;r;)t.push(r.key),r=r.next;return t},t.prototype.getValues=function(){for(var e=this,t=[],r=e._entries.first;r;)t.push(r.value),r=r.next;return t},t}(o["default"]);Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=h});
//# sourceMappingURL=Dictionary.js.map
