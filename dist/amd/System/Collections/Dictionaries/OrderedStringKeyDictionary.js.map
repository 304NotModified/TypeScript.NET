{"version":3,"sources":["System/Collections/Dictionaries/OrderedStringKeyDictionary.js","System/Collections/Dictionaries/OrderedStringKeyDictionary.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","ArrayUtility","StringKeyDictionary_1","ArgumentOutOfRangeException_1","OrderedStringKeyDictionary","_super","OrderedStringKeyDictionary.constructor","OrderedStringKeyDictionary.indexOfKey","OrderedStringKeyDictionary.getValueByIndex","OrderedStringKeyDictionary.setValue","OrderedStringKeyDictionary.setByIndex","OrderedStringKeyDictionary.importValues","OrderedStringKeyDictionary.setValues","OrderedStringKeyDictionary.removeByIndex","get","OrderedStringKeyDictionary.keys","enumerable","configurable","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,mBAAoB,wBAAyB,gDAAiD,SAAUC,EAASC,EAASC,EAAcC,EAAuBC,GCA7L,GAAAC,GAAA,SAAAC,GAQCD,QAAAA,KAECE,EAAAA,KAAAA,MAJOA,KAAAA,UA2ETF,MA/EQA,WAAAA,EAAAA,GAWPA,EAAAA,UAAAA,WAAAA,SAAWA,GAEVG,MAAOA,MAAKA,OAAOA,QAAQA,EAAKA,IAGjCH,EAAAA,UAAAA,gBAAAA,SAAgBA,GAEfI,MAAOA,MAAKA,SAASA,KAAKA,OAAOA,KAIlCJ,EAAAA,UAAAA,SAAAA,SAASA,EAAYA,EAAcA,GAElCK,GAAIA,GAAIA,KAAMA,EAA6BA,IAApBA,EAAEA,WAAWA,EAMpCA,OALIA,IAAmBA,SAARA,IAAqBA,EAE5BA,GAAkBA,SAARA,IAAsBA,GACvCA,EAAaA,OAAOA,EAAEA,OAAQA,GAF9BA,EAAEA,OAAOA,KAAKA,GAIRA,EAAAA,UAAMA,SAAQA,KAAAA,KAACA,EAAKA,IAG5BL,EAAAA,UAAAA,WAAAA,SAAWA,EAAcA,GAExBM,GAAIA,GAAIA,KAAMA,EAAQA,EAAEA,MACxBA,IAASA,EAANA,EACFA,KAAMA,IAAIA,GAAAA,WAA4BA,QAASA,EAAOA,qBACvDA,IAAGA,GAAOA,EAAMA,OACfA,KAAMA,IAAIA,GAAAA,WAA4BA,QAASA,EAAOA,6BACvDA,OAAOA,GAAEA,SAASA,EAAMA,GAAQA,IAIjCN,EAAAA,UAAAA,aAAAA,SAAaA,GAEZO,GAAIA,GAAIA,IACRA,OAAOA,GAAEA,aACRA,WAGCA,IAAIA,GADAA,IAAkBA,EACdA,EAAIA,EAAGA,EAAEA,EAAOA,OAAQA,IAE5BA,EAAEA,WAAWA,EAAGA,EAAOA,MACzBA,GAAUA,EAEZA,OAAOA,MAOVP,EAAAA,UAAAA,UAAAA,WDvBW,ICuBDQ,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,EAETA,OAAOA,MAAKA,aAAaA,IAG1BR,EAAAA,UAAAA,cAAAA,SAAcA,GAEbS,MAAOA,MAAKA,WAAWA,EAAOA,SAG/BT,OAAAA,eAAIA,EAAAA,UAAAA,QDxBOU,ICwBXV,WAECW,GAAIA,GAAIA,IACRA,OAAOA,GAAEA,OAAOA,OAAOA,SAAAA,GAAMA,MAAAA,GAAEA,YAAYA,MDvBjCC,YAAY,EACZC,cAAc,ICyB1Bb,GA/EQF,EAAAA,WAFRN,QAAAsB,eAAAlB,EAAA,cAAAmB,OAAA,ID6DInB,EAAAA,WAAkBI","file":"System/Collections/Dictionaries/OrderedStringKeyDictionary.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n(function (deps, factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(deps, factory);\r\n    }\r\n})([\"require\", \"exports\", '../Array/Utility', './StringKeyDictionary', '../../Exceptions/ArgumentOutOfRangeException'], function (require, exports) {\r\n    var ArrayUtility = require('../Array/Utility');\r\n    var StringKeyDictionary_1 = require('./StringKeyDictionary');\r\n    var ArgumentOutOfRangeException_1 = require('../../Exceptions/ArgumentOutOfRangeException');\r\n    var OrderedStringKeyDictionary = (function (_super) {\r\n        __extends(OrderedStringKeyDictionary, _super);\r\n        function OrderedStringKeyDictionary() {\r\n            _super.call(this);\r\n            this._order = [];\r\n        }\r\n        OrderedStringKeyDictionary.prototype.indexOfKey = function (key) {\r\n            return this._order.indexOf(key, 0);\r\n        };\r\n        OrderedStringKeyDictionary.prototype.getValueByIndex = function (index) {\r\n            return this.getValue(this._order[index]);\r\n        };\r\n        OrderedStringKeyDictionary.prototype.setValue = function (key, value, keepIndex) {\r\n            var _ = this, exists = _.indexOfKey(key) != -1;\r\n            if (!exists && (value !== undefined || keepIndex))\r\n                _._order.push(key);\r\n            else if (exists && value === undefined && !keepIndex)\r\n                ArrayUtility.remove(_._order, key);\r\n            return _super.prototype.setValue.call(this, key, value);\r\n        };\r\n        OrderedStringKeyDictionary.prototype.setByIndex = function (index, value) {\r\n            var _ = this, order = _._order;\r\n            if (index < 0)\r\n                throw new ArgumentOutOfRangeException_1.default('index', index, 'Is less than zero.');\r\n            if (index >= order.length)\r\n                throw new ArgumentOutOfRangeException_1.default('index', index, 'Is greater than the count.');\r\n            return _.setValue(order[index], value);\r\n        };\r\n        OrderedStringKeyDictionary.prototype.importValues = function (values) {\r\n            var _ = this;\r\n            return _.handleUpdate(function () {\r\n                var changed = false;\r\n                for (var i = 0; i < values.length; i++) {\r\n                    if (_.setByIndex(i, values[i]))\r\n                        changed = true;\r\n                }\r\n                return changed;\r\n            });\r\n        };\r\n        OrderedStringKeyDictionary.prototype.setValues = function () {\r\n            var values = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                values[_i - 0] = arguments[_i];\r\n            }\r\n            return this.importValues(values);\r\n        };\r\n        OrderedStringKeyDictionary.prototype.removeByIndex = function (index) {\r\n            return this.setByIndex(index, undefined);\r\n        };\r\n        Object.defineProperty(OrderedStringKeyDictionary.prototype, \"keys\", {\r\n            get: function () {\r\n                var _ = this;\r\n                return _._order.filter(function (key) { return _.containsKey(key); });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return OrderedStringKeyDictionary;\r\n    })(StringKeyDictionary_1.default);\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = OrderedStringKeyDictionary;\r\n});\r\n//# sourceMappingURL=OrderedStringKeyDictionary.js.map","/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport * as ArrayUtility from '../Array/Utility';\r\nimport StringKeyDictionary from './StringKeyDictionary';\r\nimport ArgumentOutOfRangeException from '../../Exceptions/ArgumentOutOfRangeException'\r\n\r\nexport default\r\nclass OrderedStringKeyDictionary<TValue>\r\nextends StringKeyDictionary<TValue> implements IOrderedDictionary<string, TValue>\r\n{\r\n\r\n\t// noinspection JSMismatchedCollectionQueryUpdate\r\n\tprivate _order:string[] = []; // Maintains indexes.\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tindexOfKey(key:string):number\r\n\t{\r\n\t\treturn this._order.indexOf(key, 0);\r\n\t}\r\n\r\n\tgetValueByIndex(index:number):TValue\r\n\t{\r\n\t\treturn this.getValue(this._order[index]);\r\n\t}\r\n\r\n\t// adding keepIndex allows for clearing a value while still retaining it's index.\r\n\tsetValue(key:string, value:TValue, keepIndex?:boolean):boolean\r\n\t{\r\n\t\tvar _ = this, exists = _.indexOfKey(key)!= -1;\r\n\t\tif(!exists && (value!==undefined || keepIndex))\r\n\t\t\t_._order.push(key);\r\n\t\telse if(exists && value===undefined && !keepIndex)\r\n\t\t\tArrayUtility.remove(_._order, key);\r\n\r\n\t\treturn super.setValue(key, value);\r\n\t}\r\n\r\n\tsetByIndex(index:number, value:TValue):boolean\r\n\t{\r\n\t\tvar _ = this, order = _._order;\r\n\t\tif(index<0)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is less than zero.');\r\n\t\tif(index>=order.length)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is greater than the count.');\r\n\t\treturn _.setValue(order[index], value);\r\n\t}\r\n\r\n\t// importValues([x,y,z]);\r\n\timportValues(values:TValue[]):boolean\r\n\t{\r\n\t\tvar _ = this;\r\n\t\treturn _.handleUpdate(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvar changed:boolean = false;\r\n\t\t\t\tfor(let i = 0; i<values.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_.setByIndex(i, values[i]))\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn changed;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t// setValues(x,y,z);\r\n\tsetValues(...values:TValue[]):boolean\r\n\t{\r\n\t\treturn this.importValues(values);\r\n\t}\r\n\r\n\tremoveByIndex(index:number):boolean\r\n\t{\r\n\t\treturn this.setByIndex(index, undefined);\r\n\t}\r\n\r\n\tget keys():string[]\r\n\t{\r\n\t\tvar _ = this;\r\n\t\treturn _._order.filter(key=> _.containsKey(key));\r\n\t}\r\n\r\n}\r\n"]}