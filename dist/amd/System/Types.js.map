{"version":3,"sources":["System/Types.ts","System/Types.js"],"names":["define","require","exports","VOID0","_BOOLEAN","_NUMBER","_STRING","_OBJECT","_UNDEFINED","_FUNCTION","typeInfoRegistry","TypeInfo","TypeInfo.constructor","TypeInfo.member","TypeInfo.getFor","Type","Type.isBoolean","Type.isNumber","Type.isTrueNaN","Type.isString","Type.isPrimitive","Type.isFunction","Type.isObject","Type.numberOrNaN","Type.of","Type.hasMember","Type.hasMemberOfType","Type.isArrayLike","Object","freeze","defineProperty","value"],"mappings":"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","file":"System/Types.js","sourcesContent":["/*\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n///<reference path=\"Primitive.d.ts\"/>\r\n///<reference path=\"Collections/Array/IArray.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\n\r\nconst\r\n\tVOID0:any = void(0),\r\n\t_BOOLEAN:string = typeof true,\r\n\t_NUMBER:string  = typeof 0,\r\n\t_STRING:string  = typeof \"\",\r\n\t_OBJECT:string  = typeof {},\r\n\t_UNDEFINED:string = typeof VOID0,\r\n\t_FUNCTION:string = typeof function() {};\r\n\r\n// Only used for primitives.\r\nvar typeInfoRegistry:{[key:string]:TypeInfo} = {};\r\n\r\n/**\r\n * Exposes easy access to type information including inquiring about members.\r\n */\r\nexport class TypeInfo\r\n{\r\n\t// Not retained for primitives. Since they have no members.\r\n\tprivate target:any;\r\n\r\n\ttype:string;\r\n\r\n\tisBoolean:boolean;\r\n\tisNumber:boolean;\r\n\tisFinite:boolean;\r\n\tisValidNumber:boolean;\r\n\tisString:boolean;\r\n\tisTrueNaN:boolean;\r\n\tisObject:boolean;\r\n\tisFunction:boolean;\r\n\tisUndefined:boolean;\r\n\tisNull:boolean;\r\n\tisNullOrUndefined:boolean;\r\n\tisPrimitive:boolean;\r\n\r\n\tconstructor(target:any)\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.isBoolean = false;\r\n\t\t_.isNumber = false;\r\n\t\t_.isString = false;\r\n\t\t_.isTrueNaN = false;\r\n\t\t_.isObject = false;\r\n\t\t_.isFunction = false;\r\n\t\t_.isUndefined = false;\r\n\t\t_.isNull = false;\r\n\t\t_.isPrimitive = false;\r\n\r\n\t\tswitch(_.type = typeof target)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\t\t_.isBoolean = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _NUMBER:\r\n\t\t\t\t_.isNumber = true;\r\n\t\t\t\t_.isTrueNaN = isNaN(target);\r\n\t\t\t\t_.isFinite = isFinite(target);\r\n\t\t\t\t_.isValidNumber = !_.isTrueNaN;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _STRING:\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\tif(target===null)\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isNull = true;\r\n\t\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isObject = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\t_.isUndefined = true;\r\n\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Fatal type failure.  Unknown type: \" + _.type;\r\n\t\t}\r\n\r\n\t\tObject.freeze(_);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any member or non-member,\r\n\t * where non-members are of type undefined.\r\n\t * @param name\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tmember(name:string):TypeInfo\r\n\t{\r\n\t\tvar t = this.target;\r\n\t\treturn TypeInfo.getFor(\r\n\t\t\tt && (name)in(t)\r\n\t\t\t\t? t[name]\r\n\t\t\t\t: undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any target object.\r\n\t * If the target object is of a primitive type, it returns the TypeInfo instance assigned to that type.\r\n\t * @param target\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tstatic getFor(target:any):TypeInfo\r\n\t{\r\n\t\tvar type:string = typeof target;\r\n\t\tswitch(type)\r\n\t\t{\r\n\t\t\tcase _OBJECT:\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\treturn new TypeInfo(target);\r\n\t\t}\r\n\t\tvar info = typeInfoRegistry[type];\r\n\t\tif(!info) typeInfoRegistry[type] = info = new TypeInfo(target);\r\n\t\treturn info;\r\n\t}\r\n\r\n}\r\n\r\nmodule Type\r\n{\r\n\t/**\r\n\t * typeof true\r\n\t * @type {string}\r\n\t */\r\n\texport const BOOLEAN:string = _BOOLEAN;\r\n\r\n\t/**\r\n\t * typeof 0\r\n\t * @type {string}\r\n\t */\r\n\texport const NUMBER:string = _NUMBER;\r\n\r\n\t/**\r\n\t * typeof \"\"\r\n\t * @type {string}\r\n\t */\r\n\texport const STRING:string = _STRING;\r\n\r\n\t/**\r\n\t * typeof {}\r\n\t * @type {string}\r\n\t */\r\n\texport const OBJECT:string = _OBJECT;\r\n\r\n\r\n\t/**\r\n\t * typeof undefined\r\n\t * @type {string}\r\n\t */\r\n\texport const UNDEFINED:string = _UNDEFINED;\r\n\r\n\t/**\r\n\t * typeof function\r\n\t * @type {string}\r\n\t */\r\n\texport const FUNCTION:string = _FUNCTION;\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a boolean.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isBoolean(value:any):value is boolean\r\n\t{\r\n\t\treturn typeof value===_BOOLEAN;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a number.\r\n\t * @param value\r\n\t * @param allowNaN Default is true.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isNumber(value:any, allowNaN?:boolean):value is number\r\n\t{\r\n\t\tif(allowNaN===VOID0) allowNaN = true;\r\n\t\treturn typeof value===_NUMBER && (allowNaN || !isNaN(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if is a number and is NaN.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isTrueNaN(value:any):value is number\r\n\t{\r\n\t\treturn typeof value===_NUMBER && isNaN(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a string.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isString(value:any):value is string\r\n\t{\r\n\t\treturn typeof value===_STRING;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value is a boolean, string, number, null, or undefined.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isPrimitive(value:any):value is Primitive\r\n\t{\r\n\t\tvar t = typeof value;\r\n\t\tswitch(t)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\tcase _STRING:\r\n\t\t\tcase _NUMBER:\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\treturn true;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\treturn value===null;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a function.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isFunction(value:any):value is Function\r\n\t{\r\n\t\treturn typeof value===_FUNCTION;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is an object.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isObject(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_OBJECT;\r\n\t}\r\n\r\n\t/**\r\n\t * Guarantees a number value or NaN instead.\r\n\t * @param value\r\n\t * @returns {number}\r\n\t */\r\n\texport function numberOrNaN(value:any):number\r\n\t{\r\n\t\treturn isNaN(value) ? NaN : value;\r\n\t}\r\n\r\n\texport function of(target:any):TypeInfo\r\n\t{\r\n\t\treturn TypeInfo.getFor(target);\r\n\t}\r\n\r\n\texport function hasMember(value:any, property:string):boolean\r\n\t{\r\n\t\treturn value && !isPrimitive(value) && (property)in(value);\r\n\t}\r\n\r\n\texport function hasMemberOfType<T>(instance:any, property:string, type:string):instance is T\r\n\t{\r\n\t\treturn hasMember(instance, property) && typeof(instance[property])===type;\r\n\t}\r\n\r\n\texport function isArrayLike<T>(instance:any):instance is IArray<T>\r\n\t{\r\n\t\treturn instance instanceof Array || hasMember(instance, \"length\");\r\n\t}\r\n}\r\n\r\nObject.freeze(Type);\r\n\r\nexport default Type;\r\n","///<reference path=\"Primitive.d.ts\"/>\r\n///<reference path=\"Collections/Array/IArray.d.ts\"/>\r\n'use strict';\r\n(function (deps, factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(deps, factory);\r\n    }\r\n})([\"require\", \"exports\"], function (require, exports) {\r\n    var VOID0 = void (0), _BOOLEAN = typeof true, _NUMBER = typeof 0, _STRING = typeof \"\", _OBJECT = typeof {}, _UNDEFINED = typeof VOID0, _FUNCTION = typeof function () { };\r\n    var typeInfoRegistry = {};\r\n    var TypeInfo = (function () {\r\n        function TypeInfo(target) {\r\n            var _ = this;\r\n            _.isBoolean = false;\r\n            _.isNumber = false;\r\n            _.isString = false;\r\n            _.isTrueNaN = false;\r\n            _.isObject = false;\r\n            _.isFunction = false;\r\n            _.isUndefined = false;\r\n            _.isNull = false;\r\n            _.isPrimitive = false;\r\n            switch (_.type = typeof target) {\r\n                case _BOOLEAN:\r\n                    _.isBoolean = true;\r\n                    _.isPrimitive = true;\r\n                    break;\r\n                case _NUMBER:\r\n                    _.isNumber = true;\r\n                    _.isTrueNaN = isNaN(target);\r\n                    _.isFinite = isFinite(target);\r\n                    _.isValidNumber = !_.isTrueNaN;\r\n                    _.isPrimitive = true;\r\n                    break;\r\n                case _STRING:\r\n                    _.isString = true;\r\n                    _.isPrimitive = true;\r\n                    break;\r\n                case _OBJECT:\r\n                    _.target = target;\r\n                    if (target === null) {\r\n                        _.isNull = true;\r\n                        _.isNullOrUndefined = true;\r\n                        _.isPrimitive = true;\r\n                    }\r\n                    else {\r\n                        _.isObject = true;\r\n                    }\r\n                    break;\r\n                case _FUNCTION:\r\n                    _.target = target;\r\n                    _.isString = true;\r\n                    break;\r\n                case _UNDEFINED:\r\n                    _.isUndefined = true;\r\n                    _.isNullOrUndefined = true;\r\n                    _.isPrimitive = true;\r\n                    break;\r\n                default:\r\n                    throw \"Fatal type failure.  Unknown type: \" + _.type;\r\n            }\r\n            Object.freeze(_);\r\n        }\r\n        TypeInfo.prototype.member = function (name) {\r\n            var t = this.target;\r\n            return TypeInfo.getFor(t && (name) in (t)\r\n                ? t[name]\r\n                : undefined);\r\n        };\r\n        TypeInfo.getFor = function (target) {\r\n            var type = typeof target;\r\n            switch (type) {\r\n                case _OBJECT:\r\n                case _FUNCTION:\r\n                    return new TypeInfo(target);\r\n            }\r\n            var info = typeInfoRegistry[type];\r\n            if (!info)\r\n                typeInfoRegistry[type] = info = new TypeInfo(target);\r\n            return info;\r\n        };\r\n        return TypeInfo;\r\n    })();\r\n    exports.TypeInfo = TypeInfo;\r\n    var Type;\r\n    (function (Type) {\r\n        Type.BOOLEAN = _BOOLEAN;\r\n        Type.NUMBER = _NUMBER;\r\n        Type.STRING = _STRING;\r\n        Type.OBJECT = _OBJECT;\r\n        Type.UNDEFINED = _UNDEFINED;\r\n        Type.FUNCTION = _FUNCTION;\r\n        function isBoolean(value) {\r\n            return typeof value === _BOOLEAN;\r\n        }\r\n        Type.isBoolean = isBoolean;\r\n        function isNumber(value, allowNaN) {\r\n            if (allowNaN === VOID0)\r\n                allowNaN = true;\r\n            return typeof value === _NUMBER && (allowNaN || !isNaN(value));\r\n        }\r\n        Type.isNumber = isNumber;\r\n        function isTrueNaN(value) {\r\n            return typeof value === _NUMBER && isNaN(value);\r\n        }\r\n        Type.isTrueNaN = isTrueNaN;\r\n        function isString(value) {\r\n            return typeof value === _STRING;\r\n        }\r\n        Type.isString = isString;\r\n        function isPrimitive(value) {\r\n            var t = typeof value;\r\n            switch (t) {\r\n                case _BOOLEAN:\r\n                case _STRING:\r\n                case _NUMBER:\r\n                case _UNDEFINED:\r\n                    return true;\r\n                case _OBJECT:\r\n                    return value === null;\r\n            }\r\n            return false;\r\n        }\r\n        Type.isPrimitive = isPrimitive;\r\n        function isFunction(value) {\r\n            return typeof value === _FUNCTION;\r\n        }\r\n        Type.isFunction = isFunction;\r\n        function isObject(value) {\r\n            return typeof value === _OBJECT;\r\n        }\r\n        Type.isObject = isObject;\r\n        function numberOrNaN(value) {\r\n            return isNaN(value) ? NaN : value;\r\n        }\r\n        Type.numberOrNaN = numberOrNaN;\r\n        function of(target) {\r\n            return TypeInfo.getFor(target);\r\n        }\r\n        Type.of = of;\r\n        function hasMember(value, property) {\r\n            return value && !isPrimitive(value) && (property) in (value);\r\n        }\r\n        Type.hasMember = hasMember;\r\n        function hasMemberOfType(instance, property, type) {\r\n            return hasMember(instance, property) && typeof (instance[property]) === type;\r\n        }\r\n        Type.hasMemberOfType = hasMemberOfType;\r\n        function isArrayLike(instance) {\r\n            return instance instanceof Array || hasMember(instance, \"length\");\r\n        }\r\n        Type.isArrayLike = isArrayLike;\r\n    })(Type || (Type = {}));\r\n    Object.freeze(Type);\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = Type;\r\n});\r\n//# sourceMappingURL=Types.js.map"]}