/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../Types"],function(r,e,t){"use strict";function n(r){var e=0;if(0==r.length)return e;for(var t=0,n=r.length;n>t;t++){var a=r.charCodeAt(t);e=(e<<5)-e+a,e|=0}return e}function a(r,t){var n=e.EMPTY;if(!isNaN(t))for(var a=0;t>a;a++)n+=r;return n}function i(r,t){if(void 0===t&&(t=1),Array.isArray(r)){for(var n=e.EMPTY,i=0,u=r;i<u.length;i++){var f=u[i];n+=String.fromCharCode(f)}return n}return a(String.fromCharCode(r),t)}function u(r){return r.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function f(r,t,n){if(t===e.EMPTY)return r;if(t){var a=u(Array.isArray(t)?t.join():t);return r.replace(new RegExp("^["+a+"]+|["+a+"]+$","g"+(n?"i":"")),e.EMPTY)}return r.replace(/^\s+|\s+$/g,e.EMPTY)}function o(r){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return s(r,e)}function s(r,e){var n=Array.isArray(e);return r.replace(/\{([^{}]*)\}/g,function(r,a){var i=a;if(n){var u=parseInt(a);isNaN(u)||(i=u)}var f=e[i];switch(typeof f){case t["default"].STRING:case t["default"].NUMBER:case t["default"].BOOLEAN:return f;default:return f&&t["default"].hasMemberOfType(f,"toString",t["default"].FUNCTION)?f.toString():r}})}function l(r,e){return t["default"].isString(r)&&e?r===e?!0:e.length<r.length?null:void 0:!1}function c(r,e){var n=l(r,e);return t["default"].isBoolean(n)?n:0==r.indexOf(e)}function g(r,e){var n=l(r,e);return t["default"].isBoolean(n)?n:r.lastIndexOf(e)==r.length-e.length}e.EMPTY="",e.getHashCode=n,e.repeat=a,e.fromChars=i,e.escapeRegExp=u,e.trim=f,e.format=o,e.supplant=s,e.startsWith=c,e.endsWith=g});
//# sourceMappingURL=Utility.js.map
