/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../Types"],function(r,e,t){"use strict";function a(r){var e=0;if(0==r.length)return e;for(var t=0,a=r.length;a>t;t++){var n=r.charCodeAt(t);e=(e<<5)-e+n,e|=0}return e}function n(r,t){var a=e.EMPTY;if(!isNaN(t))for(var n=0;t>n;n++)a+=r;return a}function f(r,t){if(void 0===t&&(t=1),Array.isArray(r)){for(var a=e.EMPTY,f=0,i=r;f<i.length;f++){var u=i[f];a+=String.fromCharCode(u)}return a}return n(String.fromCharCode(r),t)}function i(r){return r.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function u(r,t,a){if(t===e.EMPTY)return r;if(t){var n=i(Array.isArray(t)?t.join():t);return r.replace(new RegExp("^["+n+"]+|["+n+"]+$","g"+(a?"i":"")),e.EMPTY)}return r.replace(/^\s+|\s+$/g,e.EMPTY)}function o(r){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return s(r,e)}function s(r,e){var a=Array.isArray(e);return r.replace(/\{([^{}]*)\}/g,function(r,n){var f=n;if(a){var i=parseInt(n);isNaN(i)||(f=i)}var u=e[f];switch(typeof u){case t["default"].STRING:case t["default"].NUMBER:case t["default"].BOOLEAN:return u;default:return u&&t["default"].hasMemberOfType(u,"toString",t["default"].FUNCTION)?u.toString():r}})}e.EMPTY="",e.getHashCode=a,e.repeat=n,e.fromChars=f,e.escapeRegExp=i,e.trim=u,e.format=o,e.supplant=s});
//# sourceMappingURL=Utility.js.map
