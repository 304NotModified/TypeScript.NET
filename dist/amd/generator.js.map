{"version":3,"sources":["generator.js","generator.ts"],"names":["define","require","exports","generator","thisArg","body","verb","n","v","step","op","f","TypeError","_","y","t","call","done","value","label","ops","pop","trys","length","push","e","sent","next","throw","return"],"mappings":";;;;AAIAA,QAAQ,UAAW,WAAY,SAAUC,EAASC,GAC9C,YCAJ,SAAAC,GAA0BC,EAAaC,GAatC,QAAAC,GAAcC,GAAS,MAAO,UAACC,GAAU,MAAAC,IAAMF,EAAGC,KAElD,QAAAC,GAAcC,GAEb,GAAGC,EAAG,KAAM,IAAIC,WAAU,kCAC1B,MAAMC,GAEL,IAGC,GAAGF,EAAI,EAAGG,IAAMC,EAAID,EAAU,EAARJ,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAcK,EACzEA,EAAEC,KAAKF,EAAGJ,EAAG,KAAKO,KAAM,MAAOF,EAGnC,QADGD,EAAI,EAAGC,IAAGL,GAAM,EAAGK,EAAEG,QACjBR,EAAG,IAET,IAAK,GACL,IAAK,GACJK,EAAIL,CACJ,MACD,KAAK,GAEJ,MADAG,GAAEM,SACMD,MAAOR,EAAG,GAAIO,MAAM,EAC7B,KAAK,GACJJ,EAAEM,QACFL,EAAIJ,EAAG,GACPA,GAAM,EACN,SACD,KAAK,GACJA,EAAKG,EAAEO,IAAIC,MACXR,EAAES,KAAKD,KACP,SACD,SAEC,GAAKN,EAAIF,EAAES,OAAMP,EACbA,EAAEQ,OAAO,GAAKR,EAAEA,EAAEQ,OAAS,MAAgB,IAARb,EAAG,IAAkB,IAARA,EAAG,IACvD,CACCG,EAAI,CACJ,UAED,GAAW,IAARH,EAAG,MAAYK,GAAML,EAAG,GAAGK,EAAE,IAAML,EAAG,GAAGK,EAAE,IAC9C,CACCF,EAAEM,MAAQT,EAAG,EACb,OAED,GAAW,IAARA,EAAG,IAAUG,EAAEM,MAAMJ,EAAE,GAC1B,CACCF,EAAEM,MAAQJ,EAAE,GACZA,EAAIL,CACJ,OAED,GAAGK,GAAKF,EAAEM,MAAMJ,EAAE,GAClB,CACCF,EAAEM,MAAQJ,EAAE,GACZF,EAAEO,IAAII,KAAKd,EACX,OAEEK,EAAE,IAAIF,EAAEO,IAAIC,MACfR,EAAES,KAAKD,KACP,UAEFX,EAAKL,EAAKW,KAAKZ,EAASS,GAEzB,MAAMY,GAELf,GAAM,EAAGe,GACTX,EAAI,EDRQ,QCWXH,EAAII,EAAI,EAGX,GAAW,EAARL,EAAG,GAAQ,KAAMA,GAAG,EACvB,QAAQQ,MAAOR,EAAG,GAAKA,EAAG,GAAK,OAAQO,MAAM,GApF9C,GAAIN,GAAOG,EAAOC,EACdF,GACHM,MAAO,EACPO,KAAM,WAEL,GAAU,EAAPX,EAAE,GAAQ,KAAMA,GAAE,EACrB,OAAOA,GAAE,IACPO,QAAiBF,OAGrB,QAAQO,KAAMrB,EAAK,GAAIsB,QAAStB,EAAK,GAAIuB,SAAUvB,EAAK,IAZzDJ,EAAAC,UAAAA","file":"generator.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    function generator(thisArg, body) {\n        var f, y, t;\n        var _ = {\n            label: 0,\n            sent: function () {\n                if (t[0] & 1)\n                    throw t[1];\n                return t[1];\n            }, trys: [], ops: []\n        };\n        return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_) {\n                try {\n                    if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t\n                        = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [0, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t\n                                = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    exports.generator = generator;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nexport function generator(thisArg:any, body:Function)\r\n{\r\n\tlet f:any, y:any, t:any;\r\n\tlet _:any = {\r\n\t\tlabel: 0,\r\n\t\tsent: () =>\r\n\t\t{ //noinspection JSBitwiseOperatorUsage\r\n\t\t\tif(t[0] & 1) throw t[1];\r\n\t\t\treturn t[1];\r\n\t\t}, trys: <any[]>[], ops: <any[]>[]\r\n\t};\r\n\r\n\treturn {next: verb(0), \"throw\": verb(1), \"return\": verb(2)};\r\n\tfunction verb(n:any) { return (v:any) => step([n, v]); }\r\n\r\n\tfunction step(op:any)\r\n\t{\r\n\t\tif(f) throw new TypeError(\"Generator is already executing.\");\r\n\t\twhile(_)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t//noinspection JSBitwiseOperatorUsage,CommaExpressionJS\r\n\t\t\t\tif(f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t\r\n\t\t\t\t\t\t= t.call(y, op[1])).done) return t;\r\n\t\t\t\t//noinspection CommaExpressionJS\r\n\t\t\t\tif(y = 0, t) op = [0, t.value];\r\n\t\t\t\tswitch(op[0])\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tt = op;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t_.label++;\r\n\t\t\t\t\t\treturn {value: op[1], done: false};\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t_.label++;\r\n\t\t\t\t\t\ty = op[1];\r\n\t\t\t\t\t\top = [0];\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\top = _.ops.pop();\r\n\t\t\t\t\t\t_.trys.pop();\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t//noinspection CommaExpressionJS\r\n\t\t\t\t\t\tif(!(t = _.trys, t\r\n\t\t\t\t\t\t\t\t= t.length>0 && t[t.length - 1]) && (op[0]===6 || op[0]===2))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_ = 0;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(op[0]===3 && (!t || (op[1]>t[0] && op[1]<t[3])))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.label = op[1];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(op[0]===6 && _.label<t[1])\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.label = t[1];\r\n\t\t\t\t\t\t\tt = op;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(t && _.label<t[2])\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.label = t[2];\r\n\t\t\t\t\t\t\t_.ops.push(op);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(t[2]) _.ops.pop();\r\n\t\t\t\t\t\t_.trys.pop();\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\top = body.call(thisArg, _);\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\top = [6, e];\r\n\t\t\t\ty = 0;\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{ f = t = 0; }\r\n\t\t}\r\n\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\tif(op[0] & 5) throw op[1];\r\n\t\treturn {value: op[0] ? op[1] : void 0, done: true};\r\n\t}\r\n}\r\n"]}