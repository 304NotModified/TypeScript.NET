{"version":3,"sources":["awaiter.js","awaiter.ts"],"names":["define","require","exports","awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","value","step","g","next","e","rejected","result","done","then","apply","factory","UserPromise","Object","defineProperty"],"mappings":";;;;AAIAA,QAAQ,UAAW,WAAY,SAAUC,EAASC,GAC9C,YCKJ,SAAAC,GACCC,EACAC,EACAC,EACAC,GAEA,IAAID,EAAG,KAAM,yGACb,OAAO,IAAIA,GAAE,SAACE,EAASC,GAKtB,QAAAC,GAAmBC,GAElB,IACEC,EAAKC,EAAEC,KAAKH,IACd,MAAMI,GACJN,EAAOM,IAGV,QAAAC,GAAkBL,GAEjB,IACEC,EAAKC,EAAE,SAASF,IAClB,MAAMI,GACJN,EAAOM,IAGV,QAAAH,GAAcK,GAEbA,EAAOC,KACJV,EAAQS,EAAON,OACf,GAAIL,GAAE,SAAAE,GAAaA,EAAQS,EAAON,SAAWQ,KAAKT,EAAWM,GAvBjE,GAAMH,GAAIN,EAAYA,EAAUa,MAAMhB,EAASC,EAC/CO,GAAKC,EAAEC,UAVTZ,EAAAC,QAAAA,EAqCA,SAAcA,GAEb,QAAAkB,GAAwBC,GAEvB,MAAO,UAAClB,EAAaC,EAAkBC,EAA0BC,GAEhEJ,EAAQC,EAASC,EAAYC,GAAKgB,EAAaf,IAJjCJ,EAAAkB,QAAOA,GAFVlB,EAAAD,EAAAC,UAAAD,EAAAC,aDHVoB,OAAOC,eAAetB,EAAS,cAAgBS,OAAO,ICc1DT,EAAAA,WAAeC","file":"awaiter.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    function awaiter(thisArg, _arguments, P, generator) {\n        if (!P)\n            throw \"Must provide Promise constructor.  Try injecting Promise using awaiter.factory(PromiseConstructorLike).\";\n        return new P(function (resolve, reject) {\n            var g = generator = generator.apply(thisArg, _arguments);\n            step(g.next());\n            function fulfilled(value) {\n                try {\n                    step(g.next(value));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(g[\"throw\"](value));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done\n                    ? resolve(result.value)\n                    : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected);\n            }\n        });\n    }\n    exports.awaiter = awaiter;\n    (function (awaiter) {\n        function factory(UserPromise) {\n            return function (thisArg, _arguments, P, generator) {\n                awaiter(thisArg, _arguments, P || UserPromise, generator);\n            };\n        }\n        awaiter.factory = factory;\n    })(awaiter = exports.awaiter || (exports.awaiter = {}));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = awaiter;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nexport interface Awaiter\r\n{\r\n\t(thisArg:any, _arguments:any[], P:PromiseConstructorLike, generator:Function):void;\r\n}\r\n\r\nexport function awaiter(\r\n\tthisArg:any,\r\n\t_arguments:any[],\r\n\tP:PromiseConstructorLike,\r\n\tgenerator:Function)\r\n{\r\n\tif(!P) throw \"Must provide Promise constructor.  Try injecting Promise using awaiter.factory(PromiseConstructorLike).\";\r\n\treturn new P((resolve, reject) =>\r\n\t{\r\n\t\tconst g = generator = generator.apply(thisArg, _arguments);\r\n\t\tstep(g.next());\r\n\r\n\t\tfunction fulfilled(value:any)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{ step(g.next(value)); }\r\n\t\t\tcatch(e)\r\n\t\t\t{ reject(e); }\r\n\t\t}\r\n\r\n\t\tfunction rejected(value:any)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{ step(g[\"throw\"](value)); }\r\n\t\t\tcatch(e)\r\n\t\t\t{ reject(e); }\r\n\t\t}\r\n\r\n\t\tfunction step(result:any)\r\n\t\t{\r\n\t\t\tresult.done\r\n\t\t\t\t? resolve(result.value)\r\n\t\t\t\t: new P(resolve => { resolve(result.value); }).then(fulfilled, rejected);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport module awaiter\r\n{\r\n\texport function factory(UserPromise:PromiseConstructorLike):Awaiter\r\n\t{\r\n\t\treturn (thisArg:any, _arguments:any[], P:PromiseConstructorLike, generator:Function) =>\r\n\t\t{\r\n\t\t\tawaiter(thisArg, _arguments, P || UserPromise, generator);\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default awaiter;\r\n"]}