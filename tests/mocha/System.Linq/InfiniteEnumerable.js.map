{"version":3,"sources":["System.Linq/InfiniteEnumerable.ts"],"names":[],"mappings":"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","file":"System.Linq/InfiniteEnumerable.js","sourcesContent":["///<reference path=\"../import.d.ts\"/>\r\n\r\nimport Enumerable from \"../../../source/System.Linq/Linq\";\r\nvar assert = require('../../../node_modules/assert/assert');\r\n\r\n\r\nvar source = Enumerable.toInfinity().asEnumerable();\r\n\r\ndescribe(\".doAction(...)\",()=>{\r\n\tit(\"should throw when disposed\",()=>{\r\n\t\tvar a = source.doAction(e=>{});\r\n\t\ta.force();\r\n\t\tvar n = a.getEnumerator();\r\n\t\tassert.ok(n.moveNext());\r\n\t\tn.dispose();\r\n\t\tassert.ok(!n.moveNext());\r\n\t\tn = a.getEnumerator();\r\n\t\tassert.ok(n.moveNext());\r\n\t\ta.dispose();\r\n\t\tassert.throws(()=>n.moveNext());\r\n\t});\r\n});\r\n\r\ndescribe(\".elementAt(x)\", ()=>\r\n{\r\n\r\n\tit(\"the index should match the value\", ()=>\r\n\t{\r\n\t\tfor(let i = 0; i<10; i++)\r\n\t\t{\r\n\t\t\tassert.equal(source.elementAt(i), i);\r\n\t\t}\r\n\t});\r\n\r\n});\r\n\r\ndescribe(\".singleOrDefault()\", ()=>\r\n{\r\n\r\n\tit(\"should be defaulted\", ()=>\r\n\t{\r\n\t\tassert.equal(source.singleOrDefault(), null);\r\n\t\tassert.equal(source.singleOrDefault(-1), -1);\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe(\".single()\", ()=>\r\n{\r\n\r\n\tit(\"should throw\", ()=>\r\n\t{\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tsource.single();\r\n\t\t});\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe(\".skip(count)\", ()=>\r\n{\r\n\tit(\"should return empty if Infinity\", ()=>\r\n\t{\r\n\t\tassert.equal(\r\n\t\t\tsource\r\n\t\t\t\t.skip(Infinity)\r\n\t\t\t\t.firstOrDefault(-1), -1);\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe(\".take(count)\", ()=>\r\n{\r\n\tit(\"should return empty if zero less\", ()=>\r\n\t{\r\n\t\tassert.equal(\r\n\t\t\tsource\r\n\t\t\t\t.take(0)\r\n\t\t\t\t.defaultIfEmpty(-1)\r\n\t\t\t\t.first(), -1);\r\n\r\n\t\tassert.equal(\r\n\t\t\tsource\r\n\t\t\t\t.take(-1)\r\n\t\t\t\t.firstOrDefault(-1), -1);\r\n\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tvar t = source.take(2);\r\n\t\t\tvar e = t.getEnumerator();\r\n\t\t\te.moveNext();\r\n\t\t\tt.dispose();\r\n\t\t\te.moveNext();\r\n\t\t});\r\n\r\n\t\tassert.doesNotThrow(()=>\r\n\t\t{\r\n\t\t\tvar e = false, f = false;\r\n\t\t\tassert.ok(\r\n\t\t\t\tsource\r\n\t\t\t\t\t.where(e=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(!e) throw \"Error\";\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catchError(error=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\te = error==\"Error\";\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finallyAction(()=>{\r\n\t\t\t\t\t\tf = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.isEmpty());\r\n\t\t\tassert.ok(e);\r\n\t\t\tassert.ok(f);\r\n\t\t});\r\n\r\n\t});\r\n\r\n\t// All .take operations should return a finite enumerable.\r\n\t// For other conditional take operations, like takeWhile, the isEndless property is indeterminate.\r\n\tit(\"should throw for Infinity\", ()=>\r\n\t{\r\n\t\tassert.throws(()=>\r\n\t\t{\r\n\t\t\tsource.take(Infinity);\r\n\t\t})\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe(\".choose()\", ()=>\r\n{\r\n\r\n\tit(\"should filter non-null\", ()=>\r\n\t{\r\n\t\tassert.equal(source.choose().first(),0);\r\n\t\tassert.equal(source.choose(s=>s).first(),0);\r\n\t});\r\n\r\n});\r\n\r\ndescribe(\".except()\", ()=>\r\n{\r\n\r\n\tit(\"should skip values that are excepted\", ()=>\r\n\t{\r\n\t\tassert.equal(source.except([0,1]).first(),2);\r\n\t\tassert.equal(source.except([1,2]).elementAt(2),4);\r\n\t\tsource.except([1,2]).dispose();\r\n\t});\r\n\r\n});\r\n\r\ndescribe(\".pairwise(selector)\", ()=>\r\n{\r\n\r\n\tit(\"should produce pair selected values\", ()=>\r\n\t{\r\n\t\tvar s = Enumerable.toInfinity().pairwise((a,b)=>\"\"+a+\"\"+b);\r\n\t\tassert.equal(s.elementAt(0),\"01\");\r\n\t\tassert.equal(s.elementAt(5),\"56\");\r\n\t\ts.dispose();\r\n\t});\r\n\r\n});\r\n"]}