{
  "version": 3,
  "sources": [
    "System/Promises/Promise.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "System/Promises/Promise.js",
  "sourcesContent": [
    "///<reference path=\"../../import.d.ts\"/>\r\n\r\nimport {Promise, PromiseBase} from \"../../../../source/System/Promises/Promise\";\r\nimport * as AU from \"../../../../source/System/Collections/Array/Utility\";\r\nimport Stopwatch from \"../../../../source/System/Diagnostics/Stopwatch\";\r\nimport {defer} from \"../../../../source/System/Threading/defer\";\r\nimport {LazyPromise} from \"../../../../source/System/Promises/LazyPromise\";\r\nimport {ObjectDisposedException} from \"../../../../source/System/Disposable/ObjectDisposedException\";\r\nvar assert = require('../../../../node_modules/assert/assert');\r\n\r\n\r\nvar REASON = \"this is not an error, but it might show up in the console\";\r\n\r\n// In browsers that support strict mode, it'll be `undefined`; otherwise, the global.\r\nvar calledAsFunctionThis = (function() { return this; }());\r\n\r\nafterEach(function()\r\n{\r\n\t//Q.onerror = null;\r\n});\r\n\r\ndescribe(\"computing sum of integers using promises\", ()=>\r\n{\r\n\t// Use triangular numbers...\r\n\tvar count = 1000;\r\n\tvar array = AU.range(1, count);\r\n\tvar swA = Stopwatch.startNew();\r\n\tvar answer = array.reduce((currentVal, nextVal)=>currentVal + nextVal, 0);\r\n\tswA.stop();\r\n\r\n\tit(\"should compute correct result without blowing stack (Synchronous) (lambda only)\", ()=>\r\n\t{\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn array\r\n\t\t\t.reduce((promise:PromiseBase<number>, nextVal:number) =>\r\n\t\t\t\tpromise.thenSynchronous(currentVal=>currentVal + nextVal), Promise.resolve(0))\r\n\t\t\t.thenSynchronous(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t//console.log(\"\");\r\n\t\t\t\t//console.log(\"Synchronous Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\tit(\"should compute correct result without blowing stack (lambda only)\", ()=>\r\n\t{\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn array\r\n\t\t\t.reduce((promise:PromiseBase<number>, nextVal:number) =>\r\n\t\t\t\tpromise.then(currentVal=>currentVal + nextVal), Promise.resolve(0))\r\n\t\t\t.then(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t//console.log(\"\");\r\n\t\t\t\t//console.log(\"Deferred Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\t// it(\"should compute correct result without blowing stack (All Deferred) (lambda only)\", ()=>\r\n\t// {\r\n\t// \tlet sw = Stopwatch.startNew();\r\n\t// \treturn array\r\n\t// \t\t.reduce((promise:PromiseBase<number>, nextVal:number) =>\r\n\t// \t\t\tpromise.then(\r\n\t// \t\t\t\tcurrentVal=>currentVal + nextVal).deferAll(), Promise.resolve(0).deferAll())\r\n\t// \t\t.then(value=>\r\n\t// \t\t{\r\n\t// \t\t\tsw.stop();\r\n\t// \t\t\t//console.log(\"\");\r\n\t// \t\t\t//console.log(\"All Deferred Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t// \t\t\tassert.equal(value, answer);\r\n\t// \t\t});\r\n\t// });\r\n\r\n\tit(\"should be deferring fulfillment\", ()=>\r\n\t{\r\n\r\n\t\tlet wasRun = false;\r\n\t\tvar r = Promise.resolve(true).then(()=>\r\n\t\t{\r\n\t\t\twasRun = true;\r\n\t\t});\r\n\t\tassert.ok(!wasRun, \"The promise should have deferred until after closure completed.\");\r\n\t\treturn r;\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe(\"Resolution and Rejection\", ()=>\r\n{\r\n\tit(\"should result in a fulfilled promise when given a value\", ()=>\r\n\t{\r\n\t\tvar f = Promise.resolve(5);\r\n\t\tassert.equal(f.result, 5);\r\n\t\tassert.equal(f.isSettled, true);\r\n\t\tassert.equal(f.isFulfilled, true);\r\n\t\tassert.equal(f.isRejected, false);\r\n\t});\r\n\r\n\tit(\"should result in a rejected promise when requesting rejected\", ()=>\r\n\t{\r\n\t\tvar f = Promise.reject(\"err\");\r\n\t\tassert.equal(f.error, \"err\");\r\n\t\tassert.equal(f.isSettled, true);\r\n\t\tassert.equal(f.isFulfilled, false);\r\n\t\tassert.equal(f.isRejected, true);\r\n\t});\r\n\r\n\tit(\"resolves multiple observers\", done=>\r\n\t{\r\n\t\tvar nextTurn = false;\r\n\r\n\t\tvar resolution = \"Ta-ram pam param!\";\r\n\t\tvar pending = new Promise<any>();\r\n\t\tvar count = 10;\r\n\t\tvar i = 0;\r\n\r\n\t\tfunction resolve(value:any)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t\tassert.equal(value, resolution);\r\n\t\t\tassert.ok(nextTurn);\r\n\t\t\tif(!nextTurn) i = count;\r\n\t\t\tif(i===count)\r\n\t\t\t{\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile(++i<=count)\r\n\t\t{\r\n\t\t\tpending.then(resolve);\r\n\t\t}\r\n\r\n\t\tpending.resolve(resolution);\r\n\t\ti = 0;\r\n\t\tnextTurn = true;\r\n\t});\r\n\r\n\tit(\"observers called even after throw (synchronous)\", ()=>\r\n\t{\r\n\t\tvar threw = false;\r\n\t\tvar pending = new Promise();\r\n\t\tpending.thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tthrew = true;\r\n\t\t\tthrow new Error(REASON);\r\n\t\t});\r\n\r\n\t\tpending.thenSynchronous(\r\n\t\t\tvalue=>assert.equal(value, 10),\r\n\t\t\t()=>assert.equal(\"not\", \"here\")\r\n\t\t);\r\n\r\n\t\tpending.resolve(10);\r\n\t\treturn pending;\r\n\t});\r\n\r\n\tit(\"observers called even after throw (asynchronous)\", ()=>\r\n\t{\r\n\t\tvar threw = false;\r\n\t\tvar pending = new Promise();\r\n\t\tpending.thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tthrew = true;\r\n\t\t\tthrow new Error(REASON);\r\n\t\t});\r\n\r\n\t\tpending.thenSynchronous(\r\n\t\t\tvalue=>assert.equal(value, 10),\r\n\t\t\t()=>assert.equal(\"not\", \"here\")\r\n\t\t);\r\n\r\n\t\tpending.resolve(10);\r\n\t\treturn pending;\r\n\t});\r\n\r\n\tconst BREAK = \"break\", NO = \"NO!\";\r\n\r\n\tfunction testPromiseFlow(p:PromiseBase<boolean>):PromiseBase<void>\r\n\t{\r\n\t\treturn p\r\n\t\t\t.then(null) // ensure pass through\r\n\t\t\t.then(v=> // onFulfilled\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v); // v === true\r\n\t\t\t\treturn v; // *\r\n\t\t\t}, ()=> // onRejected\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn v; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn false; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(!v);\r\n\t\t\t\treturn true; // *\r\n\t\t\t})\r\n\t\t\t.then<string>(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\tthrow BREAK; // *\r\n\t\t\t}, e=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn NO;\r\n\t\t\t})\r\n\t\t\t.then(null, null) // ensure pass through\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\t// The previous promise threw/rejected so should never go here.\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn NO;\r\n\t\t\t}, e=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t\treturn BREAK; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(v, BREAK);\r\n\t\t\t\treturn true; // *\r\n\t\t\t}, (e:any)=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t\t.then<boolean>(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\tthrow BREAK; // *\r\n\t\t\t})\r\n\t\t\t.catch(e=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t\treturn true; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn 10;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(v, 10);\r\n\t\t\t});\r\n\t}\r\n\r\n\tit(\"should follow expected promise behavior flow for a resolved promise\", ()=>\r\n\t{\r\n\t\treturn testPromiseFlow(Promise.resolve(true));\r\n\t});\r\n\r\n\r\n\tit(\"should follow expected promise behavior flow for a rejected promise\", ()=>\r\n\t{\r\n\t\treturn testPromiseFlow(\r\n\t\t\tPromise\r\n\t\t\t\t.reject(BREAK)\r\n\t\t\t\t.catch(v=>\r\n\t\t\t\t{\r\n\t\t\t\t\tassert.equal(v, BREAK);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}));\r\n\t});\r\n\r\n\r\n\tit(\"should follow expected promise behavior flow for a pending then resolved promise\", ()=>\r\n\t{\r\n\t\tvar p = new Promise<boolean>();\r\n\t\tassert.ok(p.isPending);\r\n\t\tp.resolve(true);\r\n\t\treturn testPromiseFlow(p);\r\n\t});\r\n\r\n\r\n\tit(\"should be able to use a then-able\", ()=>\r\n\t{\r\n\t\tvar p:any = Promise.createFrom((r:Promise.Fulfill<boolean,boolean>)=>\r\n\t\t{\r\n\t\t\tr(true);\r\n\t\t\treturn Promise.resolve(true);\r\n\t\t});\r\n\t\treturn testPromiseFlow(p);\r\n\t});\r\n\r\n\r\n\tit(\"should be able to use a lazy\", ()=>\r\n\t{\r\n\t\tit(\".deferFromNow\", ()=>\r\n\t\t{\r\n\t\t\tnew LazyPromise<boolean>(resolve=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false, \"Should not have triggered the resolution.\");\r\n\t\t\t}).delayFromNow(1000);\r\n\r\n\t\t\tvar elapsed = Stopwatch.startNew();\r\n\r\n\t\t\treturn testPromiseFlow(\r\n\t\t\t\tnew LazyPromise<boolean>(resolve=>defer(()=>resolve(true), 1000))\r\n\t\t\t\t\t.delayFromNow(1000)\r\n\t\t\t\t\t.thenThis(r=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar ms = elapsed.elapsedMilliseconds;\r\n\t\t\t\t\t\tassert.ok(ms>1000 && ms<2000);\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tit(\".deferFromNow\", ()=>\r\n\t\t{\r\n\t\t\tnew LazyPromise<boolean>(resolve=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false, \"Should not have triggered the resolution.\");\r\n\t\t\t}).delayAfterResolve(1000);\r\n\r\n\t\t\tvar elapsed = Stopwatch.startNew();\r\n\r\n\t\t\treturn testPromiseFlow(\r\n\t\t\t\tnew LazyPromise<boolean>(resolve=>defer(()=>resolve(true), 1000))\r\n\t\t\t\t\t.delayAfterResolve(1000)\r\n\t\t\t\t\t.thenThis(r=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar ms = elapsed.elapsedMilliseconds;\r\n\t\t\t\t\t\tassert.ok(ms>2000 && ms<3000);\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tit(\"should be able to use promise as a resolution\", ()=>\r\n\t{\r\n\t\tvar s = new Promise<boolean>();\r\n\t\tvar p = new Promise<boolean>(resolve=>\r\n\t\t{\r\n\t\t\tdefer(()=> resolve(s));\r\n\t\t});\r\n\t\tassert.ok(s.isPending);\r\n\t\tassert.ok(p.isPending);\r\n\t\ts.resolve(true);\r\n\t\treturn testPromiseFlow(p);\r\n\t});\r\n\r\n\tit(\"should be able to wait for all\", ()=>\r\n\t{\r\n\t\tvar other = new LazyPromise<number>(resolve=>\r\n\t\t{\r\n\t\t\tresolve(4);\r\n\t\t});\r\n\t\treturn Promise.waitAll<any>(\r\n\t\t\tother,\r\n\t\t\tPromise.resolve(3),\r\n\t\t\tPromise.resolve(2),\r\n\t\t\tPromise.reject(BREAK),\r\n\t\t\tPromise.resolve(1)\r\n\t\t).thenSynchronous((r:any[])=>\r\n\t\t{\r\n\t\t\tassert.equal(r[0].result, 4);\r\n\t\t\tassert.equal(r[1].result, 3);\r\n\t\t\tassert.equal(r[2].result, 2);\r\n\t\t\tassert.equal(r[3].result, void 0);\r\n\t\t\tassert.equal(r[3].error, BREAK);\r\n\t\t\tassert.equal(r[4].result, 1);\r\n\t\t},()=>assert.ok(false));\r\n\t});\r\n\r\n\tit(\"should be able to resolve all\", ()=>\r\n\t{\r\n\t\tvar other = new LazyPromise<number>(resolve=>\r\n\t\t{\r\n\t\t\tresolve(4);\r\n\t\t});\r\n\t\treturn Promise.all(\r\n\t\t\tother.delayFromNow(10).delayAfterResolve(10),\r\n\t\t\tPromise.resolve(3),\r\n\t\t\tPromise.resolve(2),\r\n\t\t\tPromise.resolve(1)\r\n\t\t).thenSynchronous(r=>\r\n\t\t{\r\n\t\t\tassert.equal(r[0], 4);\r\n\t\t\tassert.equal(r[1], 3);\r\n\t\t\tassert.equal(r[2], 2);\r\n\t\t\tassert.equal(r[3], 1);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should resolve as rejected\", ()=>\r\n\t{\r\n\t\tvar other = new LazyPromise<number>(resolve=>\r\n\t\t{\r\n\t\t\tresolve(4);\r\n\t\t});\r\n\t\treturn Promise.all(\r\n\t\t\tother,\r\n\t\t\tPromise.resolve(3),\r\n\t\t\tPromise.resolve(2),\r\n\t\t\tPromise.resolve(1),\r\n\t\t\tPromise.reject(-1)\r\n\t\t).thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tassert.ok(false);\r\n\t\t}, e=>\r\n\t\t{\r\n\t\t\tassert.equal(e, -1);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should be resolve the first to win the race\", ()=>\r\n\t{\r\n\t\tvar other = new LazyPromise<number>((resolve, reject)=>\r\n\t\t{\r\n\t\t\treject(4);\r\n\t\t});\r\n\t\treturn Promise.race(\r\n\t\t\tother.delayAfterResolve(40),\r\n\t\t\tPromise.resolve(3).delayFromNow(10),\r\n\t\t\tPromise.resolve(2).delayFromNow(20),\r\n\t\t\tPromise.resolve(1).delayFromNow(30)\r\n\t\t).thenSynchronous(r=>\r\n\t\t{\r\n\t\t\tassert.equal(r, 3);\r\n\t\t},()=>{\r\n\t\t\tassert.ok(false);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should be resolve the rejection\", ()=>\r\n\t{\r\n\t\treturn Promise.race(\r\n\t\t\tPromise.resolve(3).delayFromNow(20),\r\n\t\t\tPromise.resolve(2).delayAfterResolve(10),\r\n\t\t\tPromise.reject(1)\r\n\t\t).thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tassert.ok(false);\r\n\t\t}, e=>\r\n\t\t{\r\n\t\t\tassert.equal(e, 1);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should resolve the chain fulfilled promise result.\", ()=>\r\n\t\tnew Promise((resolve=>resolve(new Promise((resolve=>resolve(Promise.resolve(1)))))))\r\n\t\t\t.thenSynchronous(\r\n\t\t\t\tv=>assert.equal(v, 1),\r\n\t\t\t\t()=>assert.ok(false))\r\n\t);\r\n\r\n\tit(\"should resolve the rejected promise result.\", ()=>\r\n\t\tnew Promise((resolve=>resolve(Promise.reject(BREAK))))\r\n\t\t\t.thenSynchronous(\r\n\t\t\t\t()=>assert.ok(false),\r\n\t\t\t\te=>assert.equal(e, BREAK))\r\n\t);\r\n\r\n\tit(\"should rejected a disposed promise-result..\", ()=>\r\n\t\tnew Promise((resolve=>{\r\n\t\t\tvar r = Promise.resolve(1);\r\n\t\t\tr.dispose();\r\n\t\t\tresolve(r)\r\n\t\t}))\r\n\t\t\t.thenSynchronous(\r\n\t\t\t\t()=>assert.ok(false),\r\n\t\t\t\te=>assert.ok(e instanceof ObjectDisposedException))\r\n\t);\r\n\r\n});\r\n"
  ]
}