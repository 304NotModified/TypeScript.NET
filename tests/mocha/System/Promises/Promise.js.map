{"version":3,"sources":["System/Promises/Promise.ts"],"names":[],"mappings":";;;;;;;;;IAEA,wBAAsB,4CAA4C,CAAC,CAAA;IACnE,IAAY,EAAE,WAAM,qDAAqD,CAAC,CAAA;IAC1E,0BAAsB,iDAAiD,CAAC,CAAA;IACxE,IAAI,MAAM,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;IAG/D,IAAI,MAAM,GAAG,2DAA2D,CAAC;IAGzE,IAAI,oBAAoB,GAAG,CAAC,cAAa,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAE3D,SAAS,CAAC;IAGV,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0CAA0C,EAAE;QAGpD,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC/B,IAAI,GAAG,GAAG,mBAAS,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,UAAU,EAAE,OAAO,IAAG,OAAA,UAAU,GAAG,OAAO,EAApB,CAAoB,EAAE,CAAC,CAAC,CAAC;QAC1E,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,EAAE,CAAC,iFAAiF,EAAE;YAErF,IAAI,EAAE,GAAG,mBAAS,CAAC,QAAQ,EAAE,CAAC;YAC9B,MAAM,CAAC,KAAK;iBACV,MAAM,CAAC,UAAC,OAAuB,EAAE,OAAc;gBAC/C,OAAA,OAAO,CAAC,IAAI,CAAC,UAAA,UAAU,IAAE,OAAA,UAAU,GAAG,OAAO,EAApB,CAAoB,CAAC;YAA9C,CAA8C,EAAE,iBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnE,IAAI,CAAC,UAAA,KAAK;gBAEV,EAAE,CAAC,IAAI,EAAE,CAAC;gBAGV,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8EAA8E,EAAE;YAElF,IAAI,EAAE,GAAG,mBAAS,CAAC,QAAQ,EAAE,CAAC;YAC9B,MAAM,CAAC,KAAK;iBACV,MAAM,CAAC,UAAC,OAAuB,EAAE,OAAc;gBAC/C,OAAA,OAAO,CAAC,IAAI,CAAC,UAAA,UAAU,IAAE,OAAA,UAAU,GAAG,OAAO,EAApB,CAAoB,CAAC,CAAC,KAAK,EAAE;YAAtD,CAAsD,EAAE,iBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBACnF,IAAI,CAAC,UAAA,KAAK;gBAEV,EAAE,CAAC,IAAI,EAAE,CAAC;gBAGV,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE;YACrC,OAAA,KAAK;iBACH,MAAM,CAAC,UAAC,OAAuB,EAAE,OAAc;gBAE/C,IAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAA,UAAU;oBAEtC,MAAM,GAAG,IAAI,CAAC;oBACd,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC;gBAC7B,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,iEAAiE,CAAC,CAAC;gBACtF,MAAM,CAAC,CAAC,CAAC;YACV,CAAC,EAAE,iBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAXvB,CAWuB,CACvB,CAAC;IAEH,CAAC,CAAC,CAAC;IAGH,QAAQ,CAAC,0BAA0B,EAAE;QAEpC,EAAE,CAAC,yDAAyD,EAAE;YAE7D,IAAI,CAAC,GAAG,iBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE;YAElE,IAAI,CAAC,GAAG,iBAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,UAAA,IAAI;YAErC,IAAI,QAAQ,GAAG,KAAK,CAAC;YAErB,IAAI,UAAU,GAAG,kBAAkB,CAAC;YACpC,IAAI,OAAO,GAAG,iBAAO,CAAC,OAAO,EAAO,CAAC;YACrC,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,iBAAiB,KAAS;gBAEzB,CAAC,EAAE,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;gBAChC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC7B,EAAE,CAAA,CAAC,CAAC,KAAG,KAAK,CAAC,CACb,CAAC;oBACA,IAAI,EAAE,CAAC;gBACR,CAAC;YACF,CAAC;YAED,OAAM,EAAE,CAAC,IAAE,KAAK,EAChB,CAAC;gBACA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC;YAED,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC5B,CAAC,GAAG,CAAC,CAAC;YACN,QAAQ,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE;YAErD,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,OAAO,GAAG,iBAAO,CAAC,OAAO,EAAE,CAAC;YAChC,OAAO,CAAC,IAAI,CAAC;gBAEZ,KAAK,GAAG,IAAI,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,IAAI,CACX,UAAA,KAAK,IAAE,OAAA,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,EAAvB,CAAuB,EAC9B,cAAI,OAAA,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,EAA3B,CAA2B,CAC/B,CAAC;YAEF,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE;YAEtD,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,IAAI,OAAO,GAAG,iBAAO,CAAC,OAAO,EAAE,CAAC;YAChC,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;YAC/B,QAAQ,CAAC,IAAI,CAAC;gBAEb,KAAK,GAAG,IAAI,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,IAAI,CACZ,UAAA,KAAK,IAAE,OAAA,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,EAAvB,CAAuB,EAC9B,cAAI,OAAA,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,EAA3B,CAA2B,CAC/B,CAAC;YAEF,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,CAAC,QAAQ,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE;YAG5C,IAAM,KAAK,GAAG,OAAO,CAAC;YAEtB,iBAAO;iBACL,OAAO,CAAC,IAAI,CAAC;iBACb,IAAI,CAAC,UAAA,CAAC;gBAEN,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,CAAC,CAAC;YACV,CAAC,EAAE,UAAA,CAAC;gBAEH,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACjB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC,CAAC;iBACD,IAAI,CAAC,UAAA,CAAC;gBAEN,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,CAAC,CAAC;YACV,CAAC,CAAC;iBACD,IAAI,CAAC,UAAA,CAAC;gBAEN,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC;iBACD,IAAI,CAAC,UAAA,CAAC;gBAEN,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC;YACb,CAAC,CAAC;iBACD,IAAI,CAAU,UAAA,CAAC;gBAEf,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACb,MAAM,KAAK,CAAC;YACb,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,CAAK;gBAEX,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACjB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC,EAAE,UAAA,CAAC;gBAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,CAAK;gBAEX,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,EAAE,UAAC,CAAK;gBAER,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC;iBACD,IAAI,CAAC;gBACL,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAChB,MAAM,KAAK,CAAC;YACb,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACP,MAAM,CAAC,IAAI,CAAC;YACb,CAAC,CAAC;iBACD,IAAI,CAAC,UAAA,CAAC;gBACN,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QAGL,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","file":"System/Promises/Promise.js","sourcesContent":["///<reference path=\"../../import.d.ts\"/>\r\n\r\nimport {Promise} from \"../../../../source/System/Promises/Promise\";\r\nimport * as AU from \"../../../../source/System/Collections/Array/Utility\";\r\nimport Stopwatch from \"../../../../source/System/Diagnostics/Stopwatch\";\r\nvar assert = require('../../../../node_modules/assert/assert');\r\n\r\n\r\nvar REASON = \"this is not an error, but it might show up in the console\";\r\n\r\n// In browsers that support strict mode, it'll be `undefined`; otherwise, the global.\r\nvar calledAsFunctionThis = (function() { return this; }());\r\n\r\nafterEach(function()\r\n{\r\n\t//Q.onerror = null;\r\n});\r\n\r\ndescribe(\"computing sum of integers using promises\", ()=>\r\n{\r\n\t// Use triangular numbers...\r\n\tvar count = 10000;\r\n\tvar array = AU.range(1, count);\r\n\tvar swA = Stopwatch.startNew();\r\n\tvar answer = array.reduce((currentVal, nextVal)=>currentVal + nextVal, 0);\r\n\tswA.stop();\r\n\r\n\tit(\"should compute correct result without blowing stack (Synchronous) (lambda only)\", ()=>\r\n\t{\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn array\r\n\t\t\t.reduce((promise:Promise<number>, nextVal:number) =>\r\n\t\t\t\tpromise.then(currentVal=>currentVal + nextVal), Promise.resolve(0))\r\n\t\t\t.then(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t//console.log(\"\");\r\n\t\t\t\t//console.log(\"Synchronous Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\tit(\"should compute correct result without blowing stack (Deferred) (lambda only)\", ()=>\r\n\t{\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn array\r\n\t\t\t.reduce((promise:Promise<number>, nextVal:number) =>\r\n\t\t\t\tpromise.then(currentVal=>currentVal + nextVal).defer(), Promise.resolve(0).defer())\r\n\t\t\t.then(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t// console.log(\"\");\r\n\t\t\t\t// console.log(\"Deferred Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\tit(\"should be deferring fulfillment\", ()=>\r\n\t\tarray\r\n\t\t\t.reduce((promise:Promise<number>, nextVal:number) =>\r\n\t\t\t{\r\n\t\t\t\tlet wasRun = false;\r\n\t\t\t\tvar r = promise.defer().then(currentVal=>\r\n\t\t\t\t{\r\n\t\t\t\t\twasRun = true;\r\n\t\t\t\t\treturn currentVal + nextVal;\r\n\t\t\t\t});\r\n\t\t\t\tassert.ok(!wasRun, \"The promise should have deferred until after closure completed.\");\r\n\t\t\t\treturn r;\r\n\t\t\t}, Promise.resolve(0))\r\n\t);\r\n\r\n});\r\n\r\n\r\ndescribe(\"Resolution and Rejection\", ()=>\r\n{\r\n\tit(\"should result in a fulfilled promise when given a value\", ()=>\r\n\t{\r\n\t\tvar f = Promise.resolve(5);\r\n\t\tassert.equal(f.result, 5);\r\n\t\tassert.equal(f.isResolved, true);\r\n\t\tassert.equal(f.isFulfilled, true);\r\n\t\tassert.equal(f.isRejected, false);\r\n\t});\r\n\r\n\tit(\"should result in a rejected promise when requesting rejected\", ()=>\r\n\t{\r\n\t\tvar f = Promise.reject(\"err\");\r\n\t\tassert.equal(f.error, \"err\");\r\n\t\tassert.equal(f.isResolved, true);\r\n\t\tassert.equal(f.isFulfilled, false);\r\n\t\tassert.equal(f.isRejected, true);\r\n\t});\r\n\r\n\tit(\"resolves multiple observers\", done=>\r\n\t{\r\n\t\tvar nextTurn = false;\r\n\r\n\t\tvar resolution = \"Taram pam param!\";\r\n\t\tvar pending = Promise.pending<any>();\r\n\t\tvar deferred = pending.defer();\r\n\t\tvar count = 10;\r\n\t\tvar i = 0;\r\n\r\n\t\tfunction resolve(value:any)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t\tassert.equal(value, resolution);\r\n\t\t\tassert.equal(nextTurn, true);\r\n\t\t\tif(i===count)\r\n\t\t\t{\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile(++i<=count)\r\n\t\t{\r\n\t\t\tdeferred.then(resolve);\r\n\t\t}\r\n\r\n\t\tpending.resolve(resolution);\r\n\t\ti = 0;\r\n\t\tnextTurn = true;\r\n\t});\r\n\r\n\tit(\"observers called even after throw (synchronous)\", ()=>\r\n\t{\r\n\t\tvar threw = false;\r\n\t\tvar pending = Promise.pending();\r\n\t\tpending.then(()=>\r\n\t\t{\r\n\t\t\tthrew = true;\r\n\t\t\tthrow new Error(REASON);\r\n\t\t});\r\n\r\n\t\tpending.then(\r\n\t\t\tvalue=>assert.equal(value, 10),\r\n\t\t\t()=>assert.equal(\"not\", \"here\")\r\n\t\t);\r\n\r\n\t\tpending.resolve(10);\r\n\t\treturn pending;\r\n\t});\r\n\r\n\tit(\"observers called even after throw (asynchronous)\", ()=>\r\n\t{\r\n\t\tvar threw = false;\r\n\t\tvar pending = Promise.pending();\r\n\t\tvar deferred = pending.defer();\r\n\t\tdeferred.then(()=>\r\n\t\t{\r\n\t\t\tthrew = true;\r\n\t\t\tthrow new Error(REASON);\r\n\t\t});\r\n\r\n\t\tdeferred.then(\r\n\t\t\tvalue=>assert.equal(value, 10),\r\n\t\t\t()=>assert.equal(\"not\", \"here\")\r\n\t\t);\r\n\r\n\t\tpending.resolve(10);\r\n\t\treturn deferred;\r\n\t});\r\n\r\n\tit(\"follows expected promise behavior flow\", ()=>\r\n\t{\r\n\r\n\t\tconst BREAK = \"break\";\r\n\r\n\t\tPromise\r\n\t\t\t.resolve(true)\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn v;\r\n\t\t\t}, e=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn e;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn v;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(!v);\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\t.then<boolean>(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\tthrow BREAK;\r\n\t\t\t})\r\n\t\t\t.then((v:any)=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn v;\r\n\t\t\t}, e=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t\treturn BREAK;\r\n\t\t\t})\r\n\t\t\t.then((v:any)=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(v, BREAK);\r\n\t\t\t\treturn BREAK;\r\n\t\t\t}, (e:any)=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t\treturn BREAK;\r\n\t\t\t})\r\n\t\t\t.then(()=>{\r\n\t\t\t\tassert.ok(true);\r\n\t\t\t\tthrow BREAK;\r\n\t\t\t})\r\n\t\t\t.catch(e=>{\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\t.then(v=>{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t});\r\n\r\n\r\n\t});\r\n\r\n});\r\n"]}