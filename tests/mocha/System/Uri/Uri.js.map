{"version":3,"sources":["system/uri/uri.ts"],"names":[],"mappings":";;;;;;;;IAEA,oBAAgB,mCAAmC,CAAC,CAAA;IACpD,IAAI,MAAM,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;IAE/D,IAAM,IAAI,GAAG,qBAAqB,CAAC;IACnC,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,EAAC,MAAM,CAAC,EAAC,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC,CAAC;IACjD,IAAM,KAAK,GAAG,GAAG,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAGhE,IAAI,CAAC,GAAG,aAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;IAE/B,QAAQ,CAAC,OAAO,EAAE;QAEjB,EAAE,CAAC,eAAe,GAAG,IAAI,EAAE;YAE1B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,QAAQ,EAAE;QAElB,EAAE,CAAC,eAAe,GAAG,KAAK,EAAE;YAE3B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE;QAExB,EAAE,CAAC,qCAAqC,EAAE;YAEzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAIH,QAAQ,CAAC,wBAAwB,EAAE;QAElC,IAAM,IAAI,GAAG,OAAO,CAAC,0CAA0C,CAAC,CAAC;QAEjE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;QAEjC,QAAQ,CAAC,OAAO,EAAE;YAEjB,EAAE,CAAC,eAAe,GAAG,IAAI,EAAE;gBAE1B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,QAAQ,EAAE;YAElB,EAAE,CAAC,eAAe,GAAG,KAAK,EAAE;gBAE3B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"System/Uri/Uri.js","sourcesContent":["///<reference path=\"../../import.d.ts\"/>\r\n\r\nimport Uri from '../../../../source/System/Uri/Uri';\r\nvar assert = require('../../../../node_modules/assert/assert');\r\n\r\nconst path = '/one/two/three.html';\r\nconst params = [['four','five'],['six','seven']];\r\nconst query = '?'+params[0].join('=')+'&' + params[1].join('=');\r\n\r\n\r\nvar u = Uri.from(path + query);\r\n\r\ndescribe('.path', ()=>\r\n{\r\n\tit('should equal ' + path, ()=>\r\n\t{\r\n\t\tassert.equal(u.path, path);\r\n\t});\r\n});\r\n\r\ndescribe('.query', ()=>\r\n{\r\n\tit('should equal ' + query, ()=>\r\n\t{\r\n\t\tassert.equal(u.query, query);\r\n\t});\r\n});\r\n\r\ndescribe('.queryParams', ()=>\r\n{\r\n\tit('should equal contain correct values', ()=>\r\n\t{\r\n\t\tassert.equal(u.queryParams[params[0][0]], params[0][1]);\r\n\t\tassert.equal(u.queryParams[params[1][0]], params[1][1]);\r\n\t});\r\n});\r\n\r\n\r\n\r\ndescribe('es6 > babel > commonjs', ()=>\r\n{\r\n\tconst Uri2 = require('../../../../dist/commonjs/System/Uri/Uri');\r\n\r\n\tvar u2 = Uri2.from(path + query);\r\n\r\n\tdescribe('.path', ()=>\r\n\t{\r\n\t\tit('should equal ' + path, ()=>\r\n\t\t{\r\n\t\t\tassert.equal(u2.path, path);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('.query', ()=>\r\n\t{\r\n\t\tit('should equal ' + query, ()=>\r\n\t\t{\r\n\t\t\tassert.equal(u2.query, query);\r\n\t\t});\r\n\t});\r\n});\r\n"]}