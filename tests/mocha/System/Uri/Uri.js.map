{"version":3,"sources":["System/Uri/Uri.ts"],"names":[],"mappings":"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","file":"Uri.js","sourcesContent":["///<reference types=\"assert\"/>\r\nimport assert = require(\"assert\");\r\nimport Uri from \"../../../../dist/commonjs/System/Uri/Uri\";\r\nimport * as Scheme from \"../../../../dist/commonjs/System/Uri/Scheme\";\r\nimport Functions from \"../../../../dist/commonjs/System/Functions\";\r\n\r\n\r\nconst pathAfterRoot= 'one/two/three.html';\r\nconst path = '/'+pathAfterRoot;\r\nconst params = [['four','five'],['six','seven']];\r\nconst query = '?'+params[0].join('=')+'&' + params[1].join('=');\r\n \r\n\r\nvar u = Uri.from(path + query);\r\n\r\ndescribe('.scheme', ()=>\r\n{\r\n\tit('should equal',()=>\r\n\t{\r\n\t\tassert.equal((new Uri(null,'','',null,'',null)).scheme,null);\r\n\t\tassert.equal((new Uri(\"http\",'','',null,'',null)).scheme,\"http\");\r\n\t\tassert.equal((new Uri(Scheme.HTTP,'','',null,'',null)).scheme,\"http\");\r\n\t});\r\n\r\n\tit('should throw',()=>\r\n\t{\r\n\t\tassert.throws(()=>{new Uri(<any>64,'','',null,'',null);});\r\n\t});\r\n});\r\n\r\ndescribe('.port', ()=>\r\n{\r\n\tit('should equal',()=>\r\n\t{\r\n\t\tvar d = 'x.com', port = 80;\r\n\t\tassert.equal((new Uri(null,'',d,0,'',null)).port,0);\r\n\t\tassert.equal((new Uri(null,'',d,null,'',null)).port,null);\r\n\t\tassert.equal((new Uri(null,'',d,<any>'','',null)).port,null);\r\n\t\tassert.equal((new Uri(null,'',d,NaN,'',null)).port,null);\r\n\t\tassert.equal((new Uri(null,'',d,port,'',null)).port,port);\r\n\t\tassert.equal((new Uri(null,'',d,<any>(port+''),'',null)).port,port);\r\n\t});\r\n\tit('should throw',()=>\r\n\t{\r\n\t\tassert.throws(()=>{new Uri(null,'','',<any>'foo','',null);});\r\n\t\tassert.throws(()=>{new Uri(null,'','',<any>{},'',null);});\r\n\t\tassert.throws(()=>{new Uri(null,'','',-1,'',null);});\r\n\t\tassert.throws(()=>{new Uri(null,'','',Infinity,'',null);});\r\n\t});\r\n\r\n});\r\n\r\ndescribe('.path', ()=>\r\n{\r\n\tit('should equal ' + path, ()=>\r\n\t{\r\n\t\tassert.equal(u.path, path);\r\n\t\tassert.equal((new Uri(null,null,null,null,pathAfterRoot)).path, pathAfterRoot);\r\n\t\tassert.equal(Uri.toString({\r\n\t\t\tpath:pathAfterRoot,\r\n\t\t\tfragment:'#x'\r\n\t\t}), pathAfterRoot+\"#x\");\r\n\t});\r\n\r\n\tit('should allow null',()=>\r\n\t{\r\n\t\tassert.equal((new Uri(null,'','',null,'',null)).path,null);\r\n\t\tassert.equal((new Uri(Scheme.HTTP,'','',null,'',null)).path,null);\r\n\t\tassert.equal((new Uri('http','','',null,'',null)).path,null);\r\n\t});\r\n});\r\n\r\ndescribe('.fragment', ()=>\r\n{\r\n\tit('should equal', ()=>\r\n\t{\r\n\t\tassert.equal(u.path, path);\r\n\t});\r\n\r\n\tit('should allow null',()=>\r\n\t{\r\n\t\tassert.equal((new Uri(null,'','',null,'',null)).path,null);\r\n\t\tassert.equal((new Uri(Scheme.HTTP,'','',null,'',null)).path,null);\r\n\t\tassert.equal((new Uri('http','','',null,'',null)).path,null);\r\n\t});\r\n});\r\n\r\ndescribe('.from(uri)', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tvar c1 = Uri.from(u);\r\n\t\tassert.ok(u.equals(c1));\r\n\r\n\t\tvar c2 = Uri.from({},u);\r\n\t\tassert.ok(u.equals(c2));\r\n\r\n\t});\r\n});\r\n\r\ndescribe('.updateQuery(query)', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tvar c = u.updateQuery(\"x=y\");\r\n\t\tassert.equal(c.queryParams[\"x\"],\"y\");\r\n\t});\r\n});\r\n\r\ndescribe('.pathSegments', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tassert.equal(u.pathSegments.join(''),u.path);\r\n\t});\r\n});\r\n\r\ndescribe('.getAuthority(uri)', ()=>\r\n{\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tassert.equal(Uri.getAuthority({host:'a',port:80,userInfo:'b',path:'xxx'}),\"//b@a:80\");\r\n\t\tassert.equal(Uri.getAuthority({host:'a',port:80,path:'xxx'}),\"//a:80\");\r\n\t\tassert.equal(Uri.getAuthority({host:'a',userInfo:'b',path:'xxx'}),\"//b@a\");\r\n\t\tassert.equal(Uri.getAuthority({host:'a'}),\"//a\");\r\n\t});\r\n\r\n\tit('should throw', ()=>\r\n\t{\r\n\t\tassert.throws(()=>{\r\n\t\t\tUri.getAuthority({userInfo:'b'});\r\n\t\t});\r\n\t\tassert.throws(()=>{\r\n\t\t\tUri.getAuthority({port:80});\r\n\t\t});\r\n\t});\r\n\r\n});\r\n\r\ndescribe('.copyOf(), .copyTo() & .equals()',()=>{\r\n\tit('should equal the copy',()=>{\r\n\t\tassert.ok(u.equals(Uri.copyOf(u)));\r\n\t\tassert.ok(u.equals(u.copyTo({})));\r\n\t});\r\n});\r\n\r\ndescribe('.parse(url)',()=>{\r\n\tit('should throw',()=>{\r\n\t\tassert.throws(()=>Uri.parse(null,true));\r\n\t});\r\n});\r\n\r\ndescribe('.toString(uri)',()=>{\r\n\tit('should throw',()=>{\r\n\t\tassert.throws(()=>Uri.toString({\r\n\t\t\tscheme:\"http\", // Can't target a scheme when no authority is provided.\r\n\t\t\tpath:pathAfterRoot,\r\n\t\t\tfragment:'#x'\r\n\t\t}));\r\n\t});\r\n\r\n\tit('should equal',()=>{\r\n\t\tassert.equal(Uri.toString({\r\n\t\t\tscheme: \"http\",\r\n\t\t\thost:\"x.com\",\r\n\t\t\tpath: pathAfterRoot,\r\n\t\t\tfragment: '#x',\r\n\t\t}),\"http://x.com\"+path+\"#x\");\r\n\t});\r\n});\r\n\r\ndescribe('.tryParse(uri)',()=>{\r\n\tit('should return false if invalid',()=>{\r\n\t\tassert.ok(!Uri.tryParse(null,Functions.Blank));\r\n\t});\r\n\r\n\tit('should parse correctly',()=>{\r\n\t\tvar fragment = \"x##?y\",full = \"http://x.com/y/z#\"+fragment;\r\n\t\tassert.ok(Uri.tryParse(full,out=>{\r\n\t\t\tassert.equal(out.fragment,fragment);\r\n\t\t\tassert.equal(Uri.toString(out),full);\r\n\t\t}));\r\n\r\n\t\tassert.ok(Uri.tryParse(\"http://x.com/y/z?#\",out=>{\r\n\t\t\tassert.equal(out.query,undefined);\r\n\t\t\tassert.equal(out.fragment,undefined);\r\n\t\t}));\r\n\r\n\t\tassert.ok(!Uri.tryParse(\"hello//x.com/y/z#\"+fragment,Functions.Blank));\r\n\t\tassert.ok(!Uri.tryParse(\"hello://x.com/y/z#\"+fragment,Functions.Blank));\r\n\t\tassert.ok(Uri.tryParse(\" ://x.com/y/z#\"+fragment,Functions.Blank));\r\n\t\tassert.ok(Uri.tryParse(\"x.com\",out=>{\r\n\t\t\tassert.equal(out.path,undefined);\r\n\t\t}));\r\n\t\tassert.ok(Uri.tryParse(\"x.com/\",out=>{\r\n\t\t\tassert.equal(out.path,'/');\r\n\t\t}));\r\n\t\tassert.ok(Uri.tryParse(\"me@x.com/\"+fragment,out=>{\r\n\t\t\tassert.equal(out.userInfo,'me');\r\n\t\t}));\r\n\t\tassert.ok(Uri.tryParse(\"@x.com/\"+fragment,out=>{\r\n\t\t\tassert.equal(out.userInfo,undefined);\r\n\t\t}));\r\n\r\n\t\tassert.ok(Uri.tryParse(\"@x.com:80\"+fragment,out=>{\r\n\t\t\tassert.equal(out.port,80);\r\n\t\t}));\r\n\t\tassert.ok(!Uri.tryParse(\"@x.com:\"+fragment,Functions.Blank));\r\n\r\n\t\tassert.ok(!Uri.tryParse(\"\",out=>{\r\n\t\t\tassert.equal(out.scheme,undefined);\r\n\t\t\tassert.equal(out.host,undefined);\r\n\t\t\tassert.equal(out.userInfo,undefined);\r\n\t\t\tassert.equal(out.port,undefined);\r\n\t\t\tassert.equal(out.path,undefined);\r\n\t\t\tassert.equal(out.query,undefined);\r\n\t\t\tassert.equal(out.fragment,undefined);\r\n\t\t}));\r\n\t});\r\n\r\n});\r\n\r\ndescribe('.baseUri', ()=>\r\n{\r\n\tit('should equal ' + path, ()=>\r\n\t{\r\n\t\tassert.equal(u.baseUri, path);\r\n\t});\r\n});\r\n\r\ndescribe('.query', ()=>\r\n{\r\n\tit('should equal ' + query, ()=>\r\n\t{\r\n\t\tassert.equal(u.query, query);\r\n\t});\r\n});\r\n\r\n\r\n\r\ndescribe('.queryParams', ()=>\r\n{\r\n\tit('should equal contain correct values', ()=>\r\n\t{\r\n\t\tassert.equal(u.queryParams[params[0][0]], params[0][1]);\r\n\t\tassert.equal(u.queryParams[params[1][0]], params[1][1]);\r\n\t});\r\n\r\n\r\n});\r\n\r\n\r\ndescribe('KVP versus Tuple', ()=>\r\n{\r\n\r\n\tit('should be equal', ()=>\r\n\t{\r\n\t\tvar uTuples = new Uri(u.scheme,u.userInfo,u.host,u.port,u.path,<any>params);\r\n\t\tvar uKvp = new Uri(u.scheme,u.userInfo,u.host,u.port,u.path,u.queryParams);\r\n\r\n\t\tassert.equal(uTuples.toString(),uKvp.toString());\r\n\t});\r\n\r\n\r\n\r\n});\r\n\r\n// Disabled for code coverage report\r\n// describe('es6 > babel > commonjs', ()=>\r\n// {\r\n// \tconst Uri2 = require('../../../../dist/commonjs/System/Uri/Uri').default;\r\n//\r\n// \tvar u2 = Uri2.from(path + query);\r\n//\r\n// \tdescribe('.path', ()=>\r\n// \t{\r\n// \t\tit('should equal ' + path, ()=>\r\n// \t\t{\r\n// \t\t\tassert.equal(u2.path, path);\r\n// \t\t});\r\n// \t});\r\n//\r\n// \tdescribe('.query', ()=>\r\n// \t{\r\n// \t\tit('should equal ' + query, ()=>\r\n// \t\t{\r\n// \t\t\tassert.equal(u2.query, query);\r\n// \t\t});\r\n// \t});\r\n// });\r\n"]}