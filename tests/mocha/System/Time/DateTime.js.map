{"version":3,"sources":["System/Time/DateTime.ts"],"names":[],"mappings":";;;;;;;;;IAEA,yBAAqB,yCAAyC,CAAC,CAAA;IAC/D,IAAI,MAAM,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;IAK/D,QAAQ,CAAC,8CAA8C,EAAC;QAGvD,IAAM,SAAS,GAAG,IAAI,CAAC;QACvB,IAAM,YAAY,GAAG;YACpB,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;YACF,EAAE;SACF,CAAC;QAEF,EAAE,CAAC,uCAAuC,EAAE;YAE3C,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,SAAS,EAAC,CAAC,GAAC,IAAI,EAAC,CAAC,EAAE,EAAE,CAAC;gBAChC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,EAAE,EAAC,CAAC,EAAE,EAAE,CAAC;oBACtB,EAAE,CAAA,CAAC,CAAC,IAAE,CAAC,IAAI,kBAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACnC,MAAM,CAAC,KAAK,CAAC,kBAAQ,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;oBAC5C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,MAAM,CAAC,KAAK,CAAC,kBAAQ,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,CAAC;gBACF,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","file":"System/Time/DateTime.js","sourcesContent":["///<reference path=\"../../import.d.ts\"/>\r\n\r\nimport DateTime from '../../../../source/System/Time/DateTime';\r\nvar assert = require('../../../../node_modules/assert/assert');\r\n\r\n\r\n\r\n\r\ndescribe(\".daysInMonth(year,month) & .isLeapYear(year)\",()=>{\r\n\r\n\r\n\tconst startYear = 2000;\r\n\tconst daysPerMonth = [\r\n\t\t31, //January,\r\n\t\t28,//February,\r\n\t\t31,//March,\r\n\t\t30,//April,\r\n\t\t31,//May,\r\n\t\t30,//June,\r\n\t\t31,//July,\r\n\t\t31,//August,\r\n\t\t30,//September,\r\n\t\t31,//October,\r\n\t\t30,//November,\r\n\t\t31//December\r\n\t];\r\n\r\n\tit('should match actual Gregorian values.', ()=>\r\n\t{\r\n\t\tfor(let y=startYear;y<2004;y++) {\r\n\t\t\tfor(let m=0;m<12;m++) {\r\n\t\t\t\tif(m==1 && DateTime.isLeapYear(y)) {\r\n\t\t\t\t\tassert.equal(DateTime.daysInMonth(y,m),29);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tassert.equal(DateTime.daysInMonth(y,m),daysPerMonth[m]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n});\r\n\r\n"]}