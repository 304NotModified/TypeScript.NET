{"version":3,"sources":["System/Collections/Arrays/Sort.ts"],"names":[],"mappings":"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","file":"System/Collections/Arrays/Sort.js","sourcesContent":["///<reference path=\"../../../import\"/>\r\n\r\nimport * as assert from \"assert\";\r\nimport {Selector} from \"../../../../../dist/commonjs/System/FunctionTypes\";\r\nimport {quickSort} from \"../../../../../dist/commonjs/System/Collections/Array/Sort/quickSort\";\r\nimport {mergeSort} from \"../../../../../dist/commonjs/System/Collections/Array/Sort/mergeSort\";\r\nimport {areEqual} from \"../../../../../dist/commonjs/System/Collections/Array/Compare\";\r\nimport {compare} from \"../../../../../dist/commonjs/System/Compare\";\r\n\r\n\r\nfunction arraySort(a:number[]):number[]\r\n{\r\n\ta.sort(compare);\r\n\treturn a;\r\n}\r\n\r\nfunction nullSort(a:number[]):number[]\r\n{\r\n\treturn a;\r\n}\r\n\r\nconst\r\n\tsource:number[][] = Object.freeze([\r\n\t\tObject.freeze([2, 5, 4, 1, 3, 10, 20, 14, 7, 2, 5, 4, 1, 3, 10, 20, 14, 7]),\r\n\t\tObject.freeze([2, 18, 14, 37, 20, 33, 26, 21, 5, 31, 2, 18, 14, 37, 20, 33, 26, 21, 5, 31]),\r\n\t\tObject.freeze([9, 19, 5, 7, 38, 13, 20, 2, 12, 35, 9, 19, 5, 7, 38, 13, 20, 2, 12, 35])\r\n\t]),\r\n\tsourceCount       = source.length;\r\n\r\nfunction test(target:number[][], fn:Selector<number[],number[]>):void\r\n{\r\n\tfor(let i = 0; i<sourceCount; i++)\r\n\t{\r\n\t\ttarget[i] = fn(source[i].slice());\r\n\t}\r\n\r\n}\r\n\r\nfunction assertResults(result:number[][]):void\r\n{\r\n\tfor(let i = 0; i<sourceCount; i++)\r\n\t{\r\n\t\tvar ok = areEqual(arrayResults[i], result[i]);\r\n\t\tif(!ok) console.warn(result);\r\n\t\tassert.ok(ok);\r\n\t}\r\n}\r\n\r\n\r\nconst arrayResults:number[][] = [];\r\nfunction dummy()\r\n{\r\n\ttest(arrayResults, nullSort);\r\n}\r\nfunction array()\r\n{\r\n\ttest(arrayResults, arraySort);\r\n}\r\n\r\nconst quickResults:number[][] = [];\r\nfunction quick()\r\n{\r\n\ttest(quickResults, quickSort);\r\n}\r\n\r\nconst mergeResults:number[][] = [];\r\nfunction merge()\r\n{\r\n\ttest(mergeResults, mergeSort);\r\n}\r\n\r\n\r\nconst count = 1; // Change to 500000 to performance test/log\r\nfunction measure(fn:Function):number\r\n{\r\n\tvar time = Date.now();\r\n\r\n\tfor(let i = 0; i<count; i++)\r\n\t{\r\n\t\tfn();\r\n\t}\r\n\r\n\treturn Date.now() - time;\r\n}\r\n\r\nfunction report(name:string, fn:Function):void\r\n{\r\n\tif(count>1)\r\n\t\tconsole.log(name, measure(fn), \"milliseconds\");\r\n}\r\n\r\nif(count>1) {\r\n\tconsole.log(count + \" iterations running...\");\r\n}\r\n\r\nreport(\"Dummy Sort (copy only):\", dummy);\r\nreport(\"Array Sort:\", array);\r\narray();\r\n\r\ndescribe(\"Quick Sort\", ()=>\r\n{\r\n\treport(\"Quick Sort:\", quick);\r\n\tit(\"should match array sort\", ()=>\r\n\t{\r\n\t\tquick();\r\n\t\tassertResults(quickResults);\r\n\t});\r\n});\r\n\r\ndescribe(\"Merge Sort\", ()=>\r\n{\r\n\treport(\"Merge Sort:\", merge);\r\n\tit(\"should match array sort\", ()=>\r\n\t{\r\n\t\tmerge();\r\n\t\tassertResults(mergeResults);\r\n\t});\r\n});\r\n\r\n\r\n\r\n"]}