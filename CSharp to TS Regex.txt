namespace to module
\bnamespace\s
module 

Prep statics
(^\s+)static\b
$1private static

Convert out and ref
(out|ref)
/*$1*/

Convert C# params to ECMA
([(,/]\s*)([^(), /*]+)\s+(\w+)\s*([,)])
$1$3:$2$4

Convert methods
\b(?!else|if)(\w\S*)(\t| )+(\w\S*)\s*\(([^()]*)\)(\s*\n\s*{)
$2($3):$1 $4

Convert simple get
(\w+\s+)?(\w+\s+)(\w+)(\s|\n)*{(\s|\n)*get(\s|\n)*({[^{}]*})(\s|\n)*}
$1 get $3():$2\n$7

Convert vars
(^\s+|for\()(?!return|goto|throw|var)(\w+)\s+(\w\S*)(\s*([=][^=]|;))
$1var $3:$2$4

Specify compiler integer
(\s*:\s*int\s*=\s*\d+)\s*([,;])
$1 | 0$2

Convert bool to boolean
\b(bool|Boolean)\b
boolean

Convert number casting
\((int|uint|short|ushort|long|ulong|float|double|decimal)\)
<$1>


Convert number types.
( [^*<])(int|uint|short|ushort|long|ulong|float|double|decimal)\b
$1number/*$2*/


Remove unnecessary public
public static
static

Comment unsupported words
(\s+)(internal|unsafe|readonly|volatile)(\s+)
$1/*$2*/$3

Comment unsafe
(\s+)(unsafe)(\s+)
$1/*$2*/$3

Passify throw new
\bthrow new ([^;]+);
throw '$1';